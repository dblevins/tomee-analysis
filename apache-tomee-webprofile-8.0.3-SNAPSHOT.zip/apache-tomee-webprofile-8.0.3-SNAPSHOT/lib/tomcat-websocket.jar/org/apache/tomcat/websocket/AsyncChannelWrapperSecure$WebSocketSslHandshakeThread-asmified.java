package asm.org.apache.tomcat.websocket;
import org.objectweb.asm.AnnotationVisitor;
import org.objectweb.asm.Attribute;
import org.objectweb.asm.ClassReader;
import org.objectweb.asm.ClassWriter;
import org.objectweb.asm.ConstantDynamic;
import org.objectweb.asm.FieldVisitor;
import org.objectweb.asm.Handle;
import org.objectweb.asm.Label;
import org.objectweb.asm.MethodVisitor;
import org.objectweb.asm.Opcodes;
import org.objectweb.asm.RecordComponentVisitor;
import org.objectweb.asm.Type;
import org.objectweb.asm.TypePath;
public class AsyncChannelWrapperSecure$WebSocketSslHandshakeThreadDump implements Opcodes {

public static byte[] dump () throws Exception {

ClassWriter classWriter = new ClassWriter(0);
FieldVisitor fieldVisitor;
RecordComponentVisitor recordComponentVisitor;
MethodVisitor methodVisitor;
AnnotationVisitor annotationVisitor0;

classWriter.visit(V1_8, ACC_SUPER, "org/apache/tomcat/websocket/AsyncChannelWrapperSecure$WebSocketSslHandshakeThread", null, "java/lang/Thread", null);

classWriter.visitInnerClass("org/apache/tomcat/websocket/AsyncChannelWrapperSecure$WrapperFuture", "org/apache/tomcat/websocket/AsyncChannelWrapperSecure", "WrapperFuture", ACC_PRIVATE | ACC_STATIC);

classWriter.visitInnerClass("javax/net/ssl/SSLEngineResult$HandshakeStatus", "javax/net/ssl/SSLEngineResult", "HandshakeStatus", ACC_PUBLIC | ACC_FINAL | ACC_STATIC | ACC_ENUM);

classWriter.visitInnerClass("javax/net/ssl/SSLEngineResult$Status", "javax/net/ssl/SSLEngineResult", "Status", ACC_PUBLIC | ACC_FINAL | ACC_STATIC | ACC_ENUM);

classWriter.visitInnerClass("org/apache/tomcat/websocket/AsyncChannelWrapperSecure$WebSocketSslHandshakeThread", "org/apache/tomcat/websocket/AsyncChannelWrapperSecure", "WebSocketSslHandshakeThread", ACC_PRIVATE);

classWriter.visitInnerClass("org/apache/tomcat/websocket/AsyncChannelWrapperSecure$1", null, null, ACC_STATIC | ACC_SYNTHETIC);

{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_FINAL, "hFuture", "Lorg/apache/tomcat/websocket/AsyncChannelWrapperSecure$WrapperFuture;", "Lorg/apache/tomcat/websocket/AsyncChannelWrapperSecure$WrapperFuture<Ljava/lang/Void;Ljava/lang/Void;>;", null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE, "handshakeStatus", "Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE, "resultStatus", "Ljavax/net/ssl/SSLEngineResult$Status;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_FINAL | ACC_SYNTHETIC, "this$0", "Lorg/apache/tomcat/websocket/AsyncChannelWrapperSecure;", null, null);
fieldVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "<init>", "(Lorg/apache/tomcat/websocket/AsyncChannelWrapperSecure;Lorg/apache/tomcat/websocket/AsyncChannelWrapperSecure$WrapperFuture;)V", "(Lorg/apache/tomcat/websocket/AsyncChannelWrapperSecure$WrapperFuture<Ljava/lang/Void;Ljava/lang/Void;>;)V", null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/tomcat/websocket/AsyncChannelWrapperSecure$WebSocketSslHandshakeThread", "this$0", "Lorg/apache/tomcat/websocket/AsyncChannelWrapperSecure;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/Thread", "<init>", "()V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/tomcat/websocket/AsyncChannelWrapperSecure$WebSocketSslHandshakeThread", "hFuture", "Lorg/apache/tomcat/websocket/AsyncChannelWrapperSecure$WrapperFuture;");
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(2, 3);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "run", "()V", null, null);
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/lang/Exception");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/tomcat/websocket/AsyncChannelWrapperSecure$WebSocketSslHandshakeThread", "this$0", "Lorg/apache/tomcat/websocket/AsyncChannelWrapperSecure;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/tomcat/websocket/AsyncChannelWrapperSecure", "access$200", "(Lorg/apache/tomcat/websocket/AsyncChannelWrapperSecure;)Ljavax/net/ssl/SSLEngine;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "javax/net/ssl/SSLEngine", "beginHandshake", "()V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/tomcat/websocket/AsyncChannelWrapperSecure$WebSocketSslHandshakeThread", "this$0", "Lorg/apache/tomcat/websocket/AsyncChannelWrapperSecure;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/tomcat/websocket/AsyncChannelWrapperSecure", "access$600", "(Lorg/apache/tomcat/websocket/AsyncChannelWrapperSecure;)Ljava/nio/ByteBuffer;", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/tomcat/websocket/AsyncChannelWrapperSecure$WebSocketSslHandshakeThread", "this$0", "Lorg/apache/tomcat/websocket/AsyncChannelWrapperSecure;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/tomcat/websocket/AsyncChannelWrapperSecure", "access$600", "(Lorg/apache/tomcat/websocket/AsyncChannelWrapperSecure;)Ljava/nio/ByteBuffer;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/nio/ByteBuffer", "limit", "()I", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/nio/ByteBuffer", "position", "(I)Ljava/nio/Buffer;", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/tomcat/websocket/AsyncChannelWrapperSecure$WebSocketSslHandshakeThread", "this$0", "Lorg/apache/tomcat/websocket/AsyncChannelWrapperSecure;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/tomcat/websocket/AsyncChannelWrapperSecure", "access$200", "(Lorg/apache/tomcat/websocket/AsyncChannelWrapperSecure;)Ljavax/net/ssl/SSLEngine;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "javax/net/ssl/SSLEngine", "getHandshakeStatus", "()Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;", false);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/tomcat/websocket/AsyncChannelWrapperSecure$WebSocketSslHandshakeThread", "handshakeStatus", "Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "javax/net/ssl/SSLEngineResult$Status", "OK", "Ljavax/net/ssl/SSLEngineResult$Status;");
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/tomcat/websocket/AsyncChannelWrapperSecure$WebSocketSslHandshakeThread", "resultStatus", "Ljavax/net/ssl/SSLEngineResult$Status;");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ISTORE, 1);
Label label3 = new Label();
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
methodVisitor.visitVarInsn(ILOAD, 1);
methodVisitor.visitJumpInsn(IFEQ, label1);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/tomcat/websocket/AsyncChannelWrapperSecure$1", "$SwitchMap$javax$net$ssl$SSLEngineResult$HandshakeStatus", "[I");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/tomcat/websocket/AsyncChannelWrapperSecure$WebSocketSslHandshakeThread", "handshakeStatus", "Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "javax/net/ssl/SSLEngineResult$HandshakeStatus", "ordinal", "()I", false);
methodVisitor.visitInsn(IALOAD);
Label label4 = new Label();
Label label5 = new Label();
Label label6 = new Label();
Label label7 = new Label();
Label label8 = new Label();
Label label9 = new Label();
methodVisitor.visitTableSwitchInsn(1, 5, label9, new Label[] { label4, label5, label6, label7, label8 });
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/tomcat/websocket/AsyncChannelWrapperSecure$WebSocketSslHandshakeThread", "this$0", "Lorg/apache/tomcat/websocket/AsyncChannelWrapperSecure;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/tomcat/websocket/AsyncChannelWrapperSecure", "access$100", "(Lorg/apache/tomcat/websocket/AsyncChannelWrapperSecure;)Ljava/nio/ByteBuffer;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/nio/ByteBuffer", "clear", "()Ljava/nio/Buffer;", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/tomcat/websocket/AsyncChannelWrapperSecure$WebSocketSslHandshakeThread", "this$0", "Lorg/apache/tomcat/websocket/AsyncChannelWrapperSecure;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/tomcat/websocket/AsyncChannelWrapperSecure", "access$200", "(Lorg/apache/tomcat/websocket/AsyncChannelWrapperSecure;)Ljavax/net/ssl/SSLEngine;", false);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/tomcat/websocket/AsyncChannelWrapperSecure", "access$800", "()Ljava/nio/ByteBuffer;", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/tomcat/websocket/AsyncChannelWrapperSecure$WebSocketSslHandshakeThread", "this$0", "Lorg/apache/tomcat/websocket/AsyncChannelWrapperSecure;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/tomcat/websocket/AsyncChannelWrapperSecure", "access$100", "(Lorg/apache/tomcat/websocket/AsyncChannelWrapperSecure;)Ljava/nio/ByteBuffer;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "javax/net/ssl/SSLEngine", "wrap", "(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;", false);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/tomcat/websocket/AsyncChannelWrapperSecure$WebSocketSslHandshakeThread", "checkResult", "(Ljavax/net/ssl/SSLEngineResult;Z)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/tomcat/websocket/AsyncChannelWrapperSecure$WebSocketSslHandshakeThread", "this$0", "Lorg/apache/tomcat/websocket/AsyncChannelWrapperSecure;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/tomcat/websocket/AsyncChannelWrapperSecure", "access$100", "(Lorg/apache/tomcat/websocket/AsyncChannelWrapperSecure;)Ljava/nio/ByteBuffer;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/nio/ByteBuffer", "flip", "()Ljava/nio/Buffer;", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/tomcat/websocket/AsyncChannelWrapperSecure$WebSocketSslHandshakeThread", "this$0", "Lorg/apache/tomcat/websocket/AsyncChannelWrapperSecure;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/tomcat/websocket/AsyncChannelWrapperSecure", "access$400", "(Lorg/apache/tomcat/websocket/AsyncChannelWrapperSecure;)Ljava/nio/channels/AsynchronousSocketChannel;", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/tomcat/websocket/AsyncChannelWrapperSecure$WebSocketSslHandshakeThread", "this$0", "Lorg/apache/tomcat/websocket/AsyncChannelWrapperSecure;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/tomcat/websocket/AsyncChannelWrapperSecure", "access$100", "(Lorg/apache/tomcat/websocket/AsyncChannelWrapperSecure;)Ljava/nio/ByteBuffer;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/nio/channels/AsynchronousSocketChannel", "write", "(Ljava/nio/ByteBuffer;)Ljava/util/concurrent/Future;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/concurrent/Future", "get", "()Ljava/lang/Object;", true);
methodVisitor.visitInsn(POP);
methodVisitor.visitJumpInsn(GOTO, label9);
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/tomcat/websocket/AsyncChannelWrapperSecure$WebSocketSslHandshakeThread", "this$0", "Lorg/apache/tomcat/websocket/AsyncChannelWrapperSecure;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/tomcat/websocket/AsyncChannelWrapperSecure", "access$600", "(Lorg/apache/tomcat/websocket/AsyncChannelWrapperSecure;)Ljava/nio/ByteBuffer;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/nio/ByteBuffer", "compact", "()Ljava/nio/ByteBuffer;", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/tomcat/websocket/AsyncChannelWrapperSecure$WebSocketSslHandshakeThread", "this$0", "Lorg/apache/tomcat/websocket/AsyncChannelWrapperSecure;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/tomcat/websocket/AsyncChannelWrapperSecure", "access$600", "(Lorg/apache/tomcat/websocket/AsyncChannelWrapperSecure;)Ljava/nio/ByteBuffer;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/nio/ByteBuffer", "position", "()I", false);
Label label10 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label10);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/tomcat/websocket/AsyncChannelWrapperSecure$WebSocketSslHandshakeThread", "resultStatus", "Ljavax/net/ssl/SSLEngineResult$Status;");
methodVisitor.visitFieldInsn(GETSTATIC, "javax/net/ssl/SSLEngineResult$Status", "BUFFER_UNDERFLOW", "Ljavax/net/ssl/SSLEngineResult$Status;");
Label label11 = new Label();
methodVisitor.visitJumpInsn(IF_ACMPNE, label11);
methodVisitor.visitLabel(label10);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/tomcat/websocket/AsyncChannelWrapperSecure$WebSocketSslHandshakeThread", "this$0", "Lorg/apache/tomcat/websocket/AsyncChannelWrapperSecure;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/tomcat/websocket/AsyncChannelWrapperSecure", "access$400", "(Lorg/apache/tomcat/websocket/AsyncChannelWrapperSecure;)Ljava/nio/channels/AsynchronousSocketChannel;", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/tomcat/websocket/AsyncChannelWrapperSecure$WebSocketSslHandshakeThread", "this$0", "Lorg/apache/tomcat/websocket/AsyncChannelWrapperSecure;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/tomcat/websocket/AsyncChannelWrapperSecure", "access$600", "(Lorg/apache/tomcat/websocket/AsyncChannelWrapperSecure;)Ljava/nio/ByteBuffer;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/nio/channels/AsynchronousSocketChannel", "read", "(Ljava/nio/ByteBuffer;)Ljava/util/concurrent/Future;", false);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/concurrent/Future", "get", "()Ljava/lang/Object;", true);
methodVisitor.visitInsn(POP);
methodVisitor.visitLabel(label11);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/tomcat/websocket/AsyncChannelWrapperSecure$WebSocketSslHandshakeThread", "this$0", "Lorg/apache/tomcat/websocket/AsyncChannelWrapperSecure;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/tomcat/websocket/AsyncChannelWrapperSecure", "access$600", "(Lorg/apache/tomcat/websocket/AsyncChannelWrapperSecure;)Ljava/nio/ByteBuffer;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/nio/ByteBuffer", "flip", "()Ljava/nio/Buffer;", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/tomcat/websocket/AsyncChannelWrapperSecure$WebSocketSslHandshakeThread", "this$0", "Lorg/apache/tomcat/websocket/AsyncChannelWrapperSecure;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/tomcat/websocket/AsyncChannelWrapperSecure", "access$200", "(Lorg/apache/tomcat/websocket/AsyncChannelWrapperSecure;)Ljavax/net/ssl/SSLEngine;", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/tomcat/websocket/AsyncChannelWrapperSecure$WebSocketSslHandshakeThread", "this$0", "Lorg/apache/tomcat/websocket/AsyncChannelWrapperSecure;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/tomcat/websocket/AsyncChannelWrapperSecure", "access$600", "(Lorg/apache/tomcat/websocket/AsyncChannelWrapperSecure;)Ljava/nio/ByteBuffer;", false);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/tomcat/websocket/AsyncChannelWrapperSecure", "access$800", "()Ljava/nio/ByteBuffer;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "javax/net/ssl/SSLEngine", "unwrap", "(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;", false);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/tomcat/websocket/AsyncChannelWrapperSecure$WebSocketSslHandshakeThread", "checkResult", "(Ljavax/net/ssl/SSLEngineResult;Z)V", false);
methodVisitor.visitJumpInsn(GOTO, label9);
methodVisitor.visitLabel(label6);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ASTORE, 2);
Label label12 = new Label();
methodVisitor.visitLabel(label12);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"java/lang/Runnable"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/tomcat/websocket/AsyncChannelWrapperSecure$WebSocketSslHandshakeThread", "this$0", "Lorg/apache/tomcat/websocket/AsyncChannelWrapperSecure;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/tomcat/websocket/AsyncChannelWrapperSecure", "access$200", "(Lorg/apache/tomcat/websocket/AsyncChannelWrapperSecure;)Ljavax/net/ssl/SSLEngine;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "javax/net/ssl/SSLEngine", "getDelegatedTask", "()Ljava/lang/Runnable;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ASTORE, 2);
Label label13 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label13);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/lang/Runnable", "run", "()V", true);
methodVisitor.visitJumpInsn(GOTO, label12);
methodVisitor.visitLabel(label13);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/tomcat/websocket/AsyncChannelWrapperSecure$WebSocketSslHandshakeThread", "this$0", "Lorg/apache/tomcat/websocket/AsyncChannelWrapperSecure;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/tomcat/websocket/AsyncChannelWrapperSecure", "access$200", "(Lorg/apache/tomcat/websocket/AsyncChannelWrapperSecure;)Ljavax/net/ssl/SSLEngine;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "javax/net/ssl/SSLEngine", "getHandshakeStatus", "()Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;", false);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/tomcat/websocket/AsyncChannelWrapperSecure$WebSocketSslHandshakeThread", "handshakeStatus", "Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;");
methodVisitor.visitJumpInsn(GOTO, label9);
methodVisitor.visitLabel(label7);
methodVisitor.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 1);
methodVisitor.visitJumpInsn(GOTO, label9);
methodVisitor.visitLabel(label8);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitTypeInsn(NEW, "javax/net/ssl/SSLException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/tomcat/websocket/AsyncChannelWrapperSecure", "access$300", "()Lorg/apache/tomcat/util/res/StringManager;", false);
methodVisitor.visitLdcInsn("asyncChannelWrapperSecure.notHandshaking");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/tomcat/util/res/StringManager", "getString", "(Ljava/lang/String;)Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "javax/net/ssl/SSLException", "<init>", "(Ljava/lang/String;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label9);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitJumpInsn(GOTO, label3);
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
Label label14 = new Label();
methodVisitor.visitJumpInsn(GOTO, label14);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/Exception"});
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/tomcat/websocket/AsyncChannelWrapperSecure$WebSocketSslHandshakeThread", "hFuture", "Lorg/apache/tomcat/websocket/AsyncChannelWrapperSecure$WrapperFuture;");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/tomcat/websocket/AsyncChannelWrapperSecure$WrapperFuture", "fail", "(Ljava/lang/Throwable;)V", false);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitLabel(label14);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/tomcat/websocket/AsyncChannelWrapperSecure$WebSocketSslHandshakeThread", "hFuture", "Lorg/apache/tomcat/websocket/AsyncChannelWrapperSecure$WrapperFuture;");
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/tomcat/websocket/AsyncChannelWrapperSecure$WrapperFuture", "complete", "(Ljava/lang/Object;)V", false);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(4, 4);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PRIVATE, "checkResult", "(Ljavax/net/ssl/SSLEngineResult;Z)V", null, new String[] { "javax/net/ssl/SSLException" });
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "javax/net/ssl/SSLEngineResult", "getHandshakeStatus", "()Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;", false);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/tomcat/websocket/AsyncChannelWrapperSecure$WebSocketSslHandshakeThread", "handshakeStatus", "Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "javax/net/ssl/SSLEngineResult", "getStatus", "()Ljavax/net/ssl/SSLEngineResult$Status;", false);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/tomcat/websocket/AsyncChannelWrapperSecure$WebSocketSslHandshakeThread", "resultStatus", "Ljavax/net/ssl/SSLEngineResult$Status;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/tomcat/websocket/AsyncChannelWrapperSecure$WebSocketSslHandshakeThread", "resultStatus", "Ljavax/net/ssl/SSLEngineResult$Status;");
methodVisitor.visitFieldInsn(GETSTATIC, "javax/net/ssl/SSLEngineResult$Status", "OK", "Ljavax/net/ssl/SSLEngineResult$Status;");
Label label0 = new Label();
methodVisitor.visitJumpInsn(IF_ACMPEQ, label0);
methodVisitor.visitVarInsn(ILOAD, 2);
Label label1 = new Label();
methodVisitor.visitJumpInsn(IFNE, label1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/tomcat/websocket/AsyncChannelWrapperSecure$WebSocketSslHandshakeThread", "resultStatus", "Ljavax/net/ssl/SSLEngineResult$Status;");
methodVisitor.visitFieldInsn(GETSTATIC, "javax/net/ssl/SSLEngineResult$Status", "BUFFER_UNDERFLOW", "Ljavax/net/ssl/SSLEngineResult$Status;");
methodVisitor.visitJumpInsn(IF_ACMPEQ, label0);
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitTypeInsn(NEW, "javax/net/ssl/SSLException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/tomcat/websocket/AsyncChannelWrapperSecure", "access$300", "()Lorg/apache/tomcat/util/res/StringManager;", false);
methodVisitor.visitLdcInsn("asyncChannelWrapperSecure.check.notOk");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Object");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/tomcat/websocket/AsyncChannelWrapperSecure$WebSocketSslHandshakeThread", "resultStatus", "Ljavax/net/ssl/SSLEngineResult$Status;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/tomcat/util/res/StringManager", "getString", "(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "javax/net/ssl/SSLException", "<init>", "(Ljava/lang/String;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ILOAD, 2);
Label label2 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label2);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "javax/net/ssl/SSLEngineResult", "bytesConsumed", "()I", false);
methodVisitor.visitJumpInsn(IFEQ, label2);
methodVisitor.visitTypeInsn(NEW, "javax/net/ssl/SSLException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/tomcat/websocket/AsyncChannelWrapperSecure", "access$300", "()Lorg/apache/tomcat/util/res/StringManager;", false);
methodVisitor.visitLdcInsn("asyncChannelWrapperSecure.check.wrap");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/tomcat/util/res/StringManager", "getString", "(Ljava/lang/String;)Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "javax/net/ssl/SSLException", "<init>", "(Ljava/lang/String;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ILOAD, 2);
Label label3 = new Label();
methodVisitor.visitJumpInsn(IFNE, label3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "javax/net/ssl/SSLEngineResult", "bytesProduced", "()I", false);
methodVisitor.visitJumpInsn(IFEQ, label3);
methodVisitor.visitTypeInsn(NEW, "javax/net/ssl/SSLException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/tomcat/websocket/AsyncChannelWrapperSecure", "access$300", "()Lorg/apache/tomcat/util/res/StringManager;", false);
methodVisitor.visitLdcInsn("asyncChannelWrapperSecure.check.unwrap");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/tomcat/util/res/StringManager", "getString", "(Ljava/lang/String;)Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "javax/net/ssl/SSLException", "<init>", "(Ljava/lang/String;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(8, 3);
methodVisitor.visitEnd();
}
classWriter.visitEnd();

return classWriter.toByteArray();
}
}
