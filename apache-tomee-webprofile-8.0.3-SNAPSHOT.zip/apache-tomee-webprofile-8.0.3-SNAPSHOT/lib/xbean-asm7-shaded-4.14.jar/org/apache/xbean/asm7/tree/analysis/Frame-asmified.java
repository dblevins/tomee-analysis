package asm.org.apache.xbean.asm7.tree.analysis;
import org.objectweb.asm.AnnotationVisitor;
import org.objectweb.asm.Attribute;
import org.objectweb.asm.ClassReader;
import org.objectweb.asm.ClassWriter;
import org.objectweb.asm.ConstantDynamic;
import org.objectweb.asm.FieldVisitor;
import org.objectweb.asm.Handle;
import org.objectweb.asm.Label;
import org.objectweb.asm.MethodVisitor;
import org.objectweb.asm.Opcodes;
import org.objectweb.asm.RecordComponentVisitor;
import org.objectweb.asm.Type;
import org.objectweb.asm.TypePath;
public class FrameDump implements Opcodes {

public static byte[] dump () throws Exception {

ClassWriter classWriter = new ClassWriter(0);
FieldVisitor fieldVisitor;
RecordComponentVisitor recordComponentVisitor;
MethodVisitor methodVisitor;
AnnotationVisitor annotationVisitor0;

classWriter.visit(V1_5, ACC_PUBLIC | ACC_SUPER, "org/apache/xbean/asm7/tree/analysis/Frame", "<V::Lorg/apache/xbean/asm7/tree/analysis/Value;>Ljava/lang/Object;", "java/lang/Object", null);

{
fieldVisitor = classWriter.visitField(ACC_PRIVATE, "returnValue", "Lorg/apache/xbean/asm7/tree/analysis/Value;", "TV;", null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE, "values", "[Lorg/apache/xbean/asm7/tree/analysis/Value;", "[TV;", null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE, "numLocals", "I", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE, "numStack", "I", null, null);
fieldVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "<init>", "(II)V", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/Object", "<init>", "()V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ILOAD, 1);
methodVisitor.visitVarInsn(ILOAD, 2);
methodVisitor.visitInsn(IADD);
methodVisitor.visitTypeInsn(ANEWARRAY, "org/apache/xbean/asm7/tree/analysis/Value");
methodVisitor.visitTypeInsn(CHECKCAST, "[Lorg/apache/xbean/asm7/tree/analysis/Value;");
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/xbean/asm7/tree/analysis/Frame", "values", "[Lorg/apache/xbean/asm7/tree/analysis/Value;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ILOAD, 1);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/xbean/asm7/tree/analysis/Frame", "numLocals", "I");
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(3, 3);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "<init>", "(Lorg/apache/xbean/asm7/tree/analysis/Frame;)V", "(Lorg/apache/xbean/asm7/tree/analysis/Frame<+TV;>;)V", null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/xbean/asm7/tree/analysis/Frame", "numLocals", "I");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/xbean/asm7/tree/analysis/Frame", "values", "[Lorg/apache/xbean/asm7/tree/analysis/Value;");
methodVisitor.visitInsn(ARRAYLENGTH);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/xbean/asm7/tree/analysis/Frame", "numLocals", "I");
methodVisitor.visitInsn(ISUB);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/xbean/asm7/tree/analysis/Frame", "<init>", "(II)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "init", "(Lorg/apache/xbean/asm7/tree/analysis/Frame;)Lorg/apache/xbean/asm7/tree/analysis/Frame;", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(4, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "init", "(Lorg/apache/xbean/asm7/tree/analysis/Frame;)Lorg/apache/xbean/asm7/tree/analysis/Frame;", "(Lorg/apache/xbean/asm7/tree/analysis/Frame<+TV;>;)Lorg/apache/xbean/asm7/tree/analysis/Frame<TV;>;", null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/xbean/asm7/tree/analysis/Frame", "returnValue", "Lorg/apache/xbean/asm7/tree/analysis/Value;");
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/xbean/asm7/tree/analysis/Frame", "returnValue", "Lorg/apache/xbean/asm7/tree/analysis/Value;");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/xbean/asm7/tree/analysis/Frame", "values", "[Lorg/apache/xbean/asm7/tree/analysis/Value;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/xbean/asm7/tree/analysis/Frame", "values", "[Lorg/apache/xbean/asm7/tree/analysis/Value;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/xbean/asm7/tree/analysis/Frame", "values", "[Lorg/apache/xbean/asm7/tree/analysis/Value;");
methodVisitor.visitInsn(ARRAYLENGTH);
methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/System", "arraycopy", "(Ljava/lang/Object;ILjava/lang/Object;II)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/xbean/asm7/tree/analysis/Frame", "numStack", "I");
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/xbean/asm7/tree/analysis/Frame", "numStack", "I");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(5, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "initJumpTarget", "(ILorg/apache/xbean/asm7/tree/LabelNode;)V", null, null);
methodVisitor.visitCode();
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(0, 3);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "setReturn", "(Lorg/apache/xbean/asm7/tree/analysis/Value;)V", "(TV;)V", null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/xbean/asm7/tree/analysis/Frame", "returnValue", "Lorg/apache/xbean/asm7/tree/analysis/Value;");
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(2, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "getLocals", "()I", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/xbean/asm7/tree/analysis/Frame", "numLocals", "I");
methodVisitor.visitInsn(IRETURN);
methodVisitor.visitMaxs(1, 1);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "getMaxStackSize", "()I", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/xbean/asm7/tree/analysis/Frame", "values", "[Lorg/apache/xbean/asm7/tree/analysis/Value;");
methodVisitor.visitInsn(ARRAYLENGTH);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/xbean/asm7/tree/analysis/Frame", "numLocals", "I");
methodVisitor.visitInsn(ISUB);
methodVisitor.visitInsn(IRETURN);
methodVisitor.visitMaxs(2, 1);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "getLocal", "(I)Lorg/apache/xbean/asm7/tree/analysis/Value;", "(I)TV;", null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ILOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/xbean/asm7/tree/analysis/Frame", "numLocals", "I");
Label label0 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPLT, label0);
methodVisitor.visitTypeInsn(NEW, "java/lang/IndexOutOfBoundsException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitLdcInsn("Trying to get an inexistant local variable ");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ILOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(I)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/IndexOutOfBoundsException", "<init>", "(Ljava/lang/String;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/xbean/asm7/tree/analysis/Frame", "values", "[Lorg/apache/xbean/asm7/tree/analysis/Value;");
methodVisitor.visitVarInsn(ILOAD, 1);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(4, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "setLocal", "(ILorg/apache/xbean/asm7/tree/analysis/Value;)V", "(ITV;)V", null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ILOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/xbean/asm7/tree/analysis/Frame", "numLocals", "I");
Label label0 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPLT, label0);
methodVisitor.visitTypeInsn(NEW, "java/lang/IndexOutOfBoundsException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitLdcInsn("Trying to set an inexistant local variable ");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ILOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(I)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/IndexOutOfBoundsException", "<init>", "(Ljava/lang/String;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/xbean/asm7/tree/analysis/Frame", "values", "[Lorg/apache/xbean/asm7/tree/analysis/Value;");
methodVisitor.visitVarInsn(ILOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(4, 3);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "getStackSize", "()I", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/xbean/asm7/tree/analysis/Frame", "numStack", "I");
methodVisitor.visitInsn(IRETURN);
methodVisitor.visitMaxs(1, 1);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "getStack", "(I)Lorg/apache/xbean/asm7/tree/analysis/Value;", "(I)TV;", null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/xbean/asm7/tree/analysis/Frame", "values", "[Lorg/apache/xbean/asm7/tree/analysis/Value;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/xbean/asm7/tree/analysis/Frame", "numLocals", "I");
methodVisitor.visitVarInsn(ILOAD, 1);
methodVisitor.visitInsn(IADD);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(3, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "setStack", "(ILorg/apache/xbean/asm7/tree/analysis/Value;)V", "(ITV;)V", null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/xbean/asm7/tree/analysis/Frame", "values", "[Lorg/apache/xbean/asm7/tree/analysis/Value;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/xbean/asm7/tree/analysis/Frame", "numLocals", "I");
methodVisitor.visitVarInsn(ILOAD, 1);
methodVisitor.visitInsn(IADD);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(3, 3);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "clearStack", "()V", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/xbean/asm7/tree/analysis/Frame", "numStack", "I");
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(2, 1);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "pop", "()Lorg/apache/xbean/asm7/tree/analysis/Value;", "()TV;", null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/xbean/asm7/tree/analysis/Frame", "numStack", "I");
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNE, label0);
methodVisitor.visitTypeInsn(NEW, "java/lang/IndexOutOfBoundsException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("Cannot pop operand off an empty stack.");
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/IndexOutOfBoundsException", "<init>", "(Ljava/lang/String;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/xbean/asm7/tree/analysis/Frame", "values", "[Lorg/apache/xbean/asm7/tree/analysis/Value;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/xbean/asm7/tree/analysis/Frame", "numLocals", "I");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/xbean/asm7/tree/analysis/Frame", "numStack", "I");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ISUB);
methodVisitor.visitInsn(DUP_X1);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/xbean/asm7/tree/analysis/Frame", "numStack", "I");
methodVisitor.visitInsn(IADD);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(5, 1);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "push", "(Lorg/apache/xbean/asm7/tree/analysis/Value;)V", "(TV;)V", null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/xbean/asm7/tree/analysis/Frame", "numLocals", "I");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/xbean/asm7/tree/analysis/Frame", "numStack", "I");
methodVisitor.visitInsn(IADD);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/xbean/asm7/tree/analysis/Frame", "values", "[Lorg/apache/xbean/asm7/tree/analysis/Value;");
methodVisitor.visitInsn(ARRAYLENGTH);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPLT, label0);
methodVisitor.visitTypeInsn(NEW, "java/lang/IndexOutOfBoundsException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("Insufficient maximum stack size.");
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/IndexOutOfBoundsException", "<init>", "(Ljava/lang/String;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/xbean/asm7/tree/analysis/Frame", "values", "[Lorg/apache/xbean/asm7/tree/analysis/Value;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/xbean/asm7/tree/analysis/Frame", "numLocals", "I");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/xbean/asm7/tree/analysis/Frame", "numStack", "I");
methodVisitor.visitInsn(DUP_X1);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IADD);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/xbean/asm7/tree/analysis/Frame", "numStack", "I");
methodVisitor.visitInsn(IADD);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(6, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "execute", "(Lorg/apache/xbean/asm7/tree/AbstractInsnNode;Lorg/apache/xbean/asm7/tree/analysis/Interpreter;)V", "(Lorg/apache/xbean/asm7/tree/AbstractInsnNode;Lorg/apache/xbean/asm7/tree/analysis/Interpreter<TV;>;)V", new String[] { "org/apache/xbean/asm7/tree/analysis/AnalyzerException" });
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/AbstractInsnNode", "getOpcode", "()I", false);
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
Label label3 = new Label();
Label label4 = new Label();
Label label5 = new Label();
Label label6 = new Label();
Label label7 = new Label();
Label label8 = new Label();
Label label9 = new Label();
Label label10 = new Label();
Label label11 = new Label();
Label label12 = new Label();
Label label13 = new Label();
Label label14 = new Label();
Label label15 = new Label();
Label label16 = new Label();
Label label17 = new Label();
Label label18 = new Label();
Label label19 = new Label();
Label label20 = new Label();
Label label21 = new Label();
Label label22 = new Label();
Label label23 = new Label();
Label label24 = new Label();
Label label25 = new Label();
Label label26 = new Label();
Label label27 = new Label();
Label label28 = new Label();
Label label29 = new Label();
Label label30 = new Label();
Label label31 = new Label();
Label label32 = new Label();
Label label33 = new Label();
Label label34 = new Label();
Label label35 = new Label();
Label label36 = new Label();
Label label37 = new Label();
Label label38 = new Label();
methodVisitor.visitTableSwitchInsn(0, 199, label2, new Label[] { label0, label1, label1, label1, label1, label1, label1, label1, label1, label1, label1, label1, label1, label1, label1, label1, label1, label1, label1, label2, label2, label3, label3, label3, label3, label3, label2, label2, label2, label2, label2, label2, label2, label2, label2, label2, label2, label2, label2, label2, label2, label2, label2, label2, label2, label2, label4, label4, label4, label4, label4, label4, label4, label4, label5, label5, label5, label5, label5, label2, label2, label2, label2, label2, label2, label2, label2, label2, label2, label2, label2, label2, label2, label2, label2, label2, label2, label2, label2, label6, label6, label6, label6, label6, label6, label6, label6, label7, label8, label9, label10, label11, label12, label13, label14, label15, label4, label4, label4, label4, label4, label4, label4, label4, label4, label4, label4, label4, label4, label4, label4, label4, label4, label4, label4, label4, label16, label16, label16, label16, label4, label4, label4, label4, label4, label4, label4, label4, label4, label4, label4, label4, label17, label18, label18, label18, label18, label18, label18, label18, label18, label18, label18, label18, label18, label18, label18, label18, label4, label4, label4, label4, label4, label19, label19, label19, label19, label19, label19, label20, label20, label20, label20, label20, label20, label20, label20, label21, label22, label23, label24, label24, label25, label25, label25, label25, label25, label26, label27, label28, label29, label20, label30, label30, label30, label30, label31, label32, label33, label33, label33, label34, label35, label35, label36, label36, label2, label37, label38, label38 });
methodVisitor.visitLabel(label0);
Label label39 = new Label();
methodVisitor.visitJumpInsn(GOTO, label39);
methodVisitor.visitLabel(label1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Interpreter", "newOperation", "(Lorg/apache/xbean/asm7/tree/AbstractInsnNode;)Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "push", "(Lorg/apache/xbean/asm7/tree/analysis/Value;)V", false);
methodVisitor.visitJumpInsn(GOTO, label39);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitTypeInsn(CHECKCAST, "org/apache/xbean/asm7/tree/VarInsnNode");
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/xbean/asm7/tree/VarInsnNode", "var", "I");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "getLocal", "(I)Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Interpreter", "copyOperation", "(Lorg/apache/xbean/asm7/tree/AbstractInsnNode;Lorg/apache/xbean/asm7/tree/analysis/Value;)Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "push", "(Lorg/apache/xbean/asm7/tree/analysis/Value;)V", false);
methodVisitor.visitJumpInsn(GOTO, label39);
methodVisitor.visitLabel(label5);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "pop", "()Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Interpreter", "copyOperation", "(Lorg/apache/xbean/asm7/tree/AbstractInsnNode;Lorg/apache/xbean/asm7/tree/analysis/Value;)Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitTypeInsn(CHECKCAST, "org/apache/xbean/asm7/tree/VarInsnNode");
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/xbean/asm7/tree/VarInsnNode", "var", "I");
methodVisitor.visitVarInsn(ISTORE, 7);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ILOAD, 7);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "setLocal", "(ILorg/apache/xbean/asm7/tree/analysis/Value;)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/xbean/asm7/tree/analysis/Value", "getSize", "()I", true);
methodVisitor.visitInsn(ICONST_2);
Label label40 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPNE, label40);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ILOAD, 7);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IADD);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ILOAD, 7);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IADD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Interpreter", "newEmptyValue", "(I)Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "setLocal", "(ILorg/apache/xbean/asm7/tree/analysis/Value;)V", false);
methodVisitor.visitLabel(label40);
methodVisitor.visitVarInsn(ILOAD, 7);
methodVisitor.visitJumpInsn(IFLE, label39);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ILOAD, 7);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ISUB);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "getLocal", "(I)Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitVarInsn(ASTORE, 8);
methodVisitor.visitVarInsn(ALOAD, 8);
Label label41 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label41);
methodVisitor.visitVarInsn(ALOAD, 8);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/xbean/asm7/tree/analysis/Value", "getSize", "()I", true);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitJumpInsn(IF_ICMPNE, label41);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ILOAD, 7);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ISUB);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ILOAD, 7);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ISUB);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Interpreter", "newEmptyValue", "(I)Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "setLocal", "(ILorg/apache/xbean/asm7/tree/analysis/Value;)V", false);
methodVisitor.visitLabel(label41);
methodVisitor.visitJumpInsn(GOTO, label39);
methodVisitor.visitLabel(label6);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "pop", "()Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "pop", "()Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "pop", "()Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Interpreter", "ternaryOperation", "(Lorg/apache/xbean/asm7/tree/AbstractInsnNode;Lorg/apache/xbean/asm7/tree/analysis/Value;Lorg/apache/xbean/asm7/tree/analysis/Value;Lorg/apache/xbean/asm7/tree/analysis/Value;)Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitJumpInsn(GOTO, label39);
methodVisitor.visitLabel(label7);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "pop", "()Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/xbean/asm7/tree/analysis/Value", "getSize", "()I", true);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitJumpInsn(IF_ICMPNE, label39);
methodVisitor.visitTypeInsn(NEW, "org/apache/xbean/asm7/tree/analysis/AnalyzerException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitLdcInsn("Illegal use of POP");
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/xbean/asm7/tree/analysis/AnalyzerException", "<init>", "(Lorg/apache/xbean/asm7/tree/AbstractInsnNode;Ljava/lang/String;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label8);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "pop", "()Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/xbean/asm7/tree/analysis/Value", "getSize", "()I", true);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitJumpInsn(IF_ICMPNE, label39);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "pop", "()Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/xbean/asm7/tree/analysis/Value", "getSize", "()I", true);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitJumpInsn(IF_ICMPEQ, label39);
methodVisitor.visitTypeInsn(NEW, "org/apache/xbean/asm7/tree/analysis/AnalyzerException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitLdcInsn("Illegal use of POP2");
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/xbean/asm7/tree/analysis/AnalyzerException", "<init>", "(Lorg/apache/xbean/asm7/tree/AbstractInsnNode;Ljava/lang/String;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label9);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "pop", "()Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/xbean/asm7/tree/analysis/Value", "getSize", "()I", true);
methodVisitor.visitInsn(ICONST_1);
Label label42 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPEQ, label42);
methodVisitor.visitTypeInsn(NEW, "org/apache/xbean/asm7/tree/analysis/AnalyzerException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitLdcInsn("Illegal use of DUP");
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/xbean/asm7/tree/analysis/AnalyzerException", "<init>", "(Lorg/apache/xbean/asm7/tree/AbstractInsnNode;Ljava/lang/String;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label42);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "push", "(Lorg/apache/xbean/asm7/tree/analysis/Value;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Interpreter", "copyOperation", "(Lorg/apache/xbean/asm7/tree/AbstractInsnNode;Lorg/apache/xbean/asm7/tree/analysis/Value;)Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "push", "(Lorg/apache/xbean/asm7/tree/analysis/Value;)V", false);
methodVisitor.visitJumpInsn(GOTO, label39);
methodVisitor.visitLabel(label10);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "pop", "()Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "pop", "()Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/xbean/asm7/tree/analysis/Value", "getSize", "()I", true);
methodVisitor.visitInsn(ICONST_1);
Label label43 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPNE, label43);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/xbean/asm7/tree/analysis/Value", "getSize", "()I", true);
methodVisitor.visitInsn(ICONST_1);
Label label44 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPEQ, label44);
methodVisitor.visitLabel(label43);
methodVisitor.visitTypeInsn(NEW, "org/apache/xbean/asm7/tree/analysis/AnalyzerException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitLdcInsn("Illegal use of DUP_X1");
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/xbean/asm7/tree/analysis/AnalyzerException", "<init>", "(Lorg/apache/xbean/asm7/tree/AbstractInsnNode;Ljava/lang/String;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label44);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Interpreter", "copyOperation", "(Lorg/apache/xbean/asm7/tree/AbstractInsnNode;Lorg/apache/xbean/asm7/tree/analysis/Value;)Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "push", "(Lorg/apache/xbean/asm7/tree/analysis/Value;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "push", "(Lorg/apache/xbean/asm7/tree/analysis/Value;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "push", "(Lorg/apache/xbean/asm7/tree/analysis/Value;)V", false);
methodVisitor.visitJumpInsn(GOTO, label39);
methodVisitor.visitLabel(label11);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "pop", "()Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/xbean/asm7/tree/analysis/Value", "getSize", "()I", true);
methodVisitor.visitInsn(ICONST_1);
Label label45 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPNE, label45);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "pop", "()Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/xbean/asm7/tree/analysis/Value", "getSize", "()I", true);
methodVisitor.visitInsn(ICONST_1);
Label label46 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPNE, label46);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "pop", "()Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/xbean/asm7/tree/analysis/Value", "getSize", "()I", true);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitJumpInsn(IF_ICMPNE, label45);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Interpreter", "copyOperation", "(Lorg/apache/xbean/asm7/tree/AbstractInsnNode;Lorg/apache/xbean/asm7/tree/analysis/Value;)Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "push", "(Lorg/apache/xbean/asm7/tree/analysis/Value;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "push", "(Lorg/apache/xbean/asm7/tree/analysis/Value;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "push", "(Lorg/apache/xbean/asm7/tree/analysis/Value;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "push", "(Lorg/apache/xbean/asm7/tree/analysis/Value;)V", false);
methodVisitor.visitJumpInsn(GOTO, label39);
methodVisitor.visitLabel(label46);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Interpreter", "copyOperation", "(Lorg/apache/xbean/asm7/tree/AbstractInsnNode;Lorg/apache/xbean/asm7/tree/analysis/Value;)Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "push", "(Lorg/apache/xbean/asm7/tree/analysis/Value;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "push", "(Lorg/apache/xbean/asm7/tree/analysis/Value;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "push", "(Lorg/apache/xbean/asm7/tree/analysis/Value;)V", false);
methodVisitor.visitJumpInsn(GOTO, label39);
methodVisitor.visitLabel(label45);
methodVisitor.visitTypeInsn(NEW, "org/apache/xbean/asm7/tree/analysis/AnalyzerException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitLdcInsn("Illegal use of DUP_X2");
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/xbean/asm7/tree/analysis/AnalyzerException", "<init>", "(Lorg/apache/xbean/asm7/tree/AbstractInsnNode;Ljava/lang/String;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label12);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "pop", "()Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/xbean/asm7/tree/analysis/Value", "getSize", "()I", true);
methodVisitor.visitInsn(ICONST_1);
Label label47 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPNE, label47);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "pop", "()Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/xbean/asm7/tree/analysis/Value", "getSize", "()I", true);
methodVisitor.visitInsn(ICONST_1);
Label label48 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPNE, label48);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "push", "(Lorg/apache/xbean/asm7/tree/analysis/Value;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "push", "(Lorg/apache/xbean/asm7/tree/analysis/Value;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Interpreter", "copyOperation", "(Lorg/apache/xbean/asm7/tree/AbstractInsnNode;Lorg/apache/xbean/asm7/tree/analysis/Value;)Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "push", "(Lorg/apache/xbean/asm7/tree/analysis/Value;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Interpreter", "copyOperation", "(Lorg/apache/xbean/asm7/tree/AbstractInsnNode;Lorg/apache/xbean/asm7/tree/analysis/Value;)Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "push", "(Lorg/apache/xbean/asm7/tree/analysis/Value;)V", false);
methodVisitor.visitJumpInsn(GOTO, label39);
methodVisitor.visitLabel(label47);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "push", "(Lorg/apache/xbean/asm7/tree/analysis/Value;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Interpreter", "copyOperation", "(Lorg/apache/xbean/asm7/tree/AbstractInsnNode;Lorg/apache/xbean/asm7/tree/analysis/Value;)Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "push", "(Lorg/apache/xbean/asm7/tree/analysis/Value;)V", false);
methodVisitor.visitJumpInsn(GOTO, label39);
methodVisitor.visitLabel(label48);
methodVisitor.visitTypeInsn(NEW, "org/apache/xbean/asm7/tree/analysis/AnalyzerException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitLdcInsn("Illegal use of DUP2");
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/xbean/asm7/tree/analysis/AnalyzerException", "<init>", "(Lorg/apache/xbean/asm7/tree/AbstractInsnNode;Ljava/lang/String;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label13);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "pop", "()Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/xbean/asm7/tree/analysis/Value", "getSize", "()I", true);
methodVisitor.visitInsn(ICONST_1);
Label label49 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPNE, label49);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "pop", "()Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/xbean/asm7/tree/analysis/Value", "getSize", "()I", true);
methodVisitor.visitInsn(ICONST_1);
Label label50 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPNE, label50);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "pop", "()Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/xbean/asm7/tree/analysis/Value", "getSize", "()I", true);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitJumpInsn(IF_ICMPNE, label50);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Interpreter", "copyOperation", "(Lorg/apache/xbean/asm7/tree/AbstractInsnNode;Lorg/apache/xbean/asm7/tree/analysis/Value;)Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "push", "(Lorg/apache/xbean/asm7/tree/analysis/Value;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Interpreter", "copyOperation", "(Lorg/apache/xbean/asm7/tree/AbstractInsnNode;Lorg/apache/xbean/asm7/tree/analysis/Value;)Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "push", "(Lorg/apache/xbean/asm7/tree/analysis/Value;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "push", "(Lorg/apache/xbean/asm7/tree/analysis/Value;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "push", "(Lorg/apache/xbean/asm7/tree/analysis/Value;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "push", "(Lorg/apache/xbean/asm7/tree/analysis/Value;)V", false);
methodVisitor.visitJumpInsn(GOTO, label39);
methodVisitor.visitLabel(label49);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "pop", "()Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/xbean/asm7/tree/analysis/Value", "getSize", "()I", true);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitJumpInsn(IF_ICMPNE, label50);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Interpreter", "copyOperation", "(Lorg/apache/xbean/asm7/tree/AbstractInsnNode;Lorg/apache/xbean/asm7/tree/analysis/Value;)Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "push", "(Lorg/apache/xbean/asm7/tree/analysis/Value;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "push", "(Lorg/apache/xbean/asm7/tree/analysis/Value;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "push", "(Lorg/apache/xbean/asm7/tree/analysis/Value;)V", false);
methodVisitor.visitJumpInsn(GOTO, label39);
methodVisitor.visitLabel(label50);
methodVisitor.visitTypeInsn(NEW, "org/apache/xbean/asm7/tree/analysis/AnalyzerException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitLdcInsn("Illegal use of DUP2_X1");
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/xbean/asm7/tree/analysis/AnalyzerException", "<init>", "(Lorg/apache/xbean/asm7/tree/AbstractInsnNode;Ljava/lang/String;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label14);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "pop", "()Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/xbean/asm7/tree/analysis/Value", "getSize", "()I", true);
methodVisitor.visitInsn(ICONST_1);
Label label51 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPNE, label51);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "pop", "()Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/xbean/asm7/tree/analysis/Value", "getSize", "()I", true);
methodVisitor.visitInsn(ICONST_1);
Label label52 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPNE, label52);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "pop", "()Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/xbean/asm7/tree/analysis/Value", "getSize", "()I", true);
methodVisitor.visitInsn(ICONST_1);
Label label53 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPNE, label53);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "pop", "()Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/xbean/asm7/tree/analysis/Value", "getSize", "()I", true);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitJumpInsn(IF_ICMPNE, label52);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Interpreter", "copyOperation", "(Lorg/apache/xbean/asm7/tree/AbstractInsnNode;Lorg/apache/xbean/asm7/tree/analysis/Value;)Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "push", "(Lorg/apache/xbean/asm7/tree/analysis/Value;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Interpreter", "copyOperation", "(Lorg/apache/xbean/asm7/tree/AbstractInsnNode;Lorg/apache/xbean/asm7/tree/analysis/Value;)Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "push", "(Lorg/apache/xbean/asm7/tree/analysis/Value;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "push", "(Lorg/apache/xbean/asm7/tree/analysis/Value;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "push", "(Lorg/apache/xbean/asm7/tree/analysis/Value;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "push", "(Lorg/apache/xbean/asm7/tree/analysis/Value;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "push", "(Lorg/apache/xbean/asm7/tree/analysis/Value;)V", false);
methodVisitor.visitJumpInsn(GOTO, label39);
methodVisitor.visitLabel(label53);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Interpreter", "copyOperation", "(Lorg/apache/xbean/asm7/tree/AbstractInsnNode;Lorg/apache/xbean/asm7/tree/analysis/Value;)Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "push", "(Lorg/apache/xbean/asm7/tree/analysis/Value;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Interpreter", "copyOperation", "(Lorg/apache/xbean/asm7/tree/AbstractInsnNode;Lorg/apache/xbean/asm7/tree/analysis/Value;)Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "push", "(Lorg/apache/xbean/asm7/tree/analysis/Value;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "push", "(Lorg/apache/xbean/asm7/tree/analysis/Value;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "push", "(Lorg/apache/xbean/asm7/tree/analysis/Value;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "push", "(Lorg/apache/xbean/asm7/tree/analysis/Value;)V", false);
methodVisitor.visitJumpInsn(GOTO, label39);
methodVisitor.visitLabel(label51);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "pop", "()Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/xbean/asm7/tree/analysis/Value", "getSize", "()I", true);
methodVisitor.visitInsn(ICONST_1);
Label label54 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPNE, label54);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "pop", "()Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/xbean/asm7/tree/analysis/Value", "getSize", "()I", true);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitJumpInsn(IF_ICMPNE, label52);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Interpreter", "copyOperation", "(Lorg/apache/xbean/asm7/tree/AbstractInsnNode;Lorg/apache/xbean/asm7/tree/analysis/Value;)Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "push", "(Lorg/apache/xbean/asm7/tree/analysis/Value;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "push", "(Lorg/apache/xbean/asm7/tree/analysis/Value;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "push", "(Lorg/apache/xbean/asm7/tree/analysis/Value;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "push", "(Lorg/apache/xbean/asm7/tree/analysis/Value;)V", false);
methodVisitor.visitJumpInsn(GOTO, label39);
methodVisitor.visitLabel(label54);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Interpreter", "copyOperation", "(Lorg/apache/xbean/asm7/tree/AbstractInsnNode;Lorg/apache/xbean/asm7/tree/analysis/Value;)Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "push", "(Lorg/apache/xbean/asm7/tree/analysis/Value;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "push", "(Lorg/apache/xbean/asm7/tree/analysis/Value;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "push", "(Lorg/apache/xbean/asm7/tree/analysis/Value;)V", false);
methodVisitor.visitJumpInsn(GOTO, label39);
methodVisitor.visitLabel(label52);
methodVisitor.visitTypeInsn(NEW, "org/apache/xbean/asm7/tree/analysis/AnalyzerException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitLdcInsn("Illegal use of DUP2_X2");
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/xbean/asm7/tree/analysis/AnalyzerException", "<init>", "(Lorg/apache/xbean/asm7/tree/AbstractInsnNode;Ljava/lang/String;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label15);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "pop", "()Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "pop", "()Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/xbean/asm7/tree/analysis/Value", "getSize", "()I", true);
methodVisitor.visitInsn(ICONST_1);
Label label55 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPNE, label55);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/xbean/asm7/tree/analysis/Value", "getSize", "()I", true);
methodVisitor.visitInsn(ICONST_1);
Label label56 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPEQ, label56);
methodVisitor.visitLabel(label55);
methodVisitor.visitTypeInsn(NEW, "org/apache/xbean/asm7/tree/analysis/AnalyzerException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitLdcInsn("Illegal use of SWAP");
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/xbean/asm7/tree/analysis/AnalyzerException", "<init>", "(Lorg/apache/xbean/asm7/tree/AbstractInsnNode;Ljava/lang/String;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label56);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Interpreter", "copyOperation", "(Lorg/apache/xbean/asm7/tree/AbstractInsnNode;Lorg/apache/xbean/asm7/tree/analysis/Value;)Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "push", "(Lorg/apache/xbean/asm7/tree/analysis/Value;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Interpreter", "copyOperation", "(Lorg/apache/xbean/asm7/tree/AbstractInsnNode;Lorg/apache/xbean/asm7/tree/analysis/Value;)Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "push", "(Lorg/apache/xbean/asm7/tree/analysis/Value;)V", false);
methodVisitor.visitJumpInsn(GOTO, label39);
methodVisitor.visitLabel(label4);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "pop", "()Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "pop", "()Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Interpreter", "binaryOperation", "(Lorg/apache/xbean/asm7/tree/AbstractInsnNode;Lorg/apache/xbean/asm7/tree/analysis/Value;Lorg/apache/xbean/asm7/tree/analysis/Value;)Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "push", "(Lorg/apache/xbean/asm7/tree/analysis/Value;)V", false);
methodVisitor.visitJumpInsn(GOTO, label39);
methodVisitor.visitLabel(label16);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "pop", "()Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Interpreter", "unaryOperation", "(Lorg/apache/xbean/asm7/tree/AbstractInsnNode;Lorg/apache/xbean/asm7/tree/analysis/Value;)Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "push", "(Lorg/apache/xbean/asm7/tree/analysis/Value;)V", false);
methodVisitor.visitJumpInsn(GOTO, label39);
methodVisitor.visitLabel(label17);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitTypeInsn(CHECKCAST, "org/apache/xbean/asm7/tree/IincInsnNode");
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/xbean/asm7/tree/IincInsnNode", "var", "I");
methodVisitor.visitVarInsn(ISTORE, 7);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ILOAD, 7);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ILOAD, 7);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "getLocal", "(I)Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Interpreter", "unaryOperation", "(Lorg/apache/xbean/asm7/tree/AbstractInsnNode;Lorg/apache/xbean/asm7/tree/analysis/Value;)Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "setLocal", "(ILorg/apache/xbean/asm7/tree/analysis/Value;)V", false);
methodVisitor.visitJumpInsn(GOTO, label39);
methodVisitor.visitLabel(label18);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "pop", "()Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Interpreter", "unaryOperation", "(Lorg/apache/xbean/asm7/tree/AbstractInsnNode;Lorg/apache/xbean/asm7/tree/analysis/Value;)Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "push", "(Lorg/apache/xbean/asm7/tree/analysis/Value;)V", false);
methodVisitor.visitJumpInsn(GOTO, label39);
methodVisitor.visitLabel(label19);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "pop", "()Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Interpreter", "unaryOperation", "(Lorg/apache/xbean/asm7/tree/AbstractInsnNode;Lorg/apache/xbean/asm7/tree/analysis/Value;)Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitJumpInsn(GOTO, label39);
methodVisitor.visitLabel(label20);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "pop", "()Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "pop", "()Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Interpreter", "binaryOperation", "(Lorg/apache/xbean/asm7/tree/AbstractInsnNode;Lorg/apache/xbean/asm7/tree/analysis/Value;Lorg/apache/xbean/asm7/tree/analysis/Value;)Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitJumpInsn(GOTO, label39);
methodVisitor.visitLabel(label21);
methodVisitor.visitJumpInsn(GOTO, label39);
methodVisitor.visitLabel(label22);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Interpreter", "newOperation", "(Lorg/apache/xbean/asm7/tree/AbstractInsnNode;)Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "push", "(Lorg/apache/xbean/asm7/tree/analysis/Value;)V", false);
methodVisitor.visitJumpInsn(GOTO, label39);
methodVisitor.visitLabel(label23);
methodVisitor.visitJumpInsn(GOTO, label39);
methodVisitor.visitLabel(label24);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "pop", "()Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Interpreter", "unaryOperation", "(Lorg/apache/xbean/asm7/tree/AbstractInsnNode;Lorg/apache/xbean/asm7/tree/analysis/Value;)Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitJumpInsn(GOTO, label39);
methodVisitor.visitLabel(label25);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "pop", "()Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Interpreter", "unaryOperation", "(Lorg/apache/xbean/asm7/tree/AbstractInsnNode;Lorg/apache/xbean/asm7/tree/analysis/Value;)Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/xbean/asm7/tree/analysis/Frame", "returnValue", "Lorg/apache/xbean/asm7/tree/analysis/Value;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Interpreter", "returnOperation", "(Lorg/apache/xbean/asm7/tree/AbstractInsnNode;Lorg/apache/xbean/asm7/tree/analysis/Value;Lorg/apache/xbean/asm7/tree/analysis/Value;)V", false);
methodVisitor.visitJumpInsn(GOTO, label39);
methodVisitor.visitLabel(label26);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/xbean/asm7/tree/analysis/Frame", "returnValue", "Lorg/apache/xbean/asm7/tree/analysis/Value;");
methodVisitor.visitJumpInsn(IFNULL, label39);
methodVisitor.visitTypeInsn(NEW, "org/apache/xbean/asm7/tree/analysis/AnalyzerException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitLdcInsn("Incompatible return type");
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/xbean/asm7/tree/analysis/AnalyzerException", "<init>", "(Lorg/apache/xbean/asm7/tree/AbstractInsnNode;Ljava/lang/String;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label27);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Interpreter", "newOperation", "(Lorg/apache/xbean/asm7/tree/AbstractInsnNode;)Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "push", "(Lorg/apache/xbean/asm7/tree/analysis/Value;)V", false);
methodVisitor.visitJumpInsn(GOTO, label39);
methodVisitor.visitLabel(label28);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "pop", "()Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Interpreter", "unaryOperation", "(Lorg/apache/xbean/asm7/tree/AbstractInsnNode;Lorg/apache/xbean/asm7/tree/analysis/Value;)Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitJumpInsn(GOTO, label39);
methodVisitor.visitLabel(label29);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "pop", "()Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Interpreter", "unaryOperation", "(Lorg/apache/xbean/asm7/tree/AbstractInsnNode;Lorg/apache/xbean/asm7/tree/analysis/Value;)Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "push", "(Lorg/apache/xbean/asm7/tree/analysis/Value;)V", false);
methodVisitor.visitJumpInsn(GOTO, label39);
methodVisitor.visitLabel(label30);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitTypeInsn(CHECKCAST, "org/apache/xbean/asm7/tree/MethodInsnNode");
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/xbean/asm7/tree/MethodInsnNode", "desc", "Ljava/lang/String;");
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/xbean/asm7/tree/analysis/Frame", "executeInvokeInsn", "(Lorg/apache/xbean/asm7/tree/AbstractInsnNode;Ljava/lang/String;Lorg/apache/xbean/asm7/tree/analysis/Interpreter;)V", false);
methodVisitor.visitJumpInsn(GOTO, label39);
methodVisitor.visitLabel(label31);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitTypeInsn(CHECKCAST, "org/apache/xbean/asm7/tree/InvokeDynamicInsnNode");
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/xbean/asm7/tree/InvokeDynamicInsnNode", "desc", "Ljava/lang/String;");
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/xbean/asm7/tree/analysis/Frame", "executeInvokeInsn", "(Lorg/apache/xbean/asm7/tree/AbstractInsnNode;Ljava/lang/String;Lorg/apache/xbean/asm7/tree/analysis/Interpreter;)V", false);
methodVisitor.visitJumpInsn(GOTO, label39);
methodVisitor.visitLabel(label32);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Interpreter", "newOperation", "(Lorg/apache/xbean/asm7/tree/AbstractInsnNode;)Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "push", "(Lorg/apache/xbean/asm7/tree/analysis/Value;)V", false);
methodVisitor.visitJumpInsn(GOTO, label39);
methodVisitor.visitLabel(label33);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "pop", "()Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Interpreter", "unaryOperation", "(Lorg/apache/xbean/asm7/tree/AbstractInsnNode;Lorg/apache/xbean/asm7/tree/analysis/Value;)Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "push", "(Lorg/apache/xbean/asm7/tree/analysis/Value;)V", false);
methodVisitor.visitJumpInsn(GOTO, label39);
methodVisitor.visitLabel(label34);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "pop", "()Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Interpreter", "unaryOperation", "(Lorg/apache/xbean/asm7/tree/AbstractInsnNode;Lorg/apache/xbean/asm7/tree/analysis/Value;)Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitJumpInsn(GOTO, label39);
methodVisitor.visitLabel(label35);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "pop", "()Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Interpreter", "unaryOperation", "(Lorg/apache/xbean/asm7/tree/AbstractInsnNode;Lorg/apache/xbean/asm7/tree/analysis/Value;)Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "push", "(Lorg/apache/xbean/asm7/tree/analysis/Value;)V", false);
methodVisitor.visitJumpInsn(GOTO, label39);
methodVisitor.visitLabel(label36);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "pop", "()Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Interpreter", "unaryOperation", "(Lorg/apache/xbean/asm7/tree/AbstractInsnNode;Lorg/apache/xbean/asm7/tree/analysis/Value;)Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitJumpInsn(GOTO, label39);
methodVisitor.visitLabel(label37);
methodVisitor.visitTypeInsn(NEW, "java/util/ArrayList");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/util/ArrayList", "<init>", "()V", false);
methodVisitor.visitVarInsn(ASTORE, 8);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitTypeInsn(CHECKCAST, "org/apache/xbean/asm7/tree/MultiANewArrayInsnNode");
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/xbean/asm7/tree/MultiANewArrayInsnNode", "dims", "I");
methodVisitor.visitVarInsn(ISTORE, 9);
Label label57 = new Label();
methodVisitor.visitLabel(label57);
methodVisitor.visitVarInsn(ILOAD, 9);
Label label58 = new Label();
methodVisitor.visitJumpInsn(IFLE, label58);
methodVisitor.visitVarInsn(ALOAD, 8);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "pop", "()Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "add", "(ILjava/lang/Object;)V", true);
methodVisitor.visitIincInsn(9, -1);
methodVisitor.visitJumpInsn(GOTO, label57);
methodVisitor.visitLabel(label58);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 8);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Interpreter", "naryOperation", "(Lorg/apache/xbean/asm7/tree/AbstractInsnNode;Ljava/util/List;)Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "push", "(Lorg/apache/xbean/asm7/tree/analysis/Value;)V", false);
methodVisitor.visitJumpInsn(GOTO, label39);
methodVisitor.visitLabel(label38);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "pop", "()Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Interpreter", "unaryOperation", "(Lorg/apache/xbean/asm7/tree/AbstractInsnNode;Lorg/apache/xbean/asm7/tree/analysis/Value;)Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitJumpInsn(GOTO, label39);
methodVisitor.visitLabel(label2);
methodVisitor.visitTypeInsn(NEW, "org/apache/xbean/asm7/tree/analysis/AnalyzerException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitLdcInsn("Illegal opcode ");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/AbstractInsnNode", "getOpcode", "()I", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(I)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/xbean/asm7/tree/analysis/AnalyzerException", "<init>", "(Lorg/apache/xbean/asm7/tree/AbstractInsnNode;Ljava/lang/String;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label39);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(6, 10);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PRIVATE, "executeInvokeInsn", "(Lorg/apache/xbean/asm7/tree/AbstractInsnNode;Ljava/lang/String;Lorg/apache/xbean/asm7/tree/analysis/Interpreter;)V", "(Lorg/apache/xbean/asm7/tree/AbstractInsnNode;Ljava/lang/String;Lorg/apache/xbean/asm7/tree/analysis/Interpreter<TV;>;)V", new String[] { "org/apache/xbean/asm7/tree/analysis/AnalyzerException" });
methodVisitor.visitCode();
methodVisitor.visitTypeInsn(NEW, "java/util/ArrayList");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/util/ArrayList", "<init>", "()V", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/xbean/asm7/Type", "getArgumentTypes", "(Ljava/lang/String;)[Lorg/apache/xbean/asm7/Type;", false);
methodVisitor.visitInsn(ARRAYLENGTH);
methodVisitor.visitVarInsn(ISTORE, 5);
Label label0 = new Label();
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ILOAD, 5);
Label label1 = new Label();
methodVisitor.visitJumpInsn(IFLE, label1);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "pop", "()Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/ArrayList", "add", "(ILjava/lang/Object;)V", false);
methodVisitor.visitIincInsn(5, -1);
methodVisitor.visitJumpInsn(GOTO, label0);
methodVisitor.visitLabel(label1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/AbstractInsnNode", "getOpcode", "()I", false);
methodVisitor.visitIntInsn(SIPUSH, 184);
Label label2 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPEQ, label2);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/AbstractInsnNode", "getOpcode", "()I", false);
methodVisitor.visitIntInsn(SIPUSH, 186);
methodVisitor.visitJumpInsn(IF_ICMPEQ, label2);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "pop", "()Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/ArrayList", "add", "(ILjava/lang/Object;)V", false);
methodVisitor.visitLabel(label2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/xbean/asm7/Type", "getReturnType", "(Ljava/lang/String;)Lorg/apache/xbean/asm7/Type;", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/xbean/asm7/Type", "VOID_TYPE", "Lorg/apache/xbean/asm7/Type;");
Label label3 = new Label();
methodVisitor.visitJumpInsn(IF_ACMPNE, label3);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Interpreter", "naryOperation", "(Lorg/apache/xbean/asm7/tree/AbstractInsnNode;Ljava/util/List;)Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitInsn(POP);
Label label4 = new Label();
methodVisitor.visitJumpInsn(GOTO, label4);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Interpreter", "naryOperation", "(Lorg/apache/xbean/asm7/tree/AbstractInsnNode;Ljava/util/List;)Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "push", "(Lorg/apache/xbean/asm7/tree/analysis/Value;)V", false);
methodVisitor.visitLabel(label4);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(4, 6);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "merge", "(Lorg/apache/xbean/asm7/tree/analysis/Frame;Lorg/apache/xbean/asm7/tree/analysis/Interpreter;)Z", "(Lorg/apache/xbean/asm7/tree/analysis/Frame<+TV;>;Lorg/apache/xbean/asm7/tree/analysis/Interpreter<TV;>;)Z", new String[] { "org/apache/xbean/asm7/tree/analysis/AnalyzerException" });
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/xbean/asm7/tree/analysis/Frame", "numStack", "I");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/xbean/asm7/tree/analysis/Frame", "numStack", "I");
Label label0 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPEQ, label0);
methodVisitor.visitTypeInsn(NEW, "org/apache/xbean/asm7/tree/analysis/AnalyzerException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitLdcInsn("Incompatible stack heights");
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/xbean/asm7/tree/analysis/AnalyzerException", "<init>", "(Lorg/apache/xbean/asm7/tree/AbstractInsnNode;Ljava/lang/String;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 3);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 4);
Label label1 = new Label();
methodVisitor.visitLabel(label1);
methodVisitor.visitVarInsn(ILOAD, 4);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/xbean/asm7/tree/analysis/Frame", "numLocals", "I");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/xbean/asm7/tree/analysis/Frame", "numStack", "I");
methodVisitor.visitInsn(IADD);
Label label2 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPGE, label2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/xbean/asm7/tree/analysis/Frame", "values", "[Lorg/apache/xbean/asm7/tree/analysis/Value;");
methodVisitor.visitVarInsn(ILOAD, 4);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/xbean/asm7/tree/analysis/Frame", "values", "[Lorg/apache/xbean/asm7/tree/analysis/Value;");
methodVisitor.visitVarInsn(ILOAD, 4);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Interpreter", "merge", "(Lorg/apache/xbean/asm7/tree/analysis/Value;Lorg/apache/xbean/asm7/tree/analysis/Value;)Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/xbean/asm7/tree/analysis/Frame", "values", "[Lorg/apache/xbean/asm7/tree/analysis/Value;");
methodVisitor.visitVarInsn(ILOAD, 4);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Object", "equals", "(Ljava/lang/Object;)Z", false);
Label label3 = new Label();
methodVisitor.visitJumpInsn(IFNE, label3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/xbean/asm7/tree/analysis/Frame", "values", "[Lorg/apache/xbean/asm7/tree/analysis/Value;");
methodVisitor.visitVarInsn(ILOAD, 4);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ISTORE, 3);
methodVisitor.visitLabel(label3);
methodVisitor.visitIincInsn(4, 1);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label2);
methodVisitor.visitVarInsn(ILOAD, 3);
methodVisitor.visitInsn(IRETURN);
methodVisitor.visitMaxs(4, 6);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "merge", "(Lorg/apache/xbean/asm7/tree/analysis/Frame;[Z)Z", "(Lorg/apache/xbean/asm7/tree/analysis/Frame<+TV;>;[Z)Z", null);
methodVisitor.visitCode();
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 3);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 4);
Label label0 = new Label();
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ILOAD, 4);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/xbean/asm7/tree/analysis/Frame", "numLocals", "I");
Label label1 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPGE, label1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ILOAD, 4);
methodVisitor.visitInsn(BALOAD);
Label label2 = new Label();
methodVisitor.visitJumpInsn(IFNE, label2);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/xbean/asm7/tree/analysis/Frame", "values", "[Lorg/apache/xbean/asm7/tree/analysis/Value;");
methodVisitor.visitVarInsn(ILOAD, 4);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/xbean/asm7/tree/analysis/Frame", "values", "[Lorg/apache/xbean/asm7/tree/analysis/Value;");
methodVisitor.visitVarInsn(ILOAD, 4);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Object", "equals", "(Ljava/lang/Object;)Z", false);
methodVisitor.visitJumpInsn(IFNE, label2);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/xbean/asm7/tree/analysis/Frame", "values", "[Lorg/apache/xbean/asm7/tree/analysis/Value;");
methodVisitor.visitVarInsn(ILOAD, 4);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/xbean/asm7/tree/analysis/Frame", "values", "[Lorg/apache/xbean/asm7/tree/analysis/Value;");
methodVisitor.visitVarInsn(ILOAD, 4);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ISTORE, 3);
methodVisitor.visitLabel(label2);
methodVisitor.visitIincInsn(4, 1);
methodVisitor.visitJumpInsn(GOTO, label0);
methodVisitor.visitLabel(label1);
methodVisitor.visitVarInsn(ILOAD, 3);
methodVisitor.visitInsn(IRETURN);
methodVisitor.visitMaxs(4, 5);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "toString", "()Ljava/lang/String;", null, null);
methodVisitor.visitCode();
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 2);
Label label0 = new Label();
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ILOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "getLocals", "()I", false);
Label label1 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPGE, label1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ILOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "getLocal", "(I)Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/Object;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitIincInsn(2, 1);
methodVisitor.visitJumpInsn(GOTO, label0);
methodVisitor.visitLabel(label1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitIntInsn(BIPUSH, 32);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(C)Ljava/lang/StringBuilder;", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 2);
Label label2 = new Label();
methodVisitor.visitLabel(label2);
methodVisitor.visitVarInsn(ILOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "getStackSize", "()I", false);
Label label3 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPGE, label3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ILOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/xbean/asm7/tree/analysis/Frame", "getStack", "(I)Lorg/apache/xbean/asm7/tree/analysis/Value;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Object", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitIincInsn(2, 1);
methodVisitor.visitJumpInsn(GOTO, label2);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(3, 3);
methodVisitor.visitEnd();
}
classWriter.visitEnd();

return classWriter.toByteArray();
}
}
