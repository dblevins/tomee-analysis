package asm.org.apache.openejb.config;
import org.objectweb.asm.AnnotationVisitor;
import org.objectweb.asm.Attribute;
import org.objectweb.asm.ClassReader;
import org.objectweb.asm.ClassWriter;
import org.objectweb.asm.ConstantDynamic;
import org.objectweb.asm.FieldVisitor;
import org.objectweb.asm.Handle;
import org.objectweb.asm.Label;
import org.objectweb.asm.MethodVisitor;
import org.objectweb.asm.Opcodes;
import org.objectweb.asm.RecordComponentVisitor;
import org.objectweb.asm.Type;
import org.objectweb.asm.TypePath;
public class BuiltInEnvironmentEntriesDump implements Opcodes {

public static byte[] dump () throws Exception {

ClassWriter classWriter = new ClassWriter(0);
FieldVisitor fieldVisitor;
RecordComponentVisitor recordComponentVisitor;
MethodVisitor methodVisitor;
AnnotationVisitor annotationVisitor0;

classWriter.visit(V1_8, ACC_PUBLIC | ACC_SUPER, "org/apache/openejb/config/BuiltInEnvironmentEntries", null, "java/lang/Object", new String[] { "org/apache/openejb/config/DynamicDeployer" });

classWriter.visitInnerClass("org/apache/openejb/BeanContext$Comp", "org/apache/openejb/BeanContext", "Comp", ACC_PUBLIC | ACC_STATIC);

{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_FINAL, "addDefaults", "Z", null, null);
fieldVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "<init>", "(Z)V", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/Object", "<init>", "()V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ILOAD, 1);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openejb/config/BuiltInEnvironmentEntries", "addDefaults", "Z");
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(2, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "deploy", "(Lorg/apache/openejb/config/AppModule;)Lorg/apache/openejb/config/AppModule;", null, new String[] { "org/apache/openejb/OpenEJBException" });
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/config/AppModule", "getClientModules", "()Ljava/util/List;", false);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "iterator", "()Ljava/util/Iterator;", true);
methodVisitor.visitVarInsn(ASTORE, 2);
Label label0 = new Label();
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"java/util/Iterator"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "hasNext", "()Z", true);
Label label1 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "next", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/apache/openejb/config/ClientModule");
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/config/ClientModule", "getApplicationClient", "()Lorg/apache/openejb/jee/ApplicationClient;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 4);
Label label2 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label2);
methodVisitor.visitJumpInsn(GOTO, label0);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_APPEND,2, new Object[] {"org/apache/openejb/config/ClientModule", "org/apache/openejb/jee/JndiConsumer"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/config/BuiltInEnvironmentEntries", "add", "(Lorg/apache/openejb/jee/JndiConsumer;Lorg/apache/openejb/config/DeploymentModule;Lorg/apache/openejb/config/DeploymentModule;Z)V", false);
methodVisitor.visitJumpInsn(GOTO, label0);
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_CHOP,3, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/config/AppModule", "getWebModules", "()Ljava/util/List;", false);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "iterator", "()Ljava/util/Iterator;", true);
methodVisitor.visitVarInsn(ASTORE, 2);
Label label3 = new Label();
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"java/util/Iterator"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "hasNext", "()Z", true);
Label label4 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label4);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "next", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/apache/openejb/config/WebModule");
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/config/WebModule", "getWebApp", "()Lorg/apache/openejb/jee/WebApp;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 4);
Label label5 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label5);
methodVisitor.visitJumpInsn(GOTO, label3);
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_APPEND,2, new Object[] {"org/apache/openejb/config/WebModule", "org/apache/openejb/jee/JndiConsumer"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/config/BuiltInEnvironmentEntries", "addDefaults", "Z");
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/config/BuiltInEnvironmentEntries", "add", "(Lorg/apache/openejb/jee/JndiConsumer;Lorg/apache/openejb/config/DeploymentModule;Lorg/apache/openejb/config/DeploymentModule;Z)V", false);
methodVisitor.visitJumpInsn(GOTO, label3);
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_CHOP,3, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/config/AppModule", "getEjbModules", "()Ljava/util/List;", false);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "iterator", "()Ljava/util/Iterator;", true);
methodVisitor.visitVarInsn(ASTORE, 2);
Label label6 = new Label();
methodVisitor.visitLabel(label6);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"java/util/Iterator"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "hasNext", "()Z", true);
Label label7 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label7);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "next", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/apache/openejb/config/EjbModule");
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/config/EjbModule", "getEjbJar", "()Lorg/apache/openejb/jee/EjbJar;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 4);
Label label8 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label8);
methodVisitor.visitJumpInsn(GOTO, label6);
methodVisitor.visitLabel(label8);
methodVisitor.visitFrame(Opcodes.F_APPEND,2, new Object[] {"org/apache/openejb/config/EjbModule", "org/apache/openejb/jee/EjbJar"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/jee/EjbJar", "getEnterpriseBeans", "()[Lorg/apache/openejb/jee/EnterpriseBean;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitInsn(ARRAYLENGTH);
methodVisitor.visitVarInsn(ISTORE, 6);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 7);
Label label9 = new Label();
methodVisitor.visitLabel(label9);
methodVisitor.visitFrame(Opcodes.F_APPEND,3, new Object[] {"[Lorg/apache/openejb/jee/EnterpriseBean;", Opcodes.INTEGER, Opcodes.INTEGER}, 0, null);
methodVisitor.visitVarInsn(ILOAD, 7);
methodVisitor.visitVarInsn(ILOAD, 6);
Label label10 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPGE, label10);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitVarInsn(ILOAD, 7);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 8);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 8);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/config/BuiltInEnvironmentEntries", "addDefaults", "Z");
Label label11 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label11);
methodVisitor.visitLdcInsn(Type.getType("Lorg/apache/openejb/BeanContext$Comp;"));
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getName", "()Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ALOAD, 8);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/openejb/jee/EnterpriseBean", "getEjbClass", "()Ljava/lang/String;", true);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
methodVisitor.visitJumpInsn(IFEQ, label11);
methodVisitor.visitInsn(ICONST_1);
Label label12 = new Label();
methodVisitor.visitJumpInsn(GOTO, label12);
methodVisitor.visitLabel(label11);
methodVisitor.visitFrame(Opcodes.F_FULL, 9, new Object[] {"org/apache/openejb/config/BuiltInEnvironmentEntries", "org/apache/openejb/config/AppModule", "java/util/Iterator", "org/apache/openejb/config/EjbModule", "org/apache/openejb/jee/EjbJar", "[Lorg/apache/openejb/jee/EnterpriseBean;", Opcodes.INTEGER, Opcodes.INTEGER, "org/apache/openejb/jee/EnterpriseBean"}, 4, new Object[] {"org/apache/openejb/config/BuiltInEnvironmentEntries", "org/apache/openejb/jee/EnterpriseBean", "org/apache/openejb/config/EjbModule", "org/apache/openejb/config/AppModule"});
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitLabel(label12);
methodVisitor.visitFrame(Opcodes.F_FULL, 9, new Object[] {"org/apache/openejb/config/BuiltInEnvironmentEntries", "org/apache/openejb/config/AppModule", "java/util/Iterator", "org/apache/openejb/config/EjbModule", "org/apache/openejb/jee/EjbJar", "[Lorg/apache/openejb/jee/EnterpriseBean;", Opcodes.INTEGER, Opcodes.INTEGER, "org/apache/openejb/jee/EnterpriseBean"}, 5, new Object[] {"org/apache/openejb/config/BuiltInEnvironmentEntries", "org/apache/openejb/jee/EnterpriseBean", "org/apache/openejb/config/EjbModule", "org/apache/openejb/config/AppModule", Opcodes.INTEGER});
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/config/BuiltInEnvironmentEntries", "add", "(Lorg/apache/openejb/jee/JndiConsumer;Lorg/apache/openejb/config/DeploymentModule;Lorg/apache/openejb/config/DeploymentModule;Z)V", false);
methodVisitor.visitIincInsn(7, 1);
methodVisitor.visitJumpInsn(GOTO, label9);
methodVisitor.visitLabel(label10);
methodVisitor.visitFrame(Opcodes.F_FULL, 3, new Object[] {"org/apache/openejb/config/BuiltInEnvironmentEntries", "org/apache/openejb/config/AppModule", "java/util/Iterator"}, 0, new Object[] {});
methodVisitor.visitJumpInsn(GOTO, label6);
methodVisitor.visitLabel(label7);
methodVisitor.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 9);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PRIVATE, "add", "(Lorg/apache/openejb/jee/JndiConsumer;Lorg/apache/openejb/config/DeploymentModule;Lorg/apache/openejb/config/DeploymentModule;Z)V", null, null);
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/lang/ClassNotFoundException");
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/lang/NoClassDefFoundError");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/openejb/jee/JndiConsumer", "getEnvEntryMap", "()Ljava/util/Map;", true);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/jee/EnvEntry");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/jee/EnvEntry", "<init>", "()V", false);
methodVisitor.visitLdcInsn("java:module/ModuleName");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/jee/EnvEntry", "name", "(Ljava/lang/String;)Lorg/apache/openejb/jee/EnvEntry;", false);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/openejb/config/DeploymentModule", "getModuleId", "()Ljava/lang/String;", true);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/jee/EnvEntry", "value", "(Ljava/lang/String;)Lorg/apache/openejb/jee/EnvEntry;", false);
methodVisitor.visitLdcInsn(Type.getType("Ljava/lang/String;"));
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/jee/EnvEntry", "type", "(Ljava/lang/Class;)Lorg/apache/openejb/jee/EnvEntry;", false);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/config/BuiltInEnvironmentEntries", "add", "(Ljava/util/Map;Lorg/apache/openejb/jee/JndiReference;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/openejb/jee/JndiConsumer", "getEnvEntryMap", "()Ljava/util/Map;", true);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/jee/EnvEntry");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/jee/EnvEntry", "<init>", "()V", false);
methodVisitor.visitLdcInsn("java:app/AppName");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/jee/EnvEntry", "name", "(Ljava/lang/String;)Lorg/apache/openejb/jee/EnvEntry;", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/openejb/config/DeploymentModule", "getModuleId", "()Ljava/lang/String;", true);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/jee/EnvEntry", "value", "(Ljava/lang/String;)Lorg/apache/openejb/jee/EnvEntry;", false);
methodVisitor.visitLdcInsn(Type.getType("Ljava/lang/String;"));
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/jee/EnvEntry", "type", "(Ljava/lang/Class;)Lorg/apache/openejb/jee/EnvEntry;", false);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/config/BuiltInEnvironmentEntries", "add", "(Ljava/util/Map;Lorg/apache/openejb/jee/JndiReference;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/openejb/jee/JndiConsumer", "getResourceEnvRefMap", "()Ljava/util/Map;", true);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/jee/ResourceEnvRef");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/jee/ResourceEnvRef", "<init>", "()V", false);
methodVisitor.visitLdcInsn("java:comp/BeanManager");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/jee/ResourceEnvRef", "name", "(Ljava/lang/String;)Lorg/apache/openejb/jee/ResourceEnvRef;", false);
methodVisitor.visitLdcInsn(Type.getType("Ljakarta/enterprise/inject/spi/BeanManager;"));
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/jee/ResourceEnvRef", "type", "(Ljava/lang/Class;)Lorg/apache/openejb/jee/ResourceEnvRef;", false);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/config/BuiltInEnvironmentEntries", "add", "(Ljava/util/Map;Lorg/apache/openejb/jee/JndiReference;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/openejb/jee/JndiConsumer", "getResourceEnvRefMap", "()Ljava/util/Map;", true);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/jee/ResourceEnvRef");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/jee/ResourceEnvRef", "<init>", "()V", false);
methodVisitor.visitLdcInsn("java:comp/Validator");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/jee/ResourceEnvRef", "name", "(Ljava/lang/String;)Lorg/apache/openejb/jee/ResourceEnvRef;", false);
methodVisitor.visitLdcInsn(Type.getType("Ljakarta/validation/Validator;"));
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/jee/ResourceEnvRef", "type", "(Ljava/lang/Class;)Lorg/apache/openejb/jee/ResourceEnvRef;", false);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/config/BuiltInEnvironmentEntries", "add", "(Ljava/util/Map;Lorg/apache/openejb/jee/JndiReference;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/openejb/jee/JndiConsumer", "getResourceEnvRefMap", "()Ljava/util/Map;", true);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/jee/ResourceEnvRef");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/jee/ResourceEnvRef", "<init>", "()V", false);
methodVisitor.visitLdcInsn("java:comp/ValidatorFactory");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/jee/ResourceEnvRef", "name", "(Ljava/lang/String;)Lorg/apache/openejb/jee/ResourceEnvRef;", false);
methodVisitor.visitLdcInsn(Type.getType("Ljakarta/validation/ValidatorFactory;"));
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/jee/ResourceEnvRef", "type", "(Ljava/lang/Class;)Lorg/apache/openejb/jee/ResourceEnvRef;", false);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/config/BuiltInEnvironmentEntries", "add", "(Ljava/util/Map;Lorg/apache/openejb/jee/JndiReference;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/openejb/jee/JndiConsumer", "getResourceEnvRefMap", "()Ljava/util/Map;", true);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/jee/ResourceEnvRef");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/jee/ResourceEnvRef", "<init>", "()V", false);
methodVisitor.visitLdcInsn("java:comp/TransactionManager");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/jee/ResourceEnvRef", "name", "(Ljava/lang/String;)Lorg/apache/openejb/jee/ResourceEnvRef;", false);
methodVisitor.visitLdcInsn(Type.getType("Ljakarta/transaction/TransactionManager;"));
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/jee/ResourceEnvRef", "type", "(Ljava/lang/Class;)Lorg/apache/openejb/jee/ResourceEnvRef;", false);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/config/BuiltInEnvironmentEntries", "add", "(Ljava/util/Map;Lorg/apache/openejb/jee/JndiReference;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/openejb/jee/JndiConsumer", "getResourceEnvRefMap", "()Ljava/util/Map;", true);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/jee/ResourceEnvRef");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/jee/ResourceEnvRef", "<init>", "()V", false);
methodVisitor.visitLdcInsn("java:comp/TransactionSynchronizationRegistry");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/jee/ResourceEnvRef", "name", "(Ljava/lang/String;)Lorg/apache/openejb/jee/ResourceEnvRef;", false);
methodVisitor.visitLdcInsn(Type.getType("Ljakarta/transaction/TransactionSynchronizationRegistry;"));
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/jee/ResourceEnvRef", "type", "(Ljava/lang/Class;)Lorg/apache/openejb/jee/ResourceEnvRef;", false);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/config/BuiltInEnvironmentEntries", "add", "(Ljava/util/Map;Lorg/apache/openejb/jee/JndiReference;)V", false);
methodVisitor.visitVarInsn(ILOAD, 4);
Label label3 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/openejb/jee/JndiConsumer", "getResourceEnvRefMap", "()Ljava/util/Map;", true);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/jee/ResourceEnvRef");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/jee/ResourceEnvRef", "<init>", "()V", false);
methodVisitor.visitLdcInsn("java:comp/DefaultManagedExecutorService");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/jee/ResourceEnvRef", "name", "(Ljava/lang/String;)Lorg/apache/openejb/jee/ResourceEnvRef;", false);
methodVisitor.visitLdcInsn(Type.getType("Ljakarta/enterprise/concurrent/ManagedExecutorService;"));
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/jee/ResourceEnvRef", "type", "(Ljava/lang/Class;)Lorg/apache/openejb/jee/ResourceEnvRef;", false);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/config/BuiltInEnvironmentEntries", "add", "(Ljava/util/Map;Lorg/apache/openejb/jee/JndiReference;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/openejb/jee/JndiConsumer", "getResourceEnvRefMap", "()Ljava/util/Map;", true);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/jee/ResourceEnvRef");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/jee/ResourceEnvRef", "<init>", "()V", false);
methodVisitor.visitLdcInsn("java:comp/DefaultManagedScheduledExecutorService");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/jee/ResourceEnvRef", "name", "(Ljava/lang/String;)Lorg/apache/openejb/jee/ResourceEnvRef;", false);
methodVisitor.visitLdcInsn(Type.getType("Ljakarta/enterprise/concurrent/ManagedScheduledExecutorService;"));
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/jee/ResourceEnvRef", "type", "(Ljava/lang/Class;)Lorg/apache/openejb/jee/ResourceEnvRef;", false);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/config/BuiltInEnvironmentEntries", "add", "(Ljava/util/Map;Lorg/apache/openejb/jee/JndiReference;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/openejb/jee/JndiConsumer", "getResourceEnvRefMap", "()Ljava/util/Map;", true);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/jee/ResourceEnvRef");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/jee/ResourceEnvRef", "<init>", "()V", false);
methodVisitor.visitLdcInsn("java:comp/DefaultManagedThreadFactory");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/jee/ResourceEnvRef", "name", "(Ljava/lang/String;)Lorg/apache/openejb/jee/ResourceEnvRef;", false);
methodVisitor.visitLdcInsn(Type.getType("Ljakarta/enterprise/concurrent/ManagedThreadFactory;"));
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/jee/ResourceEnvRef", "type", "(Ljava/lang/Class;)Lorg/apache/openejb/jee/ResourceEnvRef;", false);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/config/BuiltInEnvironmentEntries", "add", "(Ljava/util/Map;Lorg/apache/openejb/jee/JndiReference;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/openejb/jee/JndiConsumer", "getResourceEnvRefMap", "()Ljava/util/Map;", true);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/jee/ResourceEnvRef");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/jee/ResourceEnvRef", "<init>", "()V", false);
methodVisitor.visitLdcInsn("java:comp/DefaultContextService");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/jee/ResourceEnvRef", "name", "(Ljava/lang/String;)Lorg/apache/openejb/jee/ResourceEnvRef;", false);
methodVisitor.visitLdcInsn(Type.getType("Ljakarta/enterprise/concurrent/ContextService;"));
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/jee/ResourceEnvRef", "type", "(Ljava/lang/Class;)Lorg/apache/openejb/jee/ResourceEnvRef;", false);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/config/BuiltInEnvironmentEntries", "add", "(Ljava/util/Map;Lorg/apache/openejb/jee/JndiReference;)V", false);
methodVisitor.visitLabel(label0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/Thread", "currentThread", "()Ljava/lang/Thread;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Thread", "getContextClassLoader", "()Ljava/lang/ClassLoader;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitLdcInsn("org.apache.activemq.ActiveMQSslConnectionFactory");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/ClassLoader", "loadClass", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/jee/ResourceEnvRef");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/jee/ResourceEnvRef", "<init>", "()V", false);
methodVisitor.visitLdcInsn("java:comp/DefaultJMSConnectionFactory");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/jee/ResourceEnvRef", "name", "(Ljava/lang/String;)Lorg/apache/openejb/jee/ResourceEnvRef;", false);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitLdcInsn("jakarta.jms.ConnectionFactory");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/ClassLoader", "loadClass", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/jee/ResourceEnvRef", "type", "(Ljava/lang/Class;)Lorg/apache/openejb/jee/ResourceEnvRef;", false);
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/openejb/jee/JndiConsumer", "getResourceEnvRefMap", "()Ljava/util/Map;", true);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/config/BuiltInEnvironmentEntries", "add", "(Ljava/util/Map;Lorg/apache/openejb/jee/JndiReference;)V", false);
methodVisitor.visitLabel(label1);
methodVisitor.visitJumpInsn(GOTO, label3);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/Throwable"});
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/openejb/jee/JndiConsumer", "getEnvEntryMap", "()Ljava/util/Map;", true);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/jee/EnvEntry");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/jee/EnvEntry", "<init>", "()V", false);
methodVisitor.visitLdcInsn("java:comp/ComponentName");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/jee/EnvEntry", "name", "(Ljava/lang/String;)Lorg/apache/openejb/jee/EnvEntry;", false);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/openejb/jee/JndiConsumer", "getJndiConsumerName", "()Ljava/lang/String;", true);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/jee/EnvEntry", "value", "(Ljava/lang/String;)Lorg/apache/openejb/jee/EnvEntry;", false);
methodVisitor.visitLdcInsn(Type.getType("Ljava/lang/String;"));
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/jee/EnvEntry", "type", "(Ljava/lang/Class;)Lorg/apache/openejb/jee/EnvEntry;", false);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/config/BuiltInEnvironmentEntries", "add", "(Ljava/util/Map;Lorg/apache/openejb/jee/JndiReference;)V", false);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(4, 7);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PRIVATE, "add", "(Ljava/util/Map;Lorg/apache/openejb/jee/JndiReference;)V", "<E::Lorg/apache/openejb/jee/JndiReference;>(Ljava/util/Map<Ljava/lang/String;TE;>;TE;)V", null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/openejb/jee/JndiReference", "getKey", "()Ljava/lang/Object;", true);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "get", "(Ljava/lang/Object;)Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/apache/openejb/jee/JndiReference");
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/openejb/jee/JndiReference", "getKey", "()Ljava/lang/Object;", true);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "put", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", true);
methodVisitor.visitInsn(POP);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label0);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/openejb/jee/JndiReference", "getInjectionTarget", "()Ljava/util/Set;", true);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/openejb/jee/JndiReference", "getInjectionTarget", "()Ljava/util/Set;", true);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/Set", "addAll", "(Ljava/util/Collection;)Z", true);
methodVisitor.visitInsn(POP);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/apache/openejb/jee/JndiReference"}, 0, null);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(3, 4);
methodVisitor.visitEnd();
}
classWriter.visitEnd();

return classWriter.toByteArray();
}
}
