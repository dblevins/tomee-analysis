package asm.org.eclipse.persistence.internal.libraries.asm.xml;
import org.objectweb.asm.AnnotationVisitor;
import org.objectweb.asm.Attribute;
import org.objectweb.asm.ClassReader;
import org.objectweb.asm.ClassWriter;
import org.objectweb.asm.ConstantDynamic;
import org.objectweb.asm.FieldVisitor;
import org.objectweb.asm.Handle;
import org.objectweb.asm.Label;
import org.objectweb.asm.MethodVisitor;
import org.objectweb.asm.Opcodes;
import org.objectweb.asm.RecordComponentVisitor;
import org.objectweb.asm.Type;
import org.objectweb.asm.TypePath;
public class ASMContentHandlerDump implements Opcodes {

public static byte[] dump () throws Exception {

ClassWriter classWriter = new ClassWriter(0);
FieldVisitor fieldVisitor;
RecordComponentVisitor recordComponentVisitor;
MethodVisitor methodVisitor;
AnnotationVisitor annotationVisitor0;

classWriter.visit(V1_7, ACC_PUBLIC | ACC_SUPER | ACC_DEPRECATED, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", null, "org/xml/sax/helpers/DefaultHandler", new String[] { "org/eclipse/persistence/internal/libraries/asm/Opcodes" });

{
annotationVisitor0 = classWriter.visitAnnotation("Ljava/lang/Deprecated;", true);
annotationVisitor0.visitEnd();
}
classWriter.visitInnerClass("org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$Opcode", "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "Opcode", ACC_FINAL | ACC_STATIC);

classWriter.visitInnerClass("org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$AnnotationDefaultRule", "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "AnnotationDefaultRule", ACC_FINAL);

classWriter.visitInnerClass("org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$AnnotationValueArrayRule", "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "AnnotationValueArrayRule", ACC_FINAL);

classWriter.visitInnerClass("org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$AnnotationValueAnnotationRule", "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "AnnotationValueAnnotationRule", ACC_FINAL);

classWriter.visitInnerClass("org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$AnnotationValueEnumRule", "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "AnnotationValueEnumRule", ACC_FINAL);

classWriter.visitInnerClass("org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$AnnotationValueRule", "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "AnnotationValueRule", ACC_FINAL);

classWriter.visitInnerClass("org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$LocalVariableAnnotationRule", "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "LocalVariableAnnotationRule", ACC_FINAL);

classWriter.visitInnerClass("org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$TryCatchAnnotationRule", "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "TryCatchAnnotationRule", ACC_FINAL);

classWriter.visitInnerClass("org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$InsnAnnotationRule", "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "InsnAnnotationRule", ACC_FINAL);

classWriter.visitInnerClass("org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$AnnotationParameterRule", "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "AnnotationParameterRule", ACC_FINAL);

classWriter.visitInnerClass("org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$AnnotableParameterCountRule", "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "AnnotableParameterCountRule", ACC_FINAL);

classWriter.visitInnerClass("org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$TypeAnnotationRule", "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "TypeAnnotationRule", ACC_FINAL);

classWriter.visitInnerClass("org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$AnnotationRule", "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "AnnotationRule", ACC_FINAL);

classWriter.visitInnerClass("org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$MaxRule", "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "MaxRule", ACC_FINAL);

classWriter.visitInnerClass("org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$OpcodesRule", "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "OpcodesRule", ACC_FINAL);

classWriter.visitInnerClass("org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$InvokeDynamicBsmArgumentsRule", "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "InvokeDynamicBsmArgumentsRule", ACC_FINAL);

classWriter.visitInnerClass("org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$InvokeDynamicRule", "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "InvokeDynamicRule", ACC_FINAL);

classWriter.visitInnerClass("org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$LocalVarRule", "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "LocalVarRule", ACC_FINAL);

classWriter.visitInnerClass("org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$LineNumberRule", "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "LineNumberRule", ACC_FINAL);

classWriter.visitInnerClass("org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$TryCatchRule", "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "TryCatchRule", ACC_FINAL);

classWriter.visitInnerClass("org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$LabelRule", "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "LabelRule", ACC_FINAL);

classWriter.visitInnerClass("org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$FrameTypeRule", "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "FrameTypeRule", ACC_FINAL);

classWriter.visitInnerClass("org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$FrameRule", "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "FrameRule", ACC_FINAL);

classWriter.visitInnerClass("org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$LookupSwitchLabelRule", "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "LookupSwitchLabelRule", ACC_FINAL);

classWriter.visitInnerClass("org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$LookupSwitchRule", "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "LookupSwitchRule", ACC_FINAL);

classWriter.visitInnerClass("org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$TableSwitchLabelRule", "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "TableSwitchLabelRule", ACC_FINAL);

classWriter.visitInnerClass("org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$TableSwitchRule", "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "TableSwitchRule", ACC_FINAL);

classWriter.visitInnerClass("org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$MethodParameterRule", "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "MethodParameterRule", ACC_FINAL);

classWriter.visitInnerClass("org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$ExceptionsRule", "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "ExceptionsRule", ACC_FINAL);

classWriter.visitInnerClass("org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$ExceptionRule", "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "ExceptionRule", ACC_FINAL);

classWriter.visitInnerClass("org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$MethodRule", "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "MethodRule", ACC_FINAL);

classWriter.visitInnerClass("org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$FieldRule", "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "FieldRule", ACC_FINAL);

classWriter.visitInnerClass("org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$InnerClassRule", "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "InnerClassRule", ACC_FINAL);

classWriter.visitInnerClass("org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$OuterClassRule", "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "OuterClassRule", ACC_FINAL);

classWriter.visitInnerClass("org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$ModuleRule", "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "ModuleRule", ACC_FINAL);

classWriter.visitInnerClass("org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$InterfacesRule", "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "InterfacesRule", ACC_FINAL);

classWriter.visitInnerClass("org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$InterfaceRule", "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "InterfaceRule", ACC_FINAL);

classWriter.visitInnerClass("org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$SourceRule", "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "SourceRule", ACC_FINAL);

classWriter.visitInnerClass("org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$ClassRule", "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "ClassRule", ACC_FINAL);

classWriter.visitInnerClass("org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$Rule", "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "Rule", ACC_PROTECTED | ACC_ABSTRACT);

classWriter.visitInnerClass("org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet", "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "RuleSet", ACC_FINAL | ACC_STATIC);

classWriter.visitInnerClass("org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$OpcodeGroup", "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "OpcodeGroup", ACC_PRIVATE | ACC_STATIC | ACC_ABSTRACT | ACC_INTERFACE);

{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_FINAL, "stack", "Ljava/util/ArrayList;", "Ljava/util/ArrayList<Ljava/lang/Object;>;", null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(0, "match", "Ljava/lang/String;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PROTECTED, "cv", "Lorg/eclipse/persistence/internal/libraries/asm/ClassVisitor;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PROTECTED, "labels", "Ljava/util/Map;", "Ljava/util/Map<Ljava/lang/Object;Lorg/eclipse/persistence/internal/libraries/asm/Label;>;", null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_FINAL | ACC_STATIC, "BASE", "Ljava/lang/String;", null, "class");
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_FINAL, "RULES", "Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_FINAL | ACC_STATIC, "OPCODES", "Ljava/util/HashMap;", "Ljava/util/HashMap<Ljava/lang/String;Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$Opcode;>;", null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_FINAL | ACC_STATIC, "TYPES", "Ljava/util/HashMap;", "Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/Integer;>;", null);
fieldVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PRIVATE | ACC_STATIC, "addOpcode", "(Ljava/lang/String;II)V", null, null);
methodVisitor.visitCode();
methodVisitor.visitFieldInsn(GETSTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "OPCODES", "Ljava/util/HashMap;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitTypeInsn(NEW, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$Opcode");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ILOAD, 1);
methodVisitor.visitVarInsn(ILOAD, 2);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$Opcode", "<init>", "(II)V", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/HashMap", "put", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(6, 3);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "<init>", "(Lorg/eclipse/persistence/internal/libraries/asm/ClassVisitor;)V", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/xml/sax/helpers/DefaultHandler", "<init>", "()V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitTypeInsn(NEW, "java/util/ArrayList");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/util/ArrayList", "<init>", "()V", false);
methodVisitor.visitFieldInsn(PUTFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "stack", "Ljava/util/ArrayList;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitLdcInsn("");
methodVisitor.visitFieldInsn(PUTFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "match", "Ljava/lang/String;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitTypeInsn(NEW, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet", "<init>", "()V", false);
methodVisitor.visitFieldInsn(PUTFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "RULES", "Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "RULES", "Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet;");
methodVisitor.visitLdcInsn("class");
methodVisitor.visitTypeInsn(NEW, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$ClassRule");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$ClassRule", "<init>", "(Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler;)V", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet", "add", "(Ljava/lang/String;Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "RULES", "Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet;");
methodVisitor.visitLdcInsn("class/interfaces/interface");
methodVisitor.visitTypeInsn(NEW, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$InterfaceRule");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$InterfaceRule", "<init>", "(Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler;)V", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet", "add", "(Ljava/lang/String;Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "RULES", "Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet;");
methodVisitor.visitLdcInsn("class/interfaces");
methodVisitor.visitTypeInsn(NEW, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$InterfacesRule");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$InterfacesRule", "<init>", "(Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler;)V", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet", "add", "(Ljava/lang/String;Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "RULES", "Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet;");
methodVisitor.visitLdcInsn("class/outerclass");
methodVisitor.visitTypeInsn(NEW, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$OuterClassRule");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$OuterClassRule", "<init>", "(Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler;)V", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet", "add", "(Ljava/lang/String;Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "RULES", "Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet;");
methodVisitor.visitLdcInsn("class/innerclass");
methodVisitor.visitTypeInsn(NEW, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$InnerClassRule");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$InnerClassRule", "<init>", "(Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler;)V", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet", "add", "(Ljava/lang/String;Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "RULES", "Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet;");
methodVisitor.visitLdcInsn("class/source");
methodVisitor.visitTypeInsn(NEW, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$SourceRule");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$SourceRule", "<init>", "(Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler;)V", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet", "add", "(Ljava/lang/String;Ljava/lang/Object;)V", false);
methodVisitor.visitTypeInsn(NEW, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$ModuleRule");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$ModuleRule", "<init>", "(Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler;)V", false);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "RULES", "Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet;");
methodVisitor.visitLdcInsn("class/module");
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet", "add", "(Ljava/lang/String;Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "RULES", "Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet;");
methodVisitor.visitLdcInsn("class/module/main-class");
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet", "add", "(Ljava/lang/String;Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "RULES", "Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet;");
methodVisitor.visitLdcInsn("class/module/packages");
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet", "add", "(Ljava/lang/String;Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "RULES", "Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet;");
methodVisitor.visitLdcInsn("class/module/requires");
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet", "add", "(Ljava/lang/String;Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "RULES", "Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet;");
methodVisitor.visitLdcInsn("class/module/exports");
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet", "add", "(Ljava/lang/String;Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "RULES", "Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet;");
methodVisitor.visitLdcInsn("class/module/exports/to");
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet", "add", "(Ljava/lang/String;Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "RULES", "Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet;");
methodVisitor.visitLdcInsn("class/module/opens");
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet", "add", "(Ljava/lang/String;Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "RULES", "Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet;");
methodVisitor.visitLdcInsn("class/module/opens/to");
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet", "add", "(Ljava/lang/String;Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "RULES", "Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet;");
methodVisitor.visitLdcInsn("class/module/uses");
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet", "add", "(Ljava/lang/String;Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "RULES", "Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet;");
methodVisitor.visitLdcInsn("class/module/provides");
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet", "add", "(Ljava/lang/String;Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "RULES", "Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet;");
methodVisitor.visitLdcInsn("class/module/provides/with");
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet", "add", "(Ljava/lang/String;Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "RULES", "Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet;");
methodVisitor.visitLdcInsn("class/field");
methodVisitor.visitTypeInsn(NEW, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$FieldRule");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$FieldRule", "<init>", "(Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler;)V", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet", "add", "(Ljava/lang/String;Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "RULES", "Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet;");
methodVisitor.visitLdcInsn("class/method");
methodVisitor.visitTypeInsn(NEW, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$MethodRule");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$MethodRule", "<init>", "(Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler;)V", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet", "add", "(Ljava/lang/String;Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "RULES", "Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet;");
methodVisitor.visitLdcInsn("class/method/exceptions/exception");
methodVisitor.visitTypeInsn(NEW, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$ExceptionRule");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$ExceptionRule", "<init>", "(Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler;)V", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet", "add", "(Ljava/lang/String;Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "RULES", "Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet;");
methodVisitor.visitLdcInsn("class/method/exceptions");
methodVisitor.visitTypeInsn(NEW, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$ExceptionsRule");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$ExceptionsRule", "<init>", "(Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler;)V", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet", "add", "(Ljava/lang/String;Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "RULES", "Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet;");
methodVisitor.visitLdcInsn("class/method/parameter");
methodVisitor.visitTypeInsn(NEW, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$MethodParameterRule");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$MethodParameterRule", "<init>", "(Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler;)V", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet", "add", "(Ljava/lang/String;Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "RULES", "Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet;");
methodVisitor.visitLdcInsn("class/method/annotationDefault");
methodVisitor.visitTypeInsn(NEW, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$AnnotationDefaultRule");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$AnnotationDefaultRule", "<init>", "(Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler;)V", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet", "add", "(Ljava/lang/String;Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "RULES", "Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet;");
methodVisitor.visitLdcInsn("class/method/code/*");
methodVisitor.visitTypeInsn(NEW, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$OpcodesRule");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$OpcodesRule", "<init>", "(Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler;)V", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet", "add", "(Ljava/lang/String;Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "RULES", "Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet;");
methodVisitor.visitLdcInsn("class/method/code/frame");
methodVisitor.visitTypeInsn(NEW, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$FrameRule");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$FrameRule", "<init>", "(Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler;)V", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet", "add", "(Ljava/lang/String;Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "RULES", "Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet;");
methodVisitor.visitLdcInsn("class/method/code/frame/local");
methodVisitor.visitTypeInsn(NEW, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$FrameTypeRule");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$FrameTypeRule", "<init>", "(Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler;)V", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet", "add", "(Ljava/lang/String;Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "RULES", "Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet;");
methodVisitor.visitLdcInsn("class/method/code/frame/stack");
methodVisitor.visitTypeInsn(NEW, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$FrameTypeRule");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$FrameTypeRule", "<init>", "(Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler;)V", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet", "add", "(Ljava/lang/String;Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "RULES", "Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet;");
methodVisitor.visitLdcInsn("class/method/code/TABLESWITCH");
methodVisitor.visitTypeInsn(NEW, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$TableSwitchRule");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$TableSwitchRule", "<init>", "(Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler;)V", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet", "add", "(Ljava/lang/String;Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "RULES", "Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet;");
methodVisitor.visitLdcInsn("class/method/code/TABLESWITCH/label");
methodVisitor.visitTypeInsn(NEW, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$TableSwitchLabelRule");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$TableSwitchLabelRule", "<init>", "(Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler;)V", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet", "add", "(Ljava/lang/String;Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "RULES", "Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet;");
methodVisitor.visitLdcInsn("class/method/code/LOOKUPSWITCH");
methodVisitor.visitTypeInsn(NEW, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$LookupSwitchRule");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$LookupSwitchRule", "<init>", "(Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler;)V", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet", "add", "(Ljava/lang/String;Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "RULES", "Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet;");
methodVisitor.visitLdcInsn("class/method/code/LOOKUPSWITCH/label");
methodVisitor.visitTypeInsn(NEW, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$LookupSwitchLabelRule");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$LookupSwitchLabelRule", "<init>", "(Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler;)V", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet", "add", "(Ljava/lang/String;Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "RULES", "Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet;");
methodVisitor.visitLdcInsn("class/method/code/INVOKEDYNAMIC");
methodVisitor.visitTypeInsn(NEW, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$InvokeDynamicRule");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$InvokeDynamicRule", "<init>", "(Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler;)V", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet", "add", "(Ljava/lang/String;Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "RULES", "Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet;");
methodVisitor.visitLdcInsn("class/method/code/INVOKEDYNAMIC/bsmArg");
methodVisitor.visitTypeInsn(NEW, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$InvokeDynamicBsmArgumentsRule");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$InvokeDynamicBsmArgumentsRule", "<init>", "(Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler;)V", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet", "add", "(Ljava/lang/String;Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "RULES", "Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet;");
methodVisitor.visitLdcInsn("class/method/code/Label");
methodVisitor.visitTypeInsn(NEW, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$LabelRule");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$LabelRule", "<init>", "(Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler;)V", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet", "add", "(Ljava/lang/String;Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "RULES", "Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet;");
methodVisitor.visitLdcInsn("class/method/code/TryCatch");
methodVisitor.visitTypeInsn(NEW, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$TryCatchRule");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$TryCatchRule", "<init>", "(Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler;)V", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet", "add", "(Ljava/lang/String;Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "RULES", "Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet;");
methodVisitor.visitLdcInsn("class/method/code/LineNumber");
methodVisitor.visitTypeInsn(NEW, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$LineNumberRule");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$LineNumberRule", "<init>", "(Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler;)V", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet", "add", "(Ljava/lang/String;Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "RULES", "Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet;");
methodVisitor.visitLdcInsn("class/method/code/LocalVar");
methodVisitor.visitTypeInsn(NEW, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$LocalVarRule");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$LocalVarRule", "<init>", "(Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler;)V", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet", "add", "(Ljava/lang/String;Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "RULES", "Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet;");
methodVisitor.visitLdcInsn("class/method/code/Max");
methodVisitor.visitTypeInsn(NEW, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$MaxRule");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$MaxRule", "<init>", "(Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler;)V", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet", "add", "(Ljava/lang/String;Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "RULES", "Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet;");
methodVisitor.visitLdcInsn("*/annotation");
methodVisitor.visitTypeInsn(NEW, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$AnnotationRule");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$AnnotationRule", "<init>", "(Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler;)V", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet", "add", "(Ljava/lang/String;Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "RULES", "Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet;");
methodVisitor.visitLdcInsn("*/typeAnnotation");
methodVisitor.visitTypeInsn(NEW, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$TypeAnnotationRule");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$TypeAnnotationRule", "<init>", "(Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler;)V", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet", "add", "(Ljava/lang/String;Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "RULES", "Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet;");
methodVisitor.visitLdcInsn("*/annotableParameterCount");
methodVisitor.visitTypeInsn(NEW, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$AnnotableParameterCountRule");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$AnnotableParameterCountRule", "<init>", "(Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler;)V", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet", "add", "(Ljava/lang/String;Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "RULES", "Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet;");
methodVisitor.visitLdcInsn("*/parameterAnnotation");
methodVisitor.visitTypeInsn(NEW, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$AnnotationParameterRule");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$AnnotationParameterRule", "<init>", "(Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler;)V", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet", "add", "(Ljava/lang/String;Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "RULES", "Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet;");
methodVisitor.visitLdcInsn("*/insnAnnotation");
methodVisitor.visitTypeInsn(NEW, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$InsnAnnotationRule");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$InsnAnnotationRule", "<init>", "(Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler;)V", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet", "add", "(Ljava/lang/String;Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "RULES", "Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet;");
methodVisitor.visitLdcInsn("*/tryCatchAnnotation");
methodVisitor.visitTypeInsn(NEW, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$TryCatchAnnotationRule");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$TryCatchAnnotationRule", "<init>", "(Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler;)V", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet", "add", "(Ljava/lang/String;Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "RULES", "Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet;");
methodVisitor.visitLdcInsn("*/localVariableAnnotation");
methodVisitor.visitTypeInsn(NEW, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$LocalVariableAnnotationRule");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$LocalVariableAnnotationRule", "<init>", "(Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler;)V", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet", "add", "(Ljava/lang/String;Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "RULES", "Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet;");
methodVisitor.visitLdcInsn("*/annotationValue");
methodVisitor.visitTypeInsn(NEW, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$AnnotationValueRule");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$AnnotationValueRule", "<init>", "(Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler;)V", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet", "add", "(Ljava/lang/String;Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "RULES", "Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet;");
methodVisitor.visitLdcInsn("*/annotationValueAnnotation");
methodVisitor.visitTypeInsn(NEW, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$AnnotationValueAnnotationRule");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$AnnotationValueAnnotationRule", "<init>", "(Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler;)V", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet", "add", "(Ljava/lang/String;Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "RULES", "Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet;");
methodVisitor.visitLdcInsn("*/annotationValueEnum");
methodVisitor.visitTypeInsn(NEW, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$AnnotationValueEnumRule");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$AnnotationValueEnumRule", "<init>", "(Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler;)V", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet", "add", "(Ljava/lang/String;Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "RULES", "Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet;");
methodVisitor.visitLdcInsn("*/annotationValueArray");
methodVisitor.visitTypeInsn(NEW, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$AnnotationValueArrayRule");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$AnnotationValueArrayRule", "<init>", "(Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler;)V", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet", "add", "(Ljava/lang/String;Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(PUTFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "cv", "Lorg/eclipse/persistence/internal/libraries/asm/ClassVisitor;");
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(5, 3);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC | ACC_FINAL, "startElement", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/xml/sax/Attributes;)V", null, new String[] { "org/xml/sax/SAXException" });
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 2);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label0);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "length", "()I", false);
Label label1 = new Label();
methodVisitor.visitJumpInsn(IFNE, label1);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label2 = new Label();
methodVisitor.visitJumpInsn(GOTO, label2);
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/String"});
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "match", "Ljava/lang/String;");
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "(Ljava/lang/String;)V", false);
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "match", "Ljava/lang/String;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "length", "()I", false);
Label label3 = new Label();
methodVisitor.visitJumpInsn(IFLE, label3);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitIntInsn(BIPUSH, 47);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(C)Ljava/lang/StringBuilder;", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_APPEND,2, new Object[] {"java/lang/String", "java/lang/StringBuilder"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitFieldInsn(PUTFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "match", "Ljava/lang/String;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "RULES", "Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "match", "Ljava/lang/String;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet", "match", "(Ljava/lang/String;)Ljava/lang/Object;", false);
methodVisitor.visitTypeInsn(CHECKCAST, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$Rule");
methodVisitor.visitVarInsn(ASTORE, 7);
methodVisitor.visitVarInsn(ALOAD, 7);
Label label4 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label4);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$Rule", "begin", "(Ljava/lang/String;Lorg/xml/sax/Attributes;)V", false);
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$Rule"}, 0, null);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(3, 8);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC | ACC_FINAL, "endElement", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", null, new String[] { "org/xml/sax/SAXException" });
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 2);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label0);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "length", "()I", false);
Label label1 = new Label();
methodVisitor.visitJumpInsn(IFNE, label1);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label2 = new Label();
methodVisitor.visitJumpInsn(GOTO, label2);
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/String"});
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "RULES", "Lorg/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "match", "Ljava/lang/String;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$RuleSet", "match", "(Ljava/lang/String;)Ljava/lang/Object;", false);
methodVisitor.visitTypeInsn(CHECKCAST, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$Rule");
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 5);
Label label3 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label3);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$Rule", "end", "(Ljava/lang/String;)V", false);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_APPEND,2, new Object[] {"java/lang/String", "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler$Rule"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "match", "Ljava/lang/String;");
methodVisitor.visitIntInsn(BIPUSH, 47);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "lastIndexOf", "(I)I", false);
methodVisitor.visitVarInsn(ISTORE, 6);
methodVisitor.visitVarInsn(ILOAD, 6);
Label label4 = new Label();
methodVisitor.visitJumpInsn(IFLT, label4);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "match", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ILOAD, 6);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "substring", "(II)Ljava/lang/String;", false);
methodVisitor.visitFieldInsn(PUTFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "match", "Ljava/lang/String;");
Label label5 = new Label();
methodVisitor.visitJumpInsn(GOTO, label5);
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitLdcInsn("");
methodVisitor.visitFieldInsn(PUTFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "match", "Ljava/lang/String;");
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(4, 7);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_FINAL, "peek", "()Ljava/lang/Object;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "stack", "Ljava/util/ArrayList;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/ArrayList", "size", "()I", false);
methodVisitor.visitVarInsn(ISTORE, 1);
methodVisitor.visitVarInsn(ILOAD, 1);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNE, label0);
methodVisitor.visitInsn(ACONST_NULL);
Label label1 = new Label();
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "stack", "Ljava/util/ArrayList;");
methodVisitor.visitVarInsn(ILOAD, 1);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ISUB);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/ArrayList", "get", "(I)Ljava/lang/Object;", false);
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/Object"});
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(3, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_FINAL, "pop", "()Ljava/lang/Object;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "stack", "Ljava/util/ArrayList;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/ArrayList", "size", "()I", false);
methodVisitor.visitVarInsn(ISTORE, 1);
methodVisitor.visitVarInsn(ILOAD, 1);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNE, label0);
methodVisitor.visitInsn(ACONST_NULL);
Label label1 = new Label();
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "stack", "Ljava/util/ArrayList;");
methodVisitor.visitVarInsn(ILOAD, 1);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ISUB);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/ArrayList", "remove", "(I)Ljava/lang/Object;", false);
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/Object"});
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(3, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_FINAL, "push", "(Ljava/lang/Object;)V", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "stack", "Ljava/util/ArrayList;");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/ArrayList", "add", "(Ljava/lang/Object;)Z", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(2, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_STATIC, "<clinit>", "()V", null, null);
methodVisitor.visitCode();
methodVisitor.visitTypeInsn(NEW, "java/util/HashMap");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/util/HashMap", "<init>", "()V", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "OPCODES", "Ljava/util/HashMap;");
methodVisitor.visitLdcInsn("NOP");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("ACONST_NULL");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("ICONST_M1");
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("ICONST_0");
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("ICONST_1");
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("ICONST_2");
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("ICONST_3");
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("ICONST_4");
methodVisitor.visitIntInsn(BIPUSH, 7);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("ICONST_5");
methodVisitor.visitIntInsn(BIPUSH, 8);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("LCONST_0");
methodVisitor.visitIntInsn(BIPUSH, 9);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("LCONST_1");
methodVisitor.visitIntInsn(BIPUSH, 10);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("FCONST_0");
methodVisitor.visitIntInsn(BIPUSH, 11);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("FCONST_1");
methodVisitor.visitIntInsn(BIPUSH, 12);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("FCONST_2");
methodVisitor.visitIntInsn(BIPUSH, 13);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("DCONST_0");
methodVisitor.visitIntInsn(BIPUSH, 14);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("DCONST_1");
methodVisitor.visitIntInsn(BIPUSH, 15);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("BIPUSH");
methodVisitor.visitIntInsn(BIPUSH, 16);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("SIPUSH");
methodVisitor.visitIntInsn(BIPUSH, 17);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("LDC");
methodVisitor.visitIntInsn(BIPUSH, 18);
methodVisitor.visitIntInsn(BIPUSH, 7);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("ILOAD");
methodVisitor.visitIntInsn(BIPUSH, 21);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("LLOAD");
methodVisitor.visitIntInsn(BIPUSH, 22);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("FLOAD");
methodVisitor.visitIntInsn(BIPUSH, 23);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("DLOAD");
methodVisitor.visitIntInsn(BIPUSH, 24);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("ALOAD");
methodVisitor.visitIntInsn(BIPUSH, 25);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("IALOAD");
methodVisitor.visitIntInsn(BIPUSH, 46);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("LALOAD");
methodVisitor.visitIntInsn(BIPUSH, 47);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("FALOAD");
methodVisitor.visitIntInsn(BIPUSH, 48);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("DALOAD");
methodVisitor.visitIntInsn(BIPUSH, 49);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("AALOAD");
methodVisitor.visitIntInsn(BIPUSH, 50);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("BALOAD");
methodVisitor.visitIntInsn(BIPUSH, 51);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("CALOAD");
methodVisitor.visitIntInsn(BIPUSH, 52);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("SALOAD");
methodVisitor.visitIntInsn(BIPUSH, 53);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("ISTORE");
methodVisitor.visitIntInsn(BIPUSH, 54);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("LSTORE");
methodVisitor.visitIntInsn(BIPUSH, 55);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("FSTORE");
methodVisitor.visitIntInsn(BIPUSH, 56);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("DSTORE");
methodVisitor.visitIntInsn(BIPUSH, 57);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("ASTORE");
methodVisitor.visitIntInsn(BIPUSH, 58);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("IASTORE");
methodVisitor.visitIntInsn(BIPUSH, 79);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("LASTORE");
methodVisitor.visitIntInsn(BIPUSH, 80);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("FASTORE");
methodVisitor.visitIntInsn(BIPUSH, 81);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("DASTORE");
methodVisitor.visitIntInsn(BIPUSH, 82);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("AASTORE");
methodVisitor.visitIntInsn(BIPUSH, 83);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("BASTORE");
methodVisitor.visitIntInsn(BIPUSH, 84);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("CASTORE");
methodVisitor.visitIntInsn(BIPUSH, 85);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("SASTORE");
methodVisitor.visitIntInsn(BIPUSH, 86);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("POP");
methodVisitor.visitIntInsn(BIPUSH, 87);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("POP2");
methodVisitor.visitIntInsn(BIPUSH, 88);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("DUP");
methodVisitor.visitIntInsn(BIPUSH, 89);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("DUP_X1");
methodVisitor.visitIntInsn(BIPUSH, 90);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("DUP_X2");
methodVisitor.visitIntInsn(BIPUSH, 91);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("DUP2");
methodVisitor.visitIntInsn(BIPUSH, 92);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("DUP2_X1");
methodVisitor.visitIntInsn(BIPUSH, 93);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("DUP2_X2");
methodVisitor.visitIntInsn(BIPUSH, 94);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("SWAP");
methodVisitor.visitIntInsn(BIPUSH, 95);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("IADD");
methodVisitor.visitIntInsn(BIPUSH, 96);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("LADD");
methodVisitor.visitIntInsn(BIPUSH, 97);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("FADD");
methodVisitor.visitIntInsn(BIPUSH, 98);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("DADD");
methodVisitor.visitIntInsn(BIPUSH, 99);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("ISUB");
methodVisitor.visitIntInsn(BIPUSH, 100);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("LSUB");
methodVisitor.visitIntInsn(BIPUSH, 101);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("FSUB");
methodVisitor.visitIntInsn(BIPUSH, 102);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("DSUB");
methodVisitor.visitIntInsn(BIPUSH, 103);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("IMUL");
methodVisitor.visitIntInsn(BIPUSH, 104);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("LMUL");
methodVisitor.visitIntInsn(BIPUSH, 105);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("FMUL");
methodVisitor.visitIntInsn(BIPUSH, 106);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("DMUL");
methodVisitor.visitIntInsn(BIPUSH, 107);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("IDIV");
methodVisitor.visitIntInsn(BIPUSH, 108);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("LDIV");
methodVisitor.visitIntInsn(BIPUSH, 109);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("FDIV");
methodVisitor.visitIntInsn(BIPUSH, 110);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("DDIV");
methodVisitor.visitIntInsn(BIPUSH, 111);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("IREM");
methodVisitor.visitIntInsn(BIPUSH, 112);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("LREM");
methodVisitor.visitIntInsn(BIPUSH, 113);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("FREM");
methodVisitor.visitIntInsn(BIPUSH, 114);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("DREM");
methodVisitor.visitIntInsn(BIPUSH, 115);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("INEG");
methodVisitor.visitIntInsn(BIPUSH, 116);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("LNEG");
methodVisitor.visitIntInsn(BIPUSH, 117);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("FNEG");
methodVisitor.visitIntInsn(BIPUSH, 118);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("DNEG");
methodVisitor.visitIntInsn(BIPUSH, 119);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("ISHL");
methodVisitor.visitIntInsn(BIPUSH, 120);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("LSHL");
methodVisitor.visitIntInsn(BIPUSH, 121);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("ISHR");
methodVisitor.visitIntInsn(BIPUSH, 122);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("LSHR");
methodVisitor.visitIntInsn(BIPUSH, 123);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("IUSHR");
methodVisitor.visitIntInsn(BIPUSH, 124);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("LUSHR");
methodVisitor.visitIntInsn(BIPUSH, 125);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("IAND");
methodVisitor.visitIntInsn(BIPUSH, 126);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("LAND");
methodVisitor.visitIntInsn(BIPUSH, 127);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("IOR");
methodVisitor.visitIntInsn(SIPUSH, 128);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("LOR");
methodVisitor.visitIntInsn(SIPUSH, 129);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("IXOR");
methodVisitor.visitIntInsn(SIPUSH, 130);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("LXOR");
methodVisitor.visitIntInsn(SIPUSH, 131);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("IINC");
methodVisitor.visitIntInsn(SIPUSH, 132);
methodVisitor.visitIntInsn(BIPUSH, 8);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("I2L");
methodVisitor.visitIntInsn(SIPUSH, 133);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("I2F");
methodVisitor.visitIntInsn(SIPUSH, 134);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("I2D");
methodVisitor.visitIntInsn(SIPUSH, 135);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("L2I");
methodVisitor.visitIntInsn(SIPUSH, 136);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("L2F");
methodVisitor.visitIntInsn(SIPUSH, 137);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("L2D");
methodVisitor.visitIntInsn(SIPUSH, 138);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("F2I");
methodVisitor.visitIntInsn(SIPUSH, 139);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("F2L");
methodVisitor.visitIntInsn(SIPUSH, 140);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("F2D");
methodVisitor.visitIntInsn(SIPUSH, 141);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("D2I");
methodVisitor.visitIntInsn(SIPUSH, 142);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("D2L");
methodVisitor.visitIntInsn(SIPUSH, 143);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("D2F");
methodVisitor.visitIntInsn(SIPUSH, 144);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("I2B");
methodVisitor.visitIntInsn(SIPUSH, 145);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("I2C");
methodVisitor.visitIntInsn(SIPUSH, 146);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("I2S");
methodVisitor.visitIntInsn(SIPUSH, 147);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("LCMP");
methodVisitor.visitIntInsn(SIPUSH, 148);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("FCMPL");
methodVisitor.visitIntInsn(SIPUSH, 149);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("FCMPG");
methodVisitor.visitIntInsn(SIPUSH, 150);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("DCMPL");
methodVisitor.visitIntInsn(SIPUSH, 151);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("DCMPG");
methodVisitor.visitIntInsn(SIPUSH, 152);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("IFEQ");
methodVisitor.visitIntInsn(SIPUSH, 153);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("IFNE");
methodVisitor.visitIntInsn(SIPUSH, 154);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("IFLT");
methodVisitor.visitIntInsn(SIPUSH, 155);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("IFGE");
methodVisitor.visitIntInsn(SIPUSH, 156);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("IFGT");
methodVisitor.visitIntInsn(SIPUSH, 157);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("IFLE");
methodVisitor.visitIntInsn(SIPUSH, 158);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("IF_ICMPEQ");
methodVisitor.visitIntInsn(SIPUSH, 159);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("IF_ICMPNE");
methodVisitor.visitIntInsn(SIPUSH, 160);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("IF_ICMPLT");
methodVisitor.visitIntInsn(SIPUSH, 161);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("IF_ICMPGE");
methodVisitor.visitIntInsn(SIPUSH, 162);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("IF_ICMPGT");
methodVisitor.visitIntInsn(SIPUSH, 163);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("IF_ICMPLE");
methodVisitor.visitIntInsn(SIPUSH, 164);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("IF_ACMPEQ");
methodVisitor.visitIntInsn(SIPUSH, 165);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("IF_ACMPNE");
methodVisitor.visitIntInsn(SIPUSH, 166);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("GOTO");
methodVisitor.visitIntInsn(SIPUSH, 167);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("JSR");
methodVisitor.visitIntInsn(SIPUSH, 168);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("RET");
methodVisitor.visitIntInsn(SIPUSH, 169);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("IRETURN");
methodVisitor.visitIntInsn(SIPUSH, 172);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("LRETURN");
methodVisitor.visitIntInsn(SIPUSH, 173);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("FRETURN");
methodVisitor.visitIntInsn(SIPUSH, 174);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("DRETURN");
methodVisitor.visitIntInsn(SIPUSH, 175);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("ARETURN");
methodVisitor.visitIntInsn(SIPUSH, 176);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("RETURN");
methodVisitor.visitIntInsn(SIPUSH, 177);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("GETSTATIC");
methodVisitor.visitIntInsn(SIPUSH, 178);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("PUTSTATIC");
methodVisitor.visitIntInsn(SIPUSH, 179);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("GETFIELD");
methodVisitor.visitIntInsn(SIPUSH, 180);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("PUTFIELD");
methodVisitor.visitIntInsn(SIPUSH, 181);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("INVOKEVIRTUAL");
methodVisitor.visitIntInsn(SIPUSH, 182);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("INVOKESPECIAL");
methodVisitor.visitIntInsn(SIPUSH, 183);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("INVOKESTATIC");
methodVisitor.visitIntInsn(SIPUSH, 184);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("INVOKEINTERFACE");
methodVisitor.visitIntInsn(SIPUSH, 185);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("NEW");
methodVisitor.visitIntInsn(SIPUSH, 187);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("NEWARRAY");
methodVisitor.visitIntInsn(SIPUSH, 188);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("ANEWARRAY");
methodVisitor.visitIntInsn(SIPUSH, 189);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("ARRAYLENGTH");
methodVisitor.visitIntInsn(SIPUSH, 190);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("ATHROW");
methodVisitor.visitIntInsn(SIPUSH, 191);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("CHECKCAST");
methodVisitor.visitIntInsn(SIPUSH, 192);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("INSTANCEOF");
methodVisitor.visitIntInsn(SIPUSH, 193);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("MONITORENTER");
methodVisitor.visitIntInsn(SIPUSH, 194);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("MONITOREXIT");
methodVisitor.visitIntInsn(SIPUSH, 195);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("MULTIANEWARRAY");
methodVisitor.visitIntInsn(SIPUSH, 197);
methodVisitor.visitIntInsn(BIPUSH, 9);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("IFNULL");
methodVisitor.visitIntInsn(SIPUSH, 198);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitLdcInsn("IFNONNULL");
methodVisitor.visitIntInsn(SIPUSH, 199);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "addOpcode", "(Ljava/lang/String;II)V", false);
methodVisitor.visitTypeInsn(NEW, "java/util/HashMap");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/util/HashMap", "<init>", "()V", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "TYPES", "Ljava/util/HashMap;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/SAXCodeAdapter", "TYPES", "[Ljava/lang/String;");
methodVisitor.visitVarInsn(ASTORE, 0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 1);
Label label0 = new Label();
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_APPEND,2, new Object[] {"[Ljava/lang/String;", Opcodes.INTEGER}, 0, null);
methodVisitor.visitVarInsn(ILOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitInsn(ARRAYLENGTH);
Label label1 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPGE, label1);
methodVisitor.visitFieldInsn(GETSTATIC, "org/eclipse/persistence/internal/libraries/asm/xml/ASMContentHandler", "TYPES", "Ljava/util/HashMap;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ILOAD, 1);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ILOAD, 1);
methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/Integer", "valueOf", "(I)Ljava/lang/Integer;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/HashMap", "put", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitIincInsn(1, 1);
methodVisitor.visitJumpInsn(GOTO, label0);
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_CHOP,2, null, 0, null);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(3, 2);
methodVisitor.visitEnd();
}
classWriter.visitEnd();

return classWriter.toByteArray();
}
}
