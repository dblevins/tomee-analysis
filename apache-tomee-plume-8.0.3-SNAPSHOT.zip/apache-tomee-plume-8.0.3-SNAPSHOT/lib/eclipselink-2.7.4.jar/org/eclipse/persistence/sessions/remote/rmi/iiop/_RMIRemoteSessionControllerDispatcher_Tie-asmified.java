package asm.org.eclipse.persistence.sessions.remote.rmi.iiop;
import org.objectweb.asm.AnnotationVisitor;
import org.objectweb.asm.Attribute;
import org.objectweb.asm.ClassReader;
import org.objectweb.asm.ClassWriter;
import org.objectweb.asm.ConstantDynamic;
import org.objectweb.asm.FieldVisitor;
import org.objectweb.asm.Handle;
import org.objectweb.asm.Label;
import org.objectweb.asm.MethodVisitor;
import org.objectweb.asm.Opcodes;
import org.objectweb.asm.RecordComponentVisitor;
import org.objectweb.asm.Type;
import org.objectweb.asm.TypePath;
public class _RMIRemoteSessionControllerDispatcher_TieDump implements Opcodes {

public static byte[] dump () throws Exception {

ClassWriter classWriter = new ClassWriter(0);
FieldVisitor fieldVisitor;
RecordComponentVisitor recordComponentVisitor;
MethodVisitor methodVisitor;
AnnotationVisitor annotationVisitor0;

classWriter.visit(V1_8, ACC_PUBLIC | ACC_SUPER, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", null, "org/omg/CORBA_2_3/portable/ObjectImpl", new String[] { "javax/rmi/CORBA/Tie" });

{
fieldVisitor = classWriter.visitField(ACC_PRIVATE, "target", "Lorg/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_FINAL | ACC_STATIC, "_type_ids", "[Ljava/lang/String;", null, null);
fieldVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_STATIC, "<clinit>", "()V", null, null);
methodVisitor.visitCode();
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/String");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitLdcInsn("RMI:org.eclipse.persistence.sessions.remote.rmi.iiop.RMIRemoteSessionController:0000000000000000");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "_type_ids", "[Ljava/lang/String;");
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(4, 0);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "<init>", "()V", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/omg/CORBA_2_3/portable/ObjectImpl", "<init>", "()V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitFieldInsn(PUTFIELD, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "target", "Lorg/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher;");
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(2, 1);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "_ids", "()[Ljava/lang/String;", null, null);
methodVisitor.visitCode();
methodVisitor.visitFieldInsn(GETSTATIC, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "_type_ids", "[Ljava/lang/String;");
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(1, 1);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "_invoke", "(Ljava/lang/String;Lorg/omg/CORBA/portable/InputStream;Lorg/omg/CORBA/portable/ResponseHandler;)Lorg/omg/CORBA/portable/OutputStream;", null, new String[] { "org/omg/CORBA/SystemException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "org/omg/CORBA/SystemException");
Label label3 = new Label();
Label label4 = new Label();
methodVisitor.visitTryCatchBlock(label3, label4, label2, "org/omg/CORBA/SystemException");
Label label5 = new Label();
Label label6 = new Label();
methodVisitor.visitTryCatchBlock(label5, label6, label2, "org/omg/CORBA/SystemException");
Label label7 = new Label();
Label label8 = new Label();
methodVisitor.visitTryCatchBlock(label7, label8, label2, "org/omg/CORBA/SystemException");
Label label9 = new Label();
Label label10 = new Label();
methodVisitor.visitTryCatchBlock(label9, label10, label2, "org/omg/CORBA/SystemException");
Label label11 = new Label();
Label label12 = new Label();
methodVisitor.visitTryCatchBlock(label11, label12, label2, "org/omg/CORBA/SystemException");
Label label13 = new Label();
Label label14 = new Label();
methodVisitor.visitTryCatchBlock(label13, label14, label2, "org/omg/CORBA/SystemException");
Label label15 = new Label();
Label label16 = new Label();
methodVisitor.visitTryCatchBlock(label15, label16, label2, "org/omg/CORBA/SystemException");
Label label17 = new Label();
Label label18 = new Label();
methodVisitor.visitTryCatchBlock(label17, label18, label2, "org/omg/CORBA/SystemException");
Label label19 = new Label();
Label label20 = new Label();
methodVisitor.visitTryCatchBlock(label19, label20, label2, "org/omg/CORBA/SystemException");
Label label21 = new Label();
Label label22 = new Label();
methodVisitor.visitTryCatchBlock(label21, label22, label2, "org/omg/CORBA/SystemException");
Label label23 = new Label();
Label label24 = new Label();
methodVisitor.visitTryCatchBlock(label23, label24, label2, "org/omg/CORBA/SystemException");
Label label25 = new Label();
Label label26 = new Label();
methodVisitor.visitTryCatchBlock(label25, label26, label2, "org/omg/CORBA/SystemException");
Label label27 = new Label();
Label label28 = new Label();
methodVisitor.visitTryCatchBlock(label27, label28, label2, "org/omg/CORBA/SystemException");
Label label29 = new Label();
Label label30 = new Label();
methodVisitor.visitTryCatchBlock(label29, label30, label2, "org/omg/CORBA/SystemException");
Label label31 = new Label();
Label label32 = new Label();
methodVisitor.visitTryCatchBlock(label31, label32, label2, "org/omg/CORBA/SystemException");
Label label33 = new Label();
Label label34 = new Label();
methodVisitor.visitTryCatchBlock(label33, label34, label2, "org/omg/CORBA/SystemException");
Label label35 = new Label();
Label label36 = new Label();
methodVisitor.visitTryCatchBlock(label35, label36, label2, "org/omg/CORBA/SystemException");
Label label37 = new Label();
Label label38 = new Label();
methodVisitor.visitTryCatchBlock(label37, label38, label2, "org/omg/CORBA/SystemException");
Label label39 = new Label();
Label label40 = new Label();
methodVisitor.visitTryCatchBlock(label39, label40, label2, "org/omg/CORBA/SystemException");
Label label41 = new Label();
Label label42 = new Label();
methodVisitor.visitTryCatchBlock(label41, label42, label2, "org/omg/CORBA/SystemException");
Label label43 = new Label();
Label label44 = new Label();
methodVisitor.visitTryCatchBlock(label43, label44, label2, "org/omg/CORBA/SystemException");
Label label45 = new Label();
Label label46 = new Label();
methodVisitor.visitTryCatchBlock(label45, label46, label2, "org/omg/CORBA/SystemException");
Label label47 = new Label();
Label label48 = new Label();
methodVisitor.visitTryCatchBlock(label47, label48, label2, "org/omg/CORBA/SystemException");
Label label49 = new Label();
Label label50 = new Label();
methodVisitor.visitTryCatchBlock(label49, label50, label2, "org/omg/CORBA/SystemException");
Label label51 = new Label();
Label label52 = new Label();
methodVisitor.visitTryCatchBlock(label51, label52, label2, "org/omg/CORBA/SystemException");
Label label53 = new Label();
Label label54 = new Label();
methodVisitor.visitTryCatchBlock(label53, label54, label2, "org/omg/CORBA/SystemException");
Label label55 = new Label();
Label label56 = new Label();
methodVisitor.visitTryCatchBlock(label55, label56, label2, "org/omg/CORBA/SystemException");
Label label57 = new Label();
Label label58 = new Label();
methodVisitor.visitTryCatchBlock(label57, label58, label2, "org/omg/CORBA/SystemException");
Label label59 = new Label();
Label label60 = new Label();
methodVisitor.visitTryCatchBlock(label59, label60, label2, "org/omg/CORBA/SystemException");
Label label61 = new Label();
Label label62 = new Label();
methodVisitor.visitTryCatchBlock(label61, label62, label2, "org/omg/CORBA/SystemException");
Label label63 = new Label();
Label label64 = new Label();
methodVisitor.visitTryCatchBlock(label63, label64, label2, "org/omg/CORBA/SystemException");
Label label65 = new Label();
Label label66 = new Label();
methodVisitor.visitTryCatchBlock(label65, label66, label2, "org/omg/CORBA/SystemException");
Label label67 = new Label();
Label label68 = new Label();
methodVisitor.visitTryCatchBlock(label67, label68, label2, "org/omg/CORBA/SystemException");
Label label69 = new Label();
methodVisitor.visitTryCatchBlock(label69, label2, label2, "org/omg/CORBA/SystemException");
Label label70 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label70, "java/lang/Throwable");
methodVisitor.visitTryCatchBlock(label3, label4, label70, "java/lang/Throwable");
methodVisitor.visitTryCatchBlock(label5, label6, label70, "java/lang/Throwable");
methodVisitor.visitTryCatchBlock(label7, label8, label70, "java/lang/Throwable");
methodVisitor.visitTryCatchBlock(label9, label10, label70, "java/lang/Throwable");
methodVisitor.visitTryCatchBlock(label11, label12, label70, "java/lang/Throwable");
methodVisitor.visitTryCatchBlock(label13, label14, label70, "java/lang/Throwable");
methodVisitor.visitTryCatchBlock(label15, label16, label70, "java/lang/Throwable");
methodVisitor.visitTryCatchBlock(label17, label18, label70, "java/lang/Throwable");
methodVisitor.visitTryCatchBlock(label19, label20, label70, "java/lang/Throwable");
methodVisitor.visitTryCatchBlock(label21, label22, label70, "java/lang/Throwable");
methodVisitor.visitTryCatchBlock(label23, label24, label70, "java/lang/Throwable");
methodVisitor.visitTryCatchBlock(label25, label26, label70, "java/lang/Throwable");
methodVisitor.visitTryCatchBlock(label27, label28, label70, "java/lang/Throwable");
methodVisitor.visitTryCatchBlock(label29, label30, label70, "java/lang/Throwable");
methodVisitor.visitTryCatchBlock(label31, label32, label70, "java/lang/Throwable");
methodVisitor.visitTryCatchBlock(label33, label34, label70, "java/lang/Throwable");
methodVisitor.visitTryCatchBlock(label35, label36, label70, "java/lang/Throwable");
methodVisitor.visitTryCatchBlock(label37, label38, label70, "java/lang/Throwable");
methodVisitor.visitTryCatchBlock(label39, label40, label70, "java/lang/Throwable");
methodVisitor.visitTryCatchBlock(label41, label42, label70, "java/lang/Throwable");
methodVisitor.visitTryCatchBlock(label43, label44, label70, "java/lang/Throwable");
methodVisitor.visitTryCatchBlock(label45, label46, label70, "java/lang/Throwable");
methodVisitor.visitTryCatchBlock(label47, label48, label70, "java/lang/Throwable");
methodVisitor.visitTryCatchBlock(label49, label50, label70, "java/lang/Throwable");
methodVisitor.visitTryCatchBlock(label51, label52, label70, "java/lang/Throwable");
methodVisitor.visitTryCatchBlock(label53, label54, label70, "java/lang/Throwable");
methodVisitor.visitTryCatchBlock(label55, label56, label70, "java/lang/Throwable");
methodVisitor.visitTryCatchBlock(label57, label58, label70, "java/lang/Throwable");
methodVisitor.visitTryCatchBlock(label59, label60, label70, "java/lang/Throwable");
methodVisitor.visitTryCatchBlock(label61, label62, label70, "java/lang/Throwable");
methodVisitor.visitTryCatchBlock(label63, label64, label70, "java/lang/Throwable");
methodVisitor.visitTryCatchBlock(label65, label66, label70, "java/lang/Throwable");
methodVisitor.visitTryCatchBlock(label67, label68, label70, "java/lang/Throwable");
methodVisitor.visitTryCatchBlock(label69, label2, label70, "java/lang/Throwable");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitTypeInsn(CHECKCAST, "org/omg/CORBA_2_3/portable/InputStream");
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "length", "()I", false);
Label label71 = new Label();
methodVisitor.visitTableSwitchInsn(10, 37, label69, new Label[] { label71, label69, label3, label5, label7, label69, label9, label11, label15, label17, label23, label29, label37, label43, label45, label49, label51, label55, label59, label61, label63, label69, label69, label69, label69, label69, label65, label67 });
methodVisitor.visitLabel(label71);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/omg/CORBA_2_3/portable/InputStream"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitLdcInsn("_get_login");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
methodVisitor.visitJumpInsn(IFEQ, label3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "target", "Lorg/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher", "getLogin", "()Lorg/eclipse/persistence/internal/sessions/remote/Transporter;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/omg/CORBA/portable/ResponseHandler", "createReply", "()Lorg/omg/CORBA/portable/OutputStream;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/omg/CORBA_2_3/portable/OutputStream");
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "writeTransporter", "(Lorg/eclipse/persistence/internal/sessions/remote/Transporter;Lorg/omg/CORBA/portable/OutputStream;)V", false);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitLabel(label1);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitLdcInsn("executeQuery");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
methodVisitor.visitJumpInsn(IFEQ, label5);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "readTransporter", "(Lorg/omg/CORBA/portable/InputStream;)Lorg/eclipse/persistence/internal/sessions/remote/Transporter;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "target", "Lorg/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher;");
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher", "executeQuery", "(Lorg/eclipse/persistence/internal/sessions/remote/Transporter;)Lorg/eclipse/persistence/internal/sessions/remote/Transporter;", false);
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/omg/CORBA/portable/ResponseHandler", "createReply", "()Lorg/omg/CORBA/portable/OutputStream;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/omg/CORBA_2_3/portable/OutputStream");
methodVisitor.visitVarInsn(ASTORE, 7);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "writeTransporter", "(Lorg/eclipse/persistence/internal/sessions/remote/Transporter;Lorg/omg/CORBA/portable/OutputStream;)V", false);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitLabel(label4);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitLdcInsn("getDescriptor");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
methodVisitor.visitJumpInsn(IFEQ, label7);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "readTransporter", "(Lorg/omg/CORBA/portable/InputStream;)Lorg/eclipse/persistence/internal/sessions/remote/Transporter;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "target", "Lorg/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher;");
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher", "getDescriptor", "(Lorg/eclipse/persistence/internal/sessions/remote/Transporter;)Lorg/eclipse/persistence/internal/sessions/remote/Transporter;", false);
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/omg/CORBA/portable/ResponseHandler", "createReply", "()Lorg/omg/CORBA/portable/OutputStream;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/omg/CORBA_2_3/portable/OutputStream");
methodVisitor.visitVarInsn(ASTORE, 7);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "writeTransporter", "(Lorg/eclipse/persistence/internal/sessions/remote/Transporter;Lorg/omg/CORBA/portable/OutputStream;)V", false);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitLabel(label6);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label7);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitLdcInsn("processCommand");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
methodVisitor.visitJumpInsn(IFEQ, label9);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitLdcInsn(Type.getType("Lorg/eclipse/persistence/internal/sessions/remote/Transporter;"));
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/omg/CORBA_2_3/portable/InputStream", "read_value", "(Ljava/lang/Class;)Ljava/io/Serializable;", false);
methodVisitor.visitTypeInsn(CHECKCAST, "org/eclipse/persistence/internal/sessions/remote/Transporter");
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "target", "Lorg/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher;");
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher", "processCommand", "(Lorg/eclipse/persistence/internal/sessions/remote/Transporter;)Lorg/eclipse/persistence/internal/sessions/remote/Transporter;", false);
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/omg/CORBA/portable/ResponseHandler", "createReply", "()Lorg/omg/CORBA/portable/OutputStream;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/omg/CORBA_2_3/portable/OutputStream");
methodVisitor.visitVarInsn(ASTORE, 7);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitLdcInsn(Type.getType("Lorg/eclipse/persistence/internal/sessions/remote/Transporter;"));
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/omg/CORBA_2_3/portable/OutputStream", "write_value", "(Ljava/io/Serializable;Ljava/lang/Class;)V", false);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitLabel(label8);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label9);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitLdcInsn("beginTransaction");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
methodVisitor.visitJumpInsn(IFEQ, label11);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "target", "Lorg/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher", "beginTransaction", "()Lorg/eclipse/persistence/internal/sessions/remote/Transporter;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/omg/CORBA/portable/ResponseHandler", "createReply", "()Lorg/omg/CORBA/portable/OutputStream;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/omg/CORBA_2_3/portable/OutputStream");
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "writeTransporter", "(Lorg/eclipse/persistence/internal/sessions/remote/Transporter;Lorg/omg/CORBA/portable/OutputStream;)V", false);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitLabel(label10);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label11);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitLdcInsn("commitTransaction");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
methodVisitor.visitJumpInsn(IFEQ, label13);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "target", "Lorg/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher", "commitTransaction", "()Lorg/eclipse/persistence/internal/sessions/remote/Transporter;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/omg/CORBA/portable/ResponseHandler", "createReply", "()Lorg/omg/CORBA/portable/OutputStream;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/omg/CORBA_2_3/portable/OutputStream");
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "writeTransporter", "(Lorg/eclipse/persistence/internal/sessions/remote/Transporter;Lorg/omg/CORBA/portable/OutputStream;)V", false);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitLabel(label12);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label13);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitLdcInsn("executeNamedQuery");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
methodVisitor.visitJumpInsn(IFEQ, label15);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "readTransporter", "(Lorg/omg/CORBA/portable/InputStream;)Lorg/eclipse/persistence/internal/sessions/remote/Transporter;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "readTransporter", "(Lorg/omg/CORBA/portable/InputStream;)Lorg/eclipse/persistence/internal/sessions/remote/Transporter;", false);
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "readTransporter", "(Lorg/omg/CORBA/portable/InputStream;)Lorg/eclipse/persistence/internal/sessions/remote/Transporter;", false);
methodVisitor.visitVarInsn(ASTORE, 7);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "target", "Lorg/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher;");
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher", "executeNamedQuery", "(Lorg/eclipse/persistence/internal/sessions/remote/Transporter;Lorg/eclipse/persistence/internal/sessions/remote/Transporter;Lorg/eclipse/persistence/internal/sessions/remote/Transporter;)Lorg/eclipse/persistence/internal/sessions/remote/Transporter;", false);
methodVisitor.visitVarInsn(ASTORE, 8);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/omg/CORBA/portable/ResponseHandler", "createReply", "()Lorg/omg/CORBA/portable/OutputStream;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/omg/CORBA_2_3/portable/OutputStream");
methodVisitor.visitVarInsn(ASTORE, 9);
methodVisitor.visitVarInsn(ALOAD, 8);
methodVisitor.visitVarInsn(ALOAD, 9);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "writeTransporter", "(Lorg/eclipse/persistence/internal/sessions/remote/Transporter;Lorg/omg/CORBA/portable/OutputStream;)V", false);
methodVisitor.visitVarInsn(ALOAD, 9);
methodVisitor.visitLabel(label14);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label15);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitLdcInsn("cursoredStreamSize");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
methodVisitor.visitJumpInsn(IFEQ, label17);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "readTransporter", "(Lorg/omg/CORBA/portable/InputStream;)Lorg/eclipse/persistence/internal/sessions/remote/Transporter;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "target", "Lorg/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher;");
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher", "cursoredStreamSize", "(Lorg/eclipse/persistence/internal/sessions/remote/Transporter;)Lorg/eclipse/persistence/internal/sessions/remote/Transporter;", false);
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/omg/CORBA/portable/ResponseHandler", "createReply", "()Lorg/omg/CORBA/portable/OutputStream;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/omg/CORBA_2_3/portable/OutputStream");
methodVisitor.visitVarInsn(ASTORE, 7);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "writeTransporter", "(Lorg/eclipse/persistence/internal/sessions/remote/Transporter;Lorg/omg/CORBA/portable/OutputStream;)V", false);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitLabel(label16);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label17);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitLdcInsn("cursorSelectObjects");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
methodVisitor.visitJumpInsn(IFEQ, label19);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "readTransporter", "(Lorg/omg/CORBA/portable/InputStream;)Lorg/eclipse/persistence/internal/sessions/remote/Transporter;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "target", "Lorg/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher;");
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher", "cursorSelectObjects", "(Lorg/eclipse/persistence/internal/sessions/remote/Transporter;)Lorg/eclipse/persistence/internal/sessions/remote/Transporter;", false);
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/omg/CORBA/portable/ResponseHandler", "createReply", "()Lorg/omg/CORBA/portable/OutputStream;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/omg/CORBA_2_3/portable/OutputStream");
methodVisitor.visitVarInsn(ASTORE, 7);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "writeTransporter", "(Lorg/eclipse/persistence/internal/sessions/remote/Transporter;Lorg/omg/CORBA/portable/OutputStream;)V", false);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitLabel(label18);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label19);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitLdcInsn("cursoredStreamClose");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
methodVisitor.visitJumpInsn(IFEQ, label21);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "readTransporter", "(Lorg/omg/CORBA/portable/InputStream;)Lorg/eclipse/persistence/internal/sessions/remote/Transporter;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "target", "Lorg/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher;");
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher", "cursoredStreamClose", "(Lorg/eclipse/persistence/internal/sessions/remote/Transporter;)Lorg/eclipse/persistence/internal/sessions/remote/Transporter;", false);
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/omg/CORBA/portable/ResponseHandler", "createReply", "()Lorg/omg/CORBA/portable/OutputStream;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/omg/CORBA_2_3/portable/OutputStream");
methodVisitor.visitVarInsn(ASTORE, 7);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "writeTransporter", "(Lorg/eclipse/persistence/internal/sessions/remote/Transporter;Lorg/omg/CORBA/portable/OutputStream;)V", false);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitLabel(label20);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label21);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitLdcInsn("rollbackTransaction");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
methodVisitor.visitJumpInsn(IFEQ, label23);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "target", "Lorg/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher", "rollbackTransaction", "()Lorg/eclipse/persistence/internal/sessions/remote/Transporter;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/omg/CORBA/portable/ResponseHandler", "createReply", "()Lorg/omg/CORBA/portable/OutputStream;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/omg/CORBA_2_3/portable/OutputStream");
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "writeTransporter", "(Lorg/eclipse/persistence/internal/sessions/remote/Transporter;Lorg/omg/CORBA/portable/OutputStream;)V", false);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitLabel(label22);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label23);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitLdcInsn("commitRootUnitOfWork");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
methodVisitor.visitJumpInsn(IFEQ, label25);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "readTransporter", "(Lorg/omg/CORBA/portable/InputStream;)Lorg/eclipse/persistence/internal/sessions/remote/Transporter;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "target", "Lorg/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher;");
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher", "commitRootUnitOfWork", "(Lorg/eclipse/persistence/internal/sessions/remote/Transporter;)Lorg/eclipse/persistence/internal/sessions/remote/Transporter;", false);
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/omg/CORBA/portable/ResponseHandler", "createReply", "()Lorg/omg/CORBA/portable/OutputStream;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/omg/CORBA_2_3/portable/OutputStream");
methodVisitor.visitVarInsn(ASTORE, 7);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "writeTransporter", "(Lorg/eclipse/persistence/internal/sessions/remote/Transporter;Lorg/omg/CORBA/portable/OutputStream;)V", false);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitLabel(label24);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label25);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitLdcInsn("scrollableCursorLast");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
methodVisitor.visitJumpInsn(IFEQ, label27);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "readTransporter", "(Lorg/omg/CORBA/portable/InputStream;)Lorg/eclipse/persistence/internal/sessions/remote/Transporter;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "target", "Lorg/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher;");
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher", "scrollableCursorLast", "(Lorg/eclipse/persistence/internal/sessions/remote/Transporter;)Lorg/eclipse/persistence/internal/sessions/remote/Transporter;", false);
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/omg/CORBA/portable/ResponseHandler", "createReply", "()Lorg/omg/CORBA/portable/OutputStream;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/omg/CORBA_2_3/portable/OutputStream");
methodVisitor.visitVarInsn(ASTORE, 7);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "writeTransporter", "(Lorg/eclipse/persistence/internal/sessions/remote/Transporter;Lorg/omg/CORBA/portable/OutputStream;)V", false);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitLabel(label26);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label27);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitLdcInsn("scrollableCursorSize");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
methodVisitor.visitJumpInsn(IFEQ, label29);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "readTransporter", "(Lorg/omg/CORBA/portable/InputStream;)Lorg/eclipse/persistence/internal/sessions/remote/Transporter;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "target", "Lorg/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher;");
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher", "scrollableCursorSize", "(Lorg/eclipse/persistence/internal/sessions/remote/Transporter;)Lorg/eclipse/persistence/internal/sessions/remote/Transporter;", false);
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/omg/CORBA/portable/ResponseHandler", "createReply", "()Lorg/omg/CORBA/portable/OutputStream;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/omg/CORBA_2_3/portable/OutputStream");
methodVisitor.visitVarInsn(ASTORE, 7);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "writeTransporter", "(Lorg/eclipse/persistence/internal/sessions/remote/Transporter;Lorg/omg/CORBA/portable/OutputStream;)V", false);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitLabel(label28);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label29);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitLdcInsn("scrollableCursorClose");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
methodVisitor.visitJumpInsn(IFEQ, label31);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "readTransporter", "(Lorg/omg/CORBA/portable/InputStream;)Lorg/eclipse/persistence/internal/sessions/remote/Transporter;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "target", "Lorg/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher;");
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher", "scrollableCursorClose", "(Lorg/eclipse/persistence/internal/sessions/remote/Transporter;)Lorg/eclipse/persistence/internal/sessions/remote/Transporter;", false);
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/omg/CORBA/portable/ResponseHandler", "createReply", "()Lorg/omg/CORBA/portable/OutputStream;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/omg/CORBA_2_3/portable/OutputStream");
methodVisitor.visitVarInsn(ASTORE, 7);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "writeTransporter", "(Lorg/eclipse/persistence/internal/sessions/remote/Transporter;Lorg/omg/CORBA/portable/OutputStream;)V", false);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitLabel(label30);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label31);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitLdcInsn("scrollableCursorFirst");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
methodVisitor.visitJumpInsn(IFEQ, label33);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "readTransporter", "(Lorg/omg/CORBA/portable/InputStream;)Lorg/eclipse/persistence/internal/sessions/remote/Transporter;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "target", "Lorg/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher;");
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher", "scrollableCursorFirst", "(Lorg/eclipse/persistence/internal/sessions/remote/Transporter;)Lorg/eclipse/persistence/internal/sessions/remote/Transporter;", false);
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/omg/CORBA/portable/ResponseHandler", "createReply", "()Lorg/omg/CORBA/portable/OutputStream;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/omg/CORBA_2_3/portable/OutputStream");
methodVisitor.visitVarInsn(ASTORE, 7);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "writeTransporter", "(Lorg/eclipse/persistence/internal/sessions/remote/Transporter;Lorg/omg/CORBA/portable/OutputStream;)V", false);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitLabel(label32);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label33);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitLdcInsn("getDescriptorForAlias");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
methodVisitor.visitJumpInsn(IFEQ, label35);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "readTransporter", "(Lorg/omg/CORBA/portable/InputStream;)Lorg/eclipse/persistence/internal/sessions/remote/Transporter;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "target", "Lorg/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher;");
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher", "getDescriptorForAlias", "(Lorg/eclipse/persistence/internal/sessions/remote/Transporter;)Lorg/eclipse/persistence/internal/sessions/remote/Transporter;", false);
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/omg/CORBA/portable/ResponseHandler", "createReply", "()Lorg/omg/CORBA/portable/OutputStream;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/omg/CORBA_2_3/portable/OutputStream");
methodVisitor.visitVarInsn(ASTORE, 7);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "writeTransporter", "(Lorg/eclipse/persistence/internal/sessions/remote/Transporter;Lorg/omg/CORBA/portable/OutputStream;)V", false);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitLabel(label34);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label35);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitLdcInsn("beginEarlyTransaction");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
methodVisitor.visitJumpInsn(IFEQ, label37);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "target", "Lorg/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher", "beginEarlyTransaction", "()Lorg/eclipse/persistence/internal/sessions/remote/Transporter;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/omg/CORBA/portable/ResponseHandler", "createReply", "()Lorg/omg/CORBA/portable/OutputStream;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/omg/CORBA_2_3/portable/OutputStream");
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "writeTransporter", "(Lorg/eclipse/persistence/internal/sessions/remote/Transporter;Lorg/omg/CORBA/portable/OutputStream;)V", false);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitLabel(label36);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label37);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitLdcInsn("cursoredStreamNextPage");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
methodVisitor.visitJumpInsn(IFEQ, label39);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "readTransporter", "(Lorg/omg/CORBA/portable/InputStream;)Lorg/eclipse/persistence/internal/sessions/remote/Transporter;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/omg/CORBA_2_3/portable/InputStream", "read_long", "()I", false);
methodVisitor.visitVarInsn(ISTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "target", "Lorg/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher;");
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitVarInsn(ILOAD, 6);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher", "cursoredStreamNextPage", "(Lorg/eclipse/persistence/internal/sessions/remote/Transporter;I)Lorg/eclipse/persistence/internal/sessions/remote/Transporter;", false);
methodVisitor.visitVarInsn(ASTORE, 7);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/omg/CORBA/portable/ResponseHandler", "createReply", "()Lorg/omg/CORBA/portable/OutputStream;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/omg/CORBA_2_3/portable/OutputStream");
methodVisitor.visitVarInsn(ASTORE, 8);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitVarInsn(ALOAD, 8);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "writeTransporter", "(Lorg/eclipse/persistence/internal/sessions/remote/Transporter;Lorg/omg/CORBA/portable/OutputStream;)V", false);
methodVisitor.visitVarInsn(ALOAD, 8);
methodVisitor.visitLabel(label38);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label39);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitLdcInsn("getSequenceNumberNamed");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
methodVisitor.visitJumpInsn(IFEQ, label41);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "readTransporter", "(Lorg/omg/CORBA/portable/InputStream;)Lorg/eclipse/persistence/internal/sessions/remote/Transporter;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "target", "Lorg/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher;");
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher", "getSequenceNumberNamed", "(Lorg/eclipse/persistence/internal/sessions/remote/Transporter;)Lorg/eclipse/persistence/internal/sessions/remote/Transporter;", false);
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/omg/CORBA/portable/ResponseHandler", "createReply", "()Lorg/omg/CORBA/portable/OutputStream;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/omg/CORBA_2_3/portable/OutputStream");
methodVisitor.visitVarInsn(ASTORE, 7);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "writeTransporter", "(Lorg/eclipse/persistence/internal/sessions/remote/Transporter;Lorg/omg/CORBA/portable/OutputStream;)V", false);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitLabel(label40);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label41);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitLdcInsn("scrollableCursorIsLast");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
methodVisitor.visitJumpInsn(IFEQ, label43);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "readTransporter", "(Lorg/omg/CORBA/portable/InputStream;)Lorg/eclipse/persistence/internal/sessions/remote/Transporter;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "target", "Lorg/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher;");
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher", "scrollableCursorIsLast", "(Lorg/eclipse/persistence/internal/sessions/remote/Transporter;)Lorg/eclipse/persistence/internal/sessions/remote/Transporter;", false);
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/omg/CORBA/portable/ResponseHandler", "createReply", "()Lorg/omg/CORBA/portable/OutputStream;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/omg/CORBA_2_3/portable/OutputStream");
methodVisitor.visitVarInsn(ASTORE, 7);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "writeTransporter", "(Lorg/eclipse/persistence/internal/sessions/remote/Transporter;Lorg/omg/CORBA/portable/OutputStream;)V", false);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitLabel(label42);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label43);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitLdcInsn("scrollableCursorIsFirst");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
methodVisitor.visitJumpInsn(IFEQ, label45);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "readTransporter", "(Lorg/omg/CORBA/portable/InputStream;)Lorg/eclipse/persistence/internal/sessions/remote/Transporter;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "target", "Lorg/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher;");
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher", "scrollableCursorIsFirst", "(Lorg/eclipse/persistence/internal/sessions/remote/Transporter;)Lorg/eclipse/persistence/internal/sessions/remote/Transporter;", false);
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/omg/CORBA/portable/ResponseHandler", "createReply", "()Lorg/omg/CORBA/portable/OutputStream;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/omg/CORBA_2_3/portable/OutputStream");
methodVisitor.visitVarInsn(ASTORE, 7);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "writeTransporter", "(Lorg/eclipse/persistence/internal/sessions/remote/Transporter;Lorg/omg/CORBA/portable/OutputStream;)V", false);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitLabel(label44);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label45);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitLdcInsn("scrollableCursorAbsolute");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
methodVisitor.visitJumpInsn(IFEQ, label47);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "readTransporter", "(Lorg/omg/CORBA/portable/InputStream;)Lorg/eclipse/persistence/internal/sessions/remote/Transporter;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/omg/CORBA_2_3/portable/InputStream", "read_long", "()I", false);
methodVisitor.visitVarInsn(ISTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "target", "Lorg/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher;");
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitVarInsn(ILOAD, 6);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher", "scrollableCursorAbsolute", "(Lorg/eclipse/persistence/internal/sessions/remote/Transporter;I)Lorg/eclipse/persistence/internal/sessions/remote/Transporter;", false);
methodVisitor.visitVarInsn(ASTORE, 7);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/omg/CORBA/portable/ResponseHandler", "createReply", "()Lorg/omg/CORBA/portable/OutputStream;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/omg/CORBA_2_3/portable/OutputStream");
methodVisitor.visitVarInsn(ASTORE, 8);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitVarInsn(ALOAD, 8);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "writeTransporter", "(Lorg/eclipse/persistence/internal/sessions/remote/Transporter;Lorg/omg/CORBA/portable/OutputStream;)V", false);
methodVisitor.visitVarInsn(ALOAD, 8);
methodVisitor.visitLabel(label46);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label47);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitLdcInsn("scrollableCursorRelative");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
methodVisitor.visitJumpInsn(IFEQ, label49);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "readTransporter", "(Lorg/omg/CORBA/portable/InputStream;)Lorg/eclipse/persistence/internal/sessions/remote/Transporter;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/omg/CORBA_2_3/portable/InputStream", "read_long", "()I", false);
methodVisitor.visitVarInsn(ISTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "target", "Lorg/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher;");
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitVarInsn(ILOAD, 6);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher", "scrollableCursorRelative", "(Lorg/eclipse/persistence/internal/sessions/remote/Transporter;I)Lorg/eclipse/persistence/internal/sessions/remote/Transporter;", false);
methodVisitor.visitVarInsn(ASTORE, 7);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/omg/CORBA/portable/ResponseHandler", "createReply", "()Lorg/omg/CORBA/portable/OutputStream;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/omg/CORBA_2_3/portable/OutputStream");
methodVisitor.visitVarInsn(ASTORE, 8);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitVarInsn(ALOAD, 8);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "writeTransporter", "(Lorg/eclipse/persistence/internal/sessions/remote/Transporter;Lorg/omg/CORBA/portable/OutputStream;)V", false);
methodVisitor.visitVarInsn(ALOAD, 8);
methodVisitor.visitLabel(label48);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label49);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitLdcInsn("scrollableCursorAfterLast");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
methodVisitor.visitJumpInsn(IFEQ, label51);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "readTransporter", "(Lorg/omg/CORBA/portable/InputStream;)Lorg/eclipse/persistence/internal/sessions/remote/Transporter;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "target", "Lorg/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher;");
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher", "scrollableCursorAfterLast", "(Lorg/eclipse/persistence/internal/sessions/remote/Transporter;)Lorg/eclipse/persistence/internal/sessions/remote/Transporter;", false);
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/omg/CORBA/portable/ResponseHandler", "createReply", "()Lorg/omg/CORBA/portable/OutputStream;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/omg/CORBA_2_3/portable/OutputStream");
methodVisitor.visitVarInsn(ASTORE, 7);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "writeTransporter", "(Lorg/eclipse/persistence/internal/sessions/remote/Transporter;Lorg/omg/CORBA/portable/OutputStream;)V", false);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitLabel(label50);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label51);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitLdcInsn("scrollableCursorNextObject");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
methodVisitor.visitJumpInsn(IFEQ, label53);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "readTransporter", "(Lorg/omg/CORBA/portable/InputStream;)Lorg/eclipse/persistence/internal/sessions/remote/Transporter;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "target", "Lorg/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher;");
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher", "scrollableCursorNextObject", "(Lorg/eclipse/persistence/internal/sessions/remote/Transporter;)Lorg/eclipse/persistence/internal/sessions/remote/Transporter;", false);
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/omg/CORBA/portable/ResponseHandler", "createReply", "()Lorg/omg/CORBA/portable/OutputStream;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/omg/CORBA_2_3/portable/OutputStream");
methodVisitor.visitVarInsn(ASTORE, 7);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "writeTransporter", "(Lorg/eclipse/persistence/internal/sessions/remote/Transporter;Lorg/omg/CORBA/portable/OutputStream;)V", false);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitLabel(label52);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label53);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitLdcInsn("getDefaultReadOnlyClasses");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
methodVisitor.visitJumpInsn(IFEQ, label55);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "target", "Lorg/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher", "getDefaultReadOnlyClasses", "()Lorg/eclipse/persistence/internal/sessions/remote/Transporter;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/omg/CORBA/portable/ResponseHandler", "createReply", "()Lorg/omg/CORBA/portable/OutputStream;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/omg/CORBA_2_3/portable/OutputStream");
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "writeTransporter", "(Lorg/eclipse/persistence/internal/sessions/remote/Transporter;Lorg/omg/CORBA/portable/OutputStream;)V", false);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitLabel(label54);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label55);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitLdcInsn("scrollableCursorBeforeFirst");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
methodVisitor.visitJumpInsn(IFEQ, label57);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "readTransporter", "(Lorg/omg/CORBA/portable/InputStream;)Lorg/eclipse/persistence/internal/sessions/remote/Transporter;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "target", "Lorg/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher;");
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher", "scrollableCursorBeforeFirst", "(Lorg/eclipse/persistence/internal/sessions/remote/Transporter;)Lorg/eclipse/persistence/internal/sessions/remote/Transporter;", false);
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/omg/CORBA/portable/ResponseHandler", "createReply", "()Lorg/omg/CORBA/portable/OutputStream;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/omg/CORBA_2_3/portable/OutputStream");
methodVisitor.visitVarInsn(ASTORE, 7);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "writeTransporter", "(Lorg/eclipse/persistence/internal/sessions/remote/Transporter;Lorg/omg/CORBA/portable/OutputStream;)V", false);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitLabel(label56);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label57);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitLdcInsn("scrollableCursorIsAfterLast");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
methodVisitor.visitJumpInsn(IFEQ, label59);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "readTransporter", "(Lorg/omg/CORBA/portable/InputStream;)Lorg/eclipse/persistence/internal/sessions/remote/Transporter;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "target", "Lorg/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher;");
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher", "scrollableCursorIsAfterLast", "(Lorg/eclipse/persistence/internal/sessions/remote/Transporter;)Lorg/eclipse/persistence/internal/sessions/remote/Transporter;", false);
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/omg/CORBA/portable/ResponseHandler", "createReply", "()Lorg/omg/CORBA/portable/OutputStream;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/omg/CORBA_2_3/portable/OutputStream");
methodVisitor.visitVarInsn(ASTORE, 7);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "writeTransporter", "(Lorg/eclipse/persistence/internal/sessions/remote/Transporter;Lorg/omg/CORBA/portable/OutputStream;)V", false);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitLabel(label58);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label59);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitLdcInsn("scrollableCursorCurrentIndex");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
methodVisitor.visitJumpInsn(IFEQ, label61);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "readTransporter", "(Lorg/omg/CORBA/portable/InputStream;)Lorg/eclipse/persistence/internal/sessions/remote/Transporter;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "target", "Lorg/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher;");
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher", "scrollableCursorCurrentIndex", "(Lorg/eclipse/persistence/internal/sessions/remote/Transporter;)Lorg/eclipse/persistence/internal/sessions/remote/Transporter;", false);
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/omg/CORBA/portable/ResponseHandler", "createReply", "()Lorg/omg/CORBA/portable/OutputStream;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/omg/CORBA_2_3/portable/OutputStream");
methodVisitor.visitVarInsn(ASTORE, 7);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "writeTransporter", "(Lorg/eclipse/persistence/internal/sessions/remote/Transporter;Lorg/omg/CORBA/portable/OutputStream;)V", false);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitLabel(label60);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label61);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitLdcInsn("scrollableCursorIsBeforeFirst");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
methodVisitor.visitJumpInsn(IFEQ, label63);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "readTransporter", "(Lorg/omg/CORBA/portable/InputStream;)Lorg/eclipse/persistence/internal/sessions/remote/Transporter;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "target", "Lorg/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher;");
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher", "scrollableCursorIsBeforeFirst", "(Lorg/eclipse/persistence/internal/sessions/remote/Transporter;)Lorg/eclipse/persistence/internal/sessions/remote/Transporter;", false);
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/omg/CORBA/portable/ResponseHandler", "createReply", "()Lorg/omg/CORBA/portable/OutputStream;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/omg/CORBA_2_3/portable/OutputStream");
methodVisitor.visitVarInsn(ASTORE, 7);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "writeTransporter", "(Lorg/eclipse/persistence/internal/sessions/remote/Transporter;Lorg/omg/CORBA/portable/OutputStream;)V", false);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitLabel(label62);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label63);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitLdcInsn("scrollableCursorPreviousObject");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
methodVisitor.visitJumpInsn(IFEQ, label65);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "readTransporter", "(Lorg/omg/CORBA/portable/InputStream;)Lorg/eclipse/persistence/internal/sessions/remote/Transporter;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "target", "Lorg/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher;");
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher", "scrollableCursorPreviousObject", "(Lorg/eclipse/persistence/internal/sessions/remote/Transporter;)Lorg/eclipse/persistence/internal/sessions/remote/Transporter;", false);
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/omg/CORBA/portable/ResponseHandler", "createReply", "()Lorg/omg/CORBA/portable/OutputStream;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/omg/CORBA_2_3/portable/OutputStream");
methodVisitor.visitVarInsn(ASTORE, 7);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "writeTransporter", "(Lorg/eclipse/persistence/internal/sessions/remote/Transporter;Lorg/omg/CORBA/portable/OutputStream;)V", false);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitLabel(label64);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label65);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitLdcInsn("instantiateRemoteValueHolderOnServer");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
methodVisitor.visitJumpInsn(IFEQ, label67);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "readTransporter", "(Lorg/omg/CORBA/portable/InputStream;)Lorg/eclipse/persistence/internal/sessions/remote/Transporter;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "target", "Lorg/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher;");
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher", "instantiateRemoteValueHolderOnServer", "(Lorg/eclipse/persistence/internal/sessions/remote/Transporter;)Lorg/eclipse/persistence/internal/sessions/remote/Transporter;", false);
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/omg/CORBA/portable/ResponseHandler", "createReply", "()Lorg/omg/CORBA/portable/OutputStream;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/omg/CORBA_2_3/portable/OutputStream");
methodVisitor.visitVarInsn(ASTORE, 7);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "writeTransporter", "(Lorg/eclipse/persistence/internal/sessions/remote/Transporter;Lorg/omg/CORBA/portable/OutputStream;)V", false);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitLabel(label66);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label67);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitLdcInsn("initializeIdentityMapsOnServerSession");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
methodVisitor.visitJumpInsn(IFEQ, label69);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "target", "Lorg/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher", "initializeIdentityMapsOnServerSession", "()Lorg/eclipse/persistence/internal/sessions/remote/Transporter;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/omg/CORBA/portable/ResponseHandler", "createReply", "()Lorg/omg/CORBA/portable/OutputStream;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/omg/CORBA_2_3/portable/OutputStream");
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "writeTransporter", "(Lorg/eclipse/persistence/internal/sessions/remote/Transporter;Lorg/omg/CORBA/portable/OutputStream;)V", false);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitLabel(label68);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label69);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitTypeInsn(NEW, "org/omg/CORBA/BAD_OPERATION");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/omg/CORBA/BAD_OPERATION", "<init>", "()V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_FULL, 4, new Object[] {"org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "java/lang/String", "org/omg/CORBA/portable/InputStream", "org/omg/CORBA/portable/ResponseHandler"}, 1, new Object[] {"org/omg/CORBA/SystemException"});
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label70);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/Throwable"});
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitTypeInsn(NEW, "org/omg/CORBA/portable/UnknownException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/omg/CORBA/portable/UnknownException", "<init>", "(Ljava/lang/Throwable;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitMaxs(4, 10);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "deactivate", "()V", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "_orb", "()Lorg/omg/CORBA/ORB;", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/omg/CORBA/ORB", "disconnect", "(Lorg/omg/CORBA/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "_set_delegate", "(Lorg/omg/CORBA/portable/Delegate;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitFieldInsn(PUTFIELD, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "target", "Lorg/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher;");
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(2, 1);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "getTarget", "()Ljava/rmi/Remote;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "target", "Lorg/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher;");
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(1, 1);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "orb", "()Lorg/omg/CORBA/ORB;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "_orb", "()Lorg/omg/CORBA/ORB;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(1, 1);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "orb", "(Lorg/omg/CORBA/ORB;)V", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/omg/CORBA/ORB", "connect", "(Lorg/omg/CORBA/Object;)V", false);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(2, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC | ACC_STATIC, "readTransporter", "(Lorg/omg/CORBA/portable/InputStream;)Lorg/eclipse/persistence/internal/sessions/remote/Transporter;", null, null);
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/lang/Exception");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/omg/CORBA/portable/InputStream", "read_ulong", "()I", false);
methodVisitor.visitVarInsn(ISTORE, 1);
methodVisitor.visitVarInsn(ILOAD, 1);
methodVisitor.visitIntInsn(NEWARRAY, T_BYTE);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ILOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/omg/CORBA/portable/InputStream", "read_octet_array", "([BII)V", false);
methodVisitor.visitTypeInsn(NEW, "java/io/ByteArrayInputStream");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/io/ByteArrayInputStream", "<init>", "([B)V", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ARRAYLENGTH);
methodVisitor.visitJumpInsn(IFNE, label0);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_FULL, 5, new Object[] {"org/omg/CORBA/portable/InputStream", Opcodes.INTEGER, "[B", "java/io/ByteArrayInputStream", "org/eclipse/persistence/internal/sessions/remote/Transporter"}, 0, new Object[] {});
methodVisitor.visitTypeInsn(NEW, "java/io/ObjectInputStream");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/io/ObjectInputStream", "<init>", "(Ljava/io/InputStream;)V", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/ObjectInputStream", "readObject", "()Ljava/lang/Object;", false);
methodVisitor.visitTypeInsn(CHECKCAST, "org/eclipse/persistence/internal/sessions/remote/Transporter");
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitLabel(label1);
Label label3 = new Label();
methodVisitor.visitJumpInsn(GOTO, label3);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/Exception"});
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Exception", "printStackTrace", "()V", false);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(4, 6);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "setTarget", "(Ljava/rmi/Remote;)V", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitTypeInsn(CHECKCAST, "org/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher");
methodVisitor.visitFieldInsn(PUTFIELD, "org/eclipse/persistence/sessions/remote/rmi/iiop/_RMIRemoteSessionControllerDispatcher_Tie", "target", "Lorg/eclipse/persistence/sessions/remote/rmi/iiop/RMIRemoteSessionControllerDispatcher;");
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(2, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "thisObject", "()Lorg/omg/CORBA/Object;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(1, 1);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC | ACC_STATIC, "writeTransporter", "(Lorg/eclipse/persistence/internal/sessions/remote/Transporter;Lorg/omg/CORBA/portable/OutputStream;)V", null, null);
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/io/IOException");
methodVisitor.visitTypeInsn(NEW, "java/io/ByteArrayOutputStream");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/io/ByteArrayOutputStream", "<init>", "()V", false);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitLabel(label0);
methodVisitor.visitTypeInsn(NEW, "java/io/ObjectOutputStream");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/io/ObjectOutputStream", "<init>", "(Ljava/io/OutputStream;)V", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/ObjectOutputStream", "writeObject", "(Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/ObjectOutputStream", "flush", "()V", false);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/ByteArrayOutputStream", "size", "()I", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/omg/CORBA/portable/OutputStream", "write_ulong", "(I)V", false);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/ByteArrayOutputStream", "toByteArray", "()[B", false);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/ByteArrayOutputStream", "size", "()I", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/omg/CORBA/portable/OutputStream", "write_octet_array", "([BII)V", false);
methodVisitor.visitLabel(label1);
Label label3 = new Label();
methodVisitor.visitJumpInsn(GOTO, label3);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_FULL, 3, new Object[] {"org/eclipse/persistence/internal/sessions/remote/Transporter", "org/omg/CORBA/portable/OutputStream", "java/io/ByteArrayOutputStream"}, 1, new Object[] {"java/io/IOException"});
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(4, 4);
methodVisitor.visitEnd();
}
classWriter.visitEnd();

return classWriter.toByteArray();
}
}
