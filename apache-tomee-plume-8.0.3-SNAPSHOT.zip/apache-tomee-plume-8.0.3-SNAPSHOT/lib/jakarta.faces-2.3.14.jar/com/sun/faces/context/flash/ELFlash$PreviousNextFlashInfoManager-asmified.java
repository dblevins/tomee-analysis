package asm.com.sun.faces.context.flash;
import org.objectweb.asm.AnnotationVisitor;
import org.objectweb.asm.Attribute;
import org.objectweb.asm.ClassReader;
import org.objectweb.asm.ClassWriter;
import org.objectweb.asm.ConstantDynamic;
import org.objectweb.asm.FieldVisitor;
import org.objectweb.asm.Handle;
import org.objectweb.asm.Label;
import org.objectweb.asm.MethodVisitor;
import org.objectweb.asm.Opcodes;
import org.objectweb.asm.RecordComponentVisitor;
import org.objectweb.asm.Type;
import org.objectweb.asm.TypePath;
public class ELFlash$PreviousNextFlashInfoManagerDump implements Opcodes {

public static byte[] dump () throws Exception {

ClassWriter classWriter = new ClassWriter(0);
FieldVisitor fieldVisitor;
RecordComponentVisitor recordComponentVisitor;
MethodVisitor methodVisitor;
AnnotationVisitor annotationVisitor0;

classWriter.visit(V1_8, ACC_FINAL | ACC_SUPER, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", null, "java/lang/Object", null);

classWriter.visitInnerClass("com/sun/faces/context/flash/ELFlash$FlashInfo", "com/sun/faces/context/flash/ELFlash", "FlashInfo", ACC_PRIVATE | ACC_FINAL | ACC_STATIC);

classWriter.visitInnerClass("com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "com/sun/faces/context/flash/ELFlash", "PreviousNextFlashInfoManager", ACC_PRIVATE | ACC_FINAL | ACC_STATIC);

classWriter.visitInnerClass("com/sun/faces/context/flash/ELFlash$1", null, null, ACC_STATIC | ACC_SYNTHETIC);

classWriter.visitInnerClass("com/sun/faces/context/flash/ELFlash$LifetimeMarker", "com/sun/faces/context/flash/ELFlash", "LifetimeMarker", ACC_PRIVATE | ACC_FINAL | ACC_STATIC | ACC_ENUM);

classWriter.visitInnerClass("com/sun/faces/context/flash/ELFlash$CONSTANTS", "com/sun/faces/context/flash/ELFlash", "CONSTANTS", ACC_PRIVATE | ACC_FINAL | ACC_STATIC | ACC_ENUM);

{
fieldVisitor = classWriter.visitField(ACC_PRIVATE, "previousRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE, "nextRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE, "incomingCookieCameFromRedirect", "Z", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE, "innerMap", "Ljava/util/Map;", "Ljava/util/Map<Ljava/lang/String;Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;>;", null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE, "guard", "Lcom/sun/faces/util/ByteArrayGuardAESCTR;", null, null);
fieldVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PRIVATE, "<init>", "(Lcom/sun/faces/util/ByteArrayGuardAESCTR;)V", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/Object", "<init>", "()V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitFieldInsn(PUTFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "incomingCookieCameFromRedirect", "Z");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(PUTFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "guard", "Lcom/sun/faces/util/ByteArrayGuardAESCTR;");
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(2, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PRIVATE, "<init>", "(Lcom/sun/faces/util/ByteArrayGuardAESCTR;Ljava/util/Map;)V", "(Lcom/sun/faces/util/ByteArrayGuardAESCTR;Ljava/util/Map<Ljava/lang/String;Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;>;)V", null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/Object", "<init>", "()V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitFieldInsn(PUTFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "incomingCookieCameFromRedirect", "Z");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(PUTFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "guard", "Lcom/sun/faces/util/ByteArrayGuardAESCTR;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitFieldInsn(PUTFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "innerMap", "Ljava/util/Map;");
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(2, 3);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PROTECTED, "copyWithoutInnerMap", "()Lcom/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager;", null, null);
methodVisitor.visitCode();
methodVisitor.visitTypeInsn(NEW, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "guard", "Lcom/sun/faces/util/ByteArrayGuardAESCTR;");
methodVisitor.visitMethodInsn(INVOKESPECIAL, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "<init>", "(Lcom/sun/faces/util/ByteArrayGuardAESCTR;)V", false);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKESTATIC, "java/util/Collections", "emptyMap", "()Ljava/util/Map;", false);
methodVisitor.visitFieldInsn(PUTFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "innerMap", "Ljava/util/Map;");
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "previousRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
Label label0 = new Label();
methodVisitor.visitJumpInsn(IF_ACMPEQ, label0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "previousRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/sun/faces/context/flash/ELFlash$FlashInfo", "copyWithoutInnerMap", "()Lcom/sun/faces/context/flash/ELFlash$FlashInfo;", false);
methodVisitor.visitFieldInsn(PUTFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "previousRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager"}, 0, null);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "nextRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
Label label1 = new Label();
methodVisitor.visitJumpInsn(IF_ACMPEQ, label1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "nextRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/sun/faces/context/flash/ELFlash$FlashInfo", "copyWithoutInnerMap", "()Lcom/sun/faces/context/flash/ELFlash$FlashInfo;", false);
methodVisitor.visitFieldInsn(PUTFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "nextRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "incomingCookieCameFromRedirect", "Z");
methodVisitor.visitFieldInsn(PUTFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "incomingCookieCameFromRedirect", "Z");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(3, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "toString", "()Ljava/lang/String;", null, null);
methodVisitor.visitCode();
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitLdcInsn("previousRequestSequenceNumber: ");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "previousRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
Label label0 = new Label();
methodVisitor.visitJumpInsn(IF_ACMPEQ, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "previousRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/sun/faces/context/flash/ELFlash$FlashInfo", "getSequenceNumber", "()J", false);
methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/Long", "valueOf", "(J)Ljava/lang/Long;", false);
Label label1 = new Label();
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_FULL, 2, new Object[] {"com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "java/lang/String"}, 1, new Object[] {"java/lang/StringBuilder"});
methodVisitor.visitLdcInsn("null");
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_FULL, 2, new Object[] {"com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "java/lang/String"}, 2, new Object[] {"java/lang/StringBuilder", "java/io/Serializable"});
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/Object;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitLdcInsn(" nextRequestSequenceNumber: ");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "nextRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
Label label2 = new Label();
methodVisitor.visitJumpInsn(IF_ACMPEQ, label2);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "nextRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/sun/faces/context/flash/ELFlash$FlashInfo", "getSequenceNumber", "()J", false);
methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/Long", "valueOf", "(J)Ljava/lang/Long;", false);
Label label3 = new Label();
methodVisitor.visitJumpInsn(GOTO, label3);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/StringBuilder"});
methodVisitor.visitLdcInsn("null");
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_FULL, 2, new Object[] {"com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "java/lang/String"}, 2, new Object[] {"java/lang/StringBuilder", "java/io/Serializable"});
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/Object;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(3, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "initializeBaseCase", "(Lcom/sun/faces/context/flash/ELFlash;)V", null, null);
methodVisitor.visitCode();
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitTypeInsn(NEW, "com/sun/faces/context/flash/ELFlash$FlashInfo");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKESTATIC, "com/sun/faces/context/flash/ELFlash", "access$100", "(Lcom/sun/faces/context/flash/ELFlash;)J", false);
methodVisitor.visitFieldInsn(GETSTATIC, "com/sun/faces/context/flash/ELFlash$LifetimeMarker", "FirstTimeThru", "Lcom/sun/faces/context/flash/ELFlash$LifetimeMarker;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "com/sun/faces/context/flash/ELFlash$FlashInfo", "<init>", "(JLcom/sun/faces/context/flash/ELFlash$LifetimeMarker;Z)V", false);
methodVisitor.visitFieldInsn(PUTFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "previousRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "innerMap", "Ljava/util/Map;");
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "previousRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/sun/faces/context/flash/ELFlash$FlashInfo", "getSequenceNumber", "()J", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(J)Ljava/lang/StringBuilder;", false);
methodVisitor.visitLdcInsn("");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitTypeInsn(NEW, "java/util/HashMap");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/util/HashMap", "<init>", "()V", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "put", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", true);
methodVisitor.visitInsn(POP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "previousRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/sun/faces/context/flash/ELFlash$FlashInfo", "setFlashMap", "(Ljava/util/Map;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitTypeInsn(NEW, "com/sun/faces/context/flash/ELFlash$FlashInfo");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKESTATIC, "com/sun/faces/context/flash/ELFlash", "access$100", "(Lcom/sun/faces/context/flash/ELFlash;)J", false);
methodVisitor.visitFieldInsn(GETSTATIC, "com/sun/faces/context/flash/ELFlash$LifetimeMarker", "FirstTimeThru", "Lcom/sun/faces/context/flash/ELFlash$LifetimeMarker;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "com/sun/faces/context/flash/ELFlash$FlashInfo", "<init>", "(JLcom/sun/faces/context/flash/ELFlash$LifetimeMarker;Z)V", false);
methodVisitor.visitFieldInsn(PUTFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "nextRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "innerMap", "Ljava/util/Map;");
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "nextRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/sun/faces/context/flash/ELFlash$FlashInfo", "getSequenceNumber", "()J", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(J)Ljava/lang/StringBuilder;", false);
methodVisitor.visitLdcInsn("");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitTypeInsn(NEW, "java/util/HashMap");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/util/HashMap", "<init>", "()V", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "put", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", true);
methodVisitor.visitInsn(POP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "nextRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/sun/faces/context/flash/ELFlash$FlashInfo", "setFlashMap", "(Ljava/util/Map;)V", false);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(7, 3);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "expirePrevious", "()V", null, null);
methodVisitor.visitCode();
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "previousRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
Label label0 = new Label();
methodVisitor.visitJumpInsn(IF_ACMPEQ, label0);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "previousRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/sun/faces/context/flash/ELFlash$FlashInfo", "getFlashMap", "()Ljava/util/Map;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ASTORE, 1);
Label label1 = new Label();
methodVisitor.visitJumpInsn(IF_ACMPEQ, label1);
methodVisitor.visitMethodInsn(INVOKESTATIC, "com/sun/faces/context/flash/ELFlash", "access$200", "()Ljava/util/logging/Logger;", false);
methodVisitor.visitFieldInsn(GETSTATIC, "java/util/logging/Level", "FINEST", "Ljava/util/logging/Level;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/logging/Logger", "isLoggable", "(Ljava/util/logging/Level;)Z", false);
Label label2 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label2);
methodVisitor.visitMethodInsn(INVOKESTATIC, "com/sun/faces/context/flash/ELFlash", "access$200", "()Ljava/util/logging/Logger;", false);
methodVisitor.visitFieldInsn(GETSTATIC, "java/util/logging/Level", "FINEST", "Ljava/util/logging/Level;");
methodVisitor.visitLdcInsn("{0} expire previous[{1}]");
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Object");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "javax/faces/context/FacesContext", "getCurrentInstance", "()Ljavax/faces/context/FacesContext;", false);
methodVisitor.visitMethodInsn(INVOKESTATIC, "com/sun/faces/context/flash/ELFlash", "access$300", "(Ljavax/faces/context/FacesContext;)Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "previousRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/sun/faces/context/flash/ELFlash$FlashInfo", "getSequenceNumber", "()J", false);
methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/Long", "valueOf", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/logging/Logger", "log", "(Ljava/util/logging/Level;Ljava/lang/String;[Ljava/lang/Object;)V", false);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"java/util/Map"}, 0, null);
methodVisitor.visitMethodInsn(INVOKESTATIC, "javax/faces/context/FacesContext", "getCurrentInstance", "()Ljavax/faces/context/FacesContext;", false);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "javax/faces/context/FacesContext", "getApplication", "()Ljavax/faces/application/Application;", false);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitLdcInsn(Type.getType("Ljavax/faces/event/PreClearFlashEvent;"));
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "javax/faces/application/Application", "publishEvent", "(Ljavax/faces/context/FacesContext;Ljava/lang/Class;Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "clear", "()V", true);
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "innerMap", "Ljava/util/Map;");
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "previousRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/sun/faces/context/flash/ELFlash$FlashInfo", "getSequenceNumber", "()J", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(J)Ljava/lang/StringBuilder;", false);
methodVisitor.visitLdcInsn("");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "remove", "(Ljava/lang/Object;)Ljava/lang/Object;", true);
methodVisitor.visitInsn(POP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitFieldInsn(PUTFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "previousRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(8, 3);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "expireNext", "()V", null, null);
methodVisitor.visitCode();
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "nextRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
Label label0 = new Label();
methodVisitor.visitJumpInsn(IF_ACMPEQ, label0);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "nextRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/sun/faces/context/flash/ELFlash$FlashInfo", "getFlashMap", "()Ljava/util/Map;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ASTORE, 1);
Label label1 = new Label();
methodVisitor.visitJumpInsn(IF_ACMPEQ, label1);
methodVisitor.visitMethodInsn(INVOKESTATIC, "com/sun/faces/context/flash/ELFlash", "access$200", "()Ljava/util/logging/Logger;", false);
methodVisitor.visitFieldInsn(GETSTATIC, "java/util/logging/Level", "FINEST", "Ljava/util/logging/Level;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/logging/Logger", "isLoggable", "(Ljava/util/logging/Level;)Z", false);
Label label2 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label2);
methodVisitor.visitMethodInsn(INVOKESTATIC, "com/sun/faces/context/flash/ELFlash", "access$200", "()Ljava/util/logging/Logger;", false);
methodVisitor.visitFieldInsn(GETSTATIC, "java/util/logging/Level", "FINEST", "Ljava/util/logging/Level;");
methodVisitor.visitLdcInsn("{0} expire next[{1}]");
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Object");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "javax/faces/context/FacesContext", "getCurrentInstance", "()Ljavax/faces/context/FacesContext;", false);
methodVisitor.visitMethodInsn(INVOKESTATIC, "com/sun/faces/context/flash/ELFlash", "access$300", "(Ljavax/faces/context/FacesContext;)Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "nextRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/sun/faces/context/flash/ELFlash$FlashInfo", "getSequenceNumber", "()J", false);
methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/Long", "valueOf", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/logging/Logger", "log", "(Ljava/util/logging/Level;Ljava/lang/String;[Ljava/lang/Object;)V", false);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"java/util/Map"}, 0, null);
methodVisitor.visitMethodInsn(INVOKESTATIC, "javax/faces/context/FacesContext", "getCurrentInstance", "()Ljavax/faces/context/FacesContext;", false);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "javax/faces/context/FacesContext", "getApplication", "()Ljavax/faces/application/Application;", false);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitLdcInsn(Type.getType("Ljavax/faces/event/PreClearFlashEvent;"));
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "javax/faces/application/Application", "publishEvent", "(Ljavax/faces/context/FacesContext;Ljava/lang/Class;Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "clear", "()V", true);
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "innerMap", "Ljava/util/Map;");
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "nextRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/sun/faces/context/flash/ELFlash$FlashInfo", "getSequenceNumber", "()J", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(J)Ljava/lang/StringBuilder;", false);
methodVisitor.visitLdcInsn("");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "remove", "(Ljava/lang/Object;)Ljava/lang/Object;", true);
methodVisitor.visitInsn(POP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitFieldInsn(PUTFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "nextRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(8, 3);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "expireNext_MovePreviousToNext", "()V", null, null);
methodVisitor.visitCode();
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "nextRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
Label label0 = new Label();
methodVisitor.visitJumpInsn(IF_ACMPEQ, label0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "com/sun/faces/context/flash/ELFlash", "access$200", "()Ljava/util/logging/Logger;", false);
methodVisitor.visitFieldInsn(GETSTATIC, "java/util/logging/Level", "FINEST", "Ljava/util/logging/Level;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/logging/Logger", "isLoggable", "(Ljava/util/logging/Level;)Z", false);
Label label1 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label1);
methodVisitor.visitMethodInsn(INVOKESTATIC, "com/sun/faces/context/flash/ELFlash", "access$200", "()Ljava/util/logging/Logger;", false);
methodVisitor.visitFieldInsn(GETSTATIC, "java/util/logging/Level", "FINEST", "Ljava/util/logging/Level;");
methodVisitor.visitLdcInsn("{0} expire next[{1}], move previous to next");
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Object");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "javax/faces/context/FacesContext", "getCurrentInstance", "()Ljavax/faces/context/FacesContext;", false);
methodVisitor.visitMethodInsn(INVOKESTATIC, "com/sun/faces/context/flash/ELFlash", "access$300", "(Ljavax/faces/context/FacesContext;)Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "nextRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/sun/faces/context/flash/ELFlash$FlashInfo", "getSequenceNumber", "()J", false);
methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/Long", "valueOf", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/logging/Logger", "log", "(Ljava/util/logging/Level;Ljava/lang/String;[Ljava/lang/Object;)V", false);
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "nextRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/sun/faces/context/flash/ELFlash$FlashInfo", "getFlashMap", "()Ljava/util/Map;", false);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitMethodInsn(INVOKESTATIC, "javax/faces/context/FacesContext", "getCurrentInstance", "()Ljavax/faces/context/FacesContext;", false);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "javax/faces/context/FacesContext", "getApplication", "()Ljavax/faces/application/Application;", false);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitLdcInsn(Type.getType("Ljavax/faces/event/PreClearFlashEvent;"));
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "javax/faces/application/Application", "publishEvent", "(Ljavax/faces/context/FacesContext;Ljava/lang/Class;Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "clear", "()V", true);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "innerMap", "Ljava/util/Map;");
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "nextRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/sun/faces/context/flash/ELFlash$FlashInfo", "getSequenceNumber", "()J", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(J)Ljava/lang/StringBuilder;", false);
methodVisitor.visitLdcInsn("");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "remove", "(Ljava/lang/Object;)Ljava/lang/Object;", true);
methodVisitor.visitInsn(POP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitFieldInsn(PUTFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "nextRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "previousRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
methodVisitor.visitFieldInsn(PUTFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "nextRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitFieldInsn(PUTFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "previousRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(8, 3);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "decode", "(Ljavax/faces/context/FacesContext;Lcom/sun/faces/context/flash/ELFlash;Ljavax/servlet/http/Cookie;)V", null, new String[] { "java/security/InvalidKeyException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/io/UnsupportedEncodingException");
Label label3 = new Label();
Label label4 = new Label();
Label label5 = new Label();
methodVisitor.visitTryCatchBlock(label3, label4, label5, "java/lang/Throwable");
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "javax/servlet/http/Cookie", "getValue", "()Ljava/lang/String;", false);
methodVisitor.visitLdcInsn("UTF-8");
methodVisitor.visitMethodInsn(INVOKESTATIC, "java/net/URLDecoder", "decode", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitLabel(label1);
Label label6 = new Label();
methodVisitor.visitJumpInsn(GOTO, label6);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_FULL, 7, new Object[] {"com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "javax/faces/context/FacesContext", "com/sun/faces/context/flash/ELFlash", "javax/servlet/http/Cookie", Opcodes.TOP, Opcodes.TOP, "java/lang/String"}, 1, new Object[] {"java/io/UnsupportedEncodingException"});
methodVisitor.visitVarInsn(ASTORE, 7);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "javax/servlet/http/Cookie", "getValue", "()Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitLabel(label6);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "guard", "Lcom/sun/faces/util/ByteArrayGuardAESCTR;");
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/sun/faces/util/ByteArrayGuardAESCTR", "decrypt", "(Ljava/lang/String;)Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitLdcInsn("_");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "indexOf", "(Ljava/lang/String;)I", false);
methodVisitor.visitVarInsn(ISTORE, 7);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ILOAD, 7);
methodVisitor.visitIincInsn(7, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "substring", "(II)Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "length", "()I", false);
Label label7 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPGE, label7);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitTypeInsn(NEW, "com/sun/faces/context/flash/ELFlash$FlashInfo");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "com/sun/faces/context/flash/ELFlash$FlashInfo", "<init>", "(Lcom/sun/faces/context/flash/ELFlash$1;)V", false);
methodVisitor.visitFieldInsn(PUTFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "nextRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "nextRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/sun/faces/context/flash/ELFlash$FlashInfo", "decode", "(Ljava/lang/String;)V", false);
methodVisitor.visitLabel(label7);
methodVisitor.visitFrame(Opcodes.F_FULL, 8, new Object[] {"com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "javax/faces/context/FacesContext", "com/sun/faces/context/flash/ELFlash", "javax/servlet/http/Cookie", "java/lang/String", "java/lang/String", "java/lang/String", Opcodes.INTEGER}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitTypeInsn(NEW, "com/sun/faces/context/flash/ELFlash$FlashInfo");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "com/sun/faces/context/flash/ELFlash$FlashInfo", "<init>", "(Lcom/sun/faces/context/flash/ELFlash$1;)V", false);
methodVisitor.visitFieldInsn(PUTFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "previousRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "previousRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitVarInsn(ILOAD, 7);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "substring", "(I)Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/sun/faces/context/flash/ELFlash$FlashInfo", "decode", "(Ljava/lang/String;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "previousRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/sun/faces/context/flash/ELFlash$FlashInfo", "isIsRedirect", "()Z", false);
Label label8 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label8);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "setIncomingCookieCameFromRedirect", "(Z)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "previousRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/sun/faces/context/flash/ELFlash$FlashInfo", "setIsRedirect", "(Z)V", false);
Label label9 = new Label();
methodVisitor.visitJumpInsn(GOTO, label9);
methodVisitor.visitLabel(label8);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKESTATIC, "com/sun/faces/facelets/tag/ui/UIDebug", "debugRequest", "(Ljavax/faces/context/FacesContext;)Z", false);
methodVisitor.visitJumpInsn(IFNE, label9);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "previousRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
methodVisitor.visitFieldInsn(GETSTATIC, "com/sun/faces/context/flash/ELFlash$LifetimeMarker", "SecondTimeThru", "Lcom/sun/faces/context/flash/ELFlash$LifetimeMarker;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/sun/faces/context/flash/ELFlash$FlashInfo", "setLifetimeMarker", "(Lcom/sun/faces/context/flash/ELFlash$LifetimeMarker;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "expireNext", "()V", false);
methodVisitor.visitLabel(label9);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "innerMap", "Ljava/util/Map;");
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "previousRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/sun/faces/context/flash/ELFlash$FlashInfo", "getSequenceNumber", "()J", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(J)Ljava/lang/StringBuilder;", false);
methodVisitor.visitLdcInsn("");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "get", "(Ljava/lang/Object;)Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "java/util/Map");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ASTORE, 8);
Label label10 = new Label();
methodVisitor.visitJumpInsn(IF_ACMPNE, label10);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitTypeInsn(NEW, "com/sun/faces/context/flash/ELFlash$FlashInfo");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "com/sun/faces/context/flash/ELFlash$FlashInfo", "<init>", "(Lcom/sun/faces/context/flash/ELFlash$1;)V", false);
methodVisitor.visitFieldInsn(PUTFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "previousRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "previousRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKESTATIC, "com/sun/faces/context/flash/ELFlash", "access$100", "(Lcom/sun/faces/context/flash/ELFlash;)J", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/sun/faces/context/flash/ELFlash$FlashInfo", "setSequenceNumber", "(J)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "previousRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
methodVisitor.visitFieldInsn(GETSTATIC, "com/sun/faces/context/flash/ELFlash$LifetimeMarker", "FirstTimeThru", "Lcom/sun/faces/context/flash/ELFlash$LifetimeMarker;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/sun/faces/context/flash/ELFlash$FlashInfo", "setLifetimeMarker", "(Lcom/sun/faces/context/flash/ELFlash$LifetimeMarker;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "previousRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/sun/faces/context/flash/ELFlash$FlashInfo", "setIsRedirect", "(Z)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "innerMap", "Ljava/util/Map;");
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "previousRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/sun/faces/context/flash/ELFlash$FlashInfo", "getSequenceNumber", "()J", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(J)Ljava/lang/StringBuilder;", false);
methodVisitor.visitLdcInsn("");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitTypeInsn(NEW, "java/util/HashMap");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/util/HashMap", "<init>", "()V", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ASTORE, 8);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "put", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", true);
methodVisitor.visitInsn(POP);
methodVisitor.visitLabel(label10);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"java/util/Map"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "previousRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
methodVisitor.visitVarInsn(ALOAD, 8);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/sun/faces/context/flash/ELFlash$FlashInfo", "setFlashMap", "(Ljava/util/Map;)V", false);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "nextRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
methodVisitor.visitJumpInsn(IF_ACMPEQ, label4);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "innerMap", "Ljava/util/Map;");
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "nextRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/sun/faces/context/flash/ELFlash$FlashInfo", "getSequenceNumber", "()J", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(J)Ljava/lang/StringBuilder;", false);
methodVisitor.visitLdcInsn("");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "get", "(Ljava/lang/Object;)Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "java/util/Map");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ASTORE, 8);
Label label11 = new Label();
methodVisitor.visitJumpInsn(IF_ACMPNE, label11);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitTypeInsn(NEW, "com/sun/faces/context/flash/ELFlash$FlashInfo");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "com/sun/faces/context/flash/ELFlash$FlashInfo", "<init>", "(Lcom/sun/faces/context/flash/ELFlash$1;)V", false);
methodVisitor.visitFieldInsn(PUTFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "nextRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "nextRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKESTATIC, "com/sun/faces/context/flash/ELFlash", "access$100", "(Lcom/sun/faces/context/flash/ELFlash;)J", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/sun/faces/context/flash/ELFlash$FlashInfo", "setSequenceNumber", "(J)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "nextRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
methodVisitor.visitFieldInsn(GETSTATIC, "com/sun/faces/context/flash/ELFlash$LifetimeMarker", "FirstTimeThru", "Lcom/sun/faces/context/flash/ELFlash$LifetimeMarker;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/sun/faces/context/flash/ELFlash$FlashInfo", "setLifetimeMarker", "(Lcom/sun/faces/context/flash/ELFlash$LifetimeMarker;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "nextRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/sun/faces/context/flash/ELFlash$FlashInfo", "setIsRedirect", "(Z)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "innerMap", "Ljava/util/Map;");
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "nextRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/sun/faces/context/flash/ELFlash$FlashInfo", "getSequenceNumber", "()J", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(J)Ljava/lang/StringBuilder;", false);
methodVisitor.visitLdcInsn("");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitTypeInsn(NEW, "java/util/HashMap");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/util/HashMap", "<init>", "()V", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ASTORE, 8);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "put", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", true);
methodVisitor.visitInsn(POP);
methodVisitor.visitLabel(label11);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "nextRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
methodVisitor.visitVarInsn(ALOAD, 8);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/sun/faces/context/flash/ELFlash$FlashInfo", "setFlashMap", "(Ljava/util/Map;)V", false);
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_CHOP,2, null, 0, null);
Label label12 = new Label();
methodVisitor.visitJumpInsn(GOTO, label12);
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_FULL, 7, new Object[] {"com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "javax/faces/context/FacesContext", "com/sun/faces/context/flash/ELFlash", "javax/servlet/http/Cookie", Opcodes.TOP, "java/lang/String", "java/lang/String"}, 1, new Object[] {"java/lang/Throwable"});
methodVisitor.visitVarInsn(ASTORE, 7);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "javax/faces/context/FacesContext", "getAttributes", "()Ljava/util/Map;", false);
methodVisitor.visitFieldInsn(GETSTATIC, "com/sun/faces/context/flash/ELFlash$CONSTANTS", "ForceSetMaxAgeZero", "Lcom/sun/faces/context/flash/ELFlash$CONSTANTS;");
methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/Boolean", "TRUE", "Ljava/lang/Boolean;");
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "put", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", true);
methodVisitor.visitInsn(POP);
methodVisitor.visitMethodInsn(INVOKESTATIC, "com/sun/faces/context/flash/ELFlash", "access$200", "()Ljava/util/logging/Logger;", false);
methodVisitor.visitFieldInsn(GETSTATIC, "java/util/logging/Level", "SEVERE", "Ljava/util/logging/Level;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/logging/Logger", "isLoggable", "(Ljava/util/logging/Level;)Z", false);
methodVisitor.visitJumpInsn(IFEQ, label12);
methodVisitor.visitMethodInsn(INVOKESTATIC, "com/sun/faces/context/flash/ELFlash", "access$200", "()Ljava/util/logging/Logger;", false);
methodVisitor.visitFieldInsn(GETSTATIC, "java/util/logging/Level", "SEVERE", "Ljava/util/logging/Level;");
methodVisitor.visitLdcInsn("jsf.externalcontext.flash.bad.cookie");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Object");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/logging/Logger", "log", "(Ljava/util/logging/Level;Ljava/lang/String;[Ljava/lang/Object;)V", false);
methodVisitor.visitLabel(label12);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(7, 9);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "encode", "()Ljavax/servlet/http/Cookie;", null, null);
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/io/UnsupportedEncodingException");
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "previousRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
Label label3 = new Label();
methodVisitor.visitJumpInsn(IF_ACMPEQ, label3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "previousRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/sun/faces/context/flash/ELFlash$FlashInfo", "encode", "()Ljava/lang/String;", false);
Label label4 = new Label();
methodVisitor.visitJumpInsn(GOTO, label4);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_FULL, 2, new Object[] {"com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "javax/servlet/http/Cookie"}, 1, new Object[] {"java/lang/StringBuilder"});
methodVisitor.visitLdcInsn("");
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_FULL, 2, new Object[] {"com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "javax/servlet/http/Cookie"}, 2, new Object[] {"java/lang/StringBuilder", "java/lang/String"});
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitLdcInsn("_");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "nextRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
Label label5 = new Label();
methodVisitor.visitJumpInsn(IF_ACMPEQ, label5);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "nextRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/sun/faces/context/flash/ELFlash$FlashInfo", "encode", "()Ljava/lang/String;", false);
Label label6 = new Label();
methodVisitor.visitJumpInsn(GOTO, label6);
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/StringBuilder"});
methodVisitor.visitLdcInsn("");
methodVisitor.visitLabel(label6);
methodVisitor.visitFrame(Opcodes.F_FULL, 2, new Object[] {"com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "javax/servlet/http/Cookie"}, 2, new Object[] {"java/lang/StringBuilder", "java/lang/String"});
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "guard", "Lcom/sun/faces/util/ByteArrayGuardAESCTR;");
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/sun/faces/util/ByteArrayGuardAESCTR", "encrypt", "(Ljava/lang/String;)Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitLabel(label0);
methodVisitor.visitTypeInsn(NEW, "javax/servlet/http/Cookie");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("csfcfc");
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("UTF-8");
methodVisitor.visitMethodInsn(INVOKESTATIC, "java/net/URLEncoder", "encode", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "javax/servlet/http/Cookie", "<init>", "(Ljava/lang/String;Ljava/lang/String;)V", false);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitLabel(label1);
Label label7 = new Label();
methodVisitor.visitJumpInsn(GOTO, label7);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_FULL, 4, new Object[] {"com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "javax/servlet/http/Cookie", "java/lang/String", "java/lang/String"}, 1, new Object[] {"java/io/UnsupportedEncodingException"});
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitTypeInsn(NEW, "javax/servlet/http/Cookie");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("csfcfc");
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "javax/servlet/http/Cookie", "<init>", "(Ljava/lang/String;Ljava/lang/String;)V", false);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitLabel(label7);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "length", "()I", false);
Label label8 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPNE, label8);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "javax/servlet/http/Cookie", "setMaxAge", "(I)V", false);
methodVisitor.visitLabel(label8);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitMethodInsn(INVOKESTATIC, "javax/faces/context/FacesContext", "getCurrentInstance", "()Ljavax/faces/context/FacesContext;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "javax/faces/context/FacesContext", "getExternalContext", "()Ljavax/faces/context/ExternalContext;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "javax/faces/context/ExternalContext", "getRequestContextPath", "()Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "isEmpty", "()Z", false);
Label label9 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label9);
methodVisitor.visitLdcInsn("/");
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitLabel(label9);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"java/lang/String"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "javax/servlet/http/Cookie", "setPath", "(Ljava/lang/String;)V", false);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(5, 5);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "getPreviousRequestFlashInfo", "()Lcom/sun/faces/context/flash/ELFlash$FlashInfo;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "previousRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(1, 1);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "setPreviousRequestFlashInfo", "(Lcom/sun/faces/context/flash/ELFlash$FlashInfo;)V", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(PUTFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "previousRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(2, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "getNextRequestFlashInfo", "()Lcom/sun/faces/context/flash/ELFlash$FlashInfo;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "nextRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(1, 1);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "getNextRequestFlashInfo", "(Lcom/sun/faces/context/flash/ELFlash;Z)Lcom/sun/faces/context/flash/ELFlash$FlashInfo;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ILOAD, 2);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label0);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "nextRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
methodVisitor.visitJumpInsn(IF_ACMPNE, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitTypeInsn(NEW, "com/sun/faces/context/flash/ELFlash$FlashInfo");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "com/sun/faces/context/flash/ELFlash$FlashInfo", "<init>", "(Lcom/sun/faces/context/flash/ELFlash$1;)V", false);
methodVisitor.visitFieldInsn(PUTFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "nextRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "nextRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKESTATIC, "com/sun/faces/context/flash/ELFlash", "access$100", "(Lcom/sun/faces/context/flash/ELFlash;)J", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/sun/faces/context/flash/ELFlash$FlashInfo", "setSequenceNumber", "(J)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "nextRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
methodVisitor.visitFieldInsn(GETSTATIC, "com/sun/faces/context/flash/ELFlash$LifetimeMarker", "FirstTimeThru", "Lcom/sun/faces/context/flash/ELFlash$LifetimeMarker;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/sun/faces/context/flash/ELFlash$FlashInfo", "setLifetimeMarker", "(Lcom/sun/faces/context/flash/ELFlash$LifetimeMarker;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "nextRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/sun/faces/context/flash/ELFlash$FlashInfo", "setIsRedirect", "(Z)V", false);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "innerMap", "Ljava/util/Map;");
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "nextRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/sun/faces/context/flash/ELFlash$FlashInfo", "getSequenceNumber", "()J", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(J)Ljava/lang/StringBuilder;", false);
methodVisitor.visitLdcInsn("");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitTypeInsn(NEW, "java/util/HashMap");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/util/HashMap", "<init>", "()V", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "put", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", true);
methodVisitor.visitInsn(POP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "nextRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/sun/faces/context/flash/ELFlash$FlashInfo", "setFlashMap", "(Ljava/util/Map;)V", false);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "nextRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(4, 4);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "setNextRequestFlashInfo", "(Lcom/sun/faces/context/flash/ELFlash$FlashInfo;)V", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(PUTFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "nextRequestFlashInfo", "Lcom/sun/faces/context/flash/ELFlash$FlashInfo;");
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(2, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "isIncomingCookieCameFromRedirect", "()Z", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "incomingCookieCameFromRedirect", "Z");
methodVisitor.visitInsn(IRETURN);
methodVisitor.visitMaxs(1, 1);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "setIncomingCookieCameFromRedirect", "(Z)V", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ILOAD, 1);
methodVisitor.visitFieldInsn(PUTFIELD, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "incomingCookieCameFromRedirect", "Z");
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(2, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_SYNTHETIC, "<init>", "(Lcom/sun/faces/util/ByteArrayGuardAESCTR;Ljava/util/Map;Lcom/sun/faces/context/flash/ELFlash$1;)V", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "com/sun/faces/context/flash/ELFlash$PreviousNextFlashInfoManager", "<init>", "(Lcom/sun/faces/util/ByteArrayGuardAESCTR;Ljava/util/Map;)V", false);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(3, 4);
methodVisitor.visitEnd();
}
classWriter.visitEnd();

return classWriter.toByteArray();
}
}
