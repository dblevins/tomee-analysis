package asm.org.apache.openjpa.lib.jdbc;
import org.objectweb.asm.AnnotationVisitor;
import org.objectweb.asm.Attribute;
import org.objectweb.asm.ClassReader;
import org.objectweb.asm.ClassWriter;
import org.objectweb.asm.ConstantDynamic;
import org.objectweb.asm.FieldVisitor;
import org.objectweb.asm.Handle;
import org.objectweb.asm.Label;
import org.objectweb.asm.MethodVisitor;
import org.objectweb.asm.Opcodes;
import org.objectweb.asm.RecordComponentVisitor;
import org.objectweb.asm.Type;
import org.objectweb.asm.TypePath;
public class LoggingConnectionDecorator$LoggingConnection$LoggingStatementDump implements Opcodes {

public static byte[] dump () throws Exception {

ClassWriter classWriter = new ClassWriter(0);
FieldVisitor fieldVisitor;
RecordComponentVisitor recordComponentVisitor;
MethodVisitor methodVisitor;
AnnotationVisitor annotationVisitor0;

classWriter.visit(V1_8, ACC_PUBLIC | ACC_SUPER, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", null, "org/apache/openjpa/lib/jdbc/DelegatingStatement", null);

classWriter.visitInnerClass("org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection", "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator", "LoggingConnection", ACC_PROTECTED);

classWriter.visitInnerClass("org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection", "LoggingStatement", ACC_PROTECTED);

classWriter.visitInnerClass("org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingResultSet", "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection", "LoggingResultSet", ACC_PROTECTED);

{
fieldVisitor = classWriter.visitField(ACC_PRIVATE, "_sql", "Ljava/lang/String;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_FINAL | ACC_SYNTHETIC, "this$1", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;", null, null);
fieldVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "<init>", "(Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;Ljava/sql/Statement;)V", null, new String[] { "java/sql/SQLException" });
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "this$1", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openjpa/lib/jdbc/DelegatingStatement", "<init>", "(Ljava/sql/Statement;Ljava/sql/Connection;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "_sql", "Ljava/lang/String;");
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(3, 3);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PRIVATE, "newLoggingResultSet", "(Ljava/sql/ResultSet;Ljava/sql/Statement;)Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingResultSet;", null, null);
methodVisitor.visitCode();
methodVisitor.visitTypeInsn(NEW, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingResultSet");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "this$1", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingResultSet", "<init>", "(Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;Ljava/sql/ResultSet;Ljava/sql/Statement;)V", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(5, 3);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "appendInfo", "(Ljava/lang/StringBuffer;)V", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "_sql", "Ljava/lang/String;");
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitLdcInsn(" ");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuffer", "append", "(Ljava/lang/String;)Ljava/lang/StringBuffer;", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "this$1", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;");
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection", "this$0", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator", "access$400", "(Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator;)Lorg/apache/openjpa/lib/jdbc/SQLFormatter;", false);
Label label1 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator", "access$500", "()Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuffer", "append", "(Ljava/lang/String;)Ljava/lang/StringBuffer;", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "this$1", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;");
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection", "this$0", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator", "access$400", "(Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator;)Lorg/apache/openjpa/lib/jdbc/SQLFormatter;", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "_sql", "Ljava/lang/String;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openjpa/lib/jdbc/SQLFormatter", "prettyPrint", "(Ljava/lang/Object;)Ljava/lang/Object;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuffer", "append", "(Ljava/lang/Object;)Ljava/lang/StringBuffer;", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitJumpInsn(GOTO, label0);
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "_sql", "Ljava/lang/String;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuffer", "append", "(Ljava/lang/String;)Ljava/lang/StringBuffer;", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(3, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PROTECTED, "wrapResult", "(Ljava/sql/ResultSet;Z)Ljava/sql/ResultSet;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ILOAD, 2);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label0);
methodVisitor.visitVarInsn(ALOAD, 1);
Label label1 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label1);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ILOAD, 2);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openjpa/lib/jdbc/DelegatingStatement", "wrapResult", "(Ljava/sql/ResultSet;Z)Ljava/sql/ResultSet;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "newLoggingResultSet", "(Ljava/sql/ResultSet;Ljava/sql/Statement;)Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingResultSet;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(3, 3);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "cancel", "()V", null, new String[] { "java/sql/SQLException" });
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "this$1", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;");
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection", "this$0", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator", "access$100", "(Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator;)Lorg/apache/openjpa/lib/jdbc/DataSourceLogs;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openjpa/lib/jdbc/DataSourceLogs", "isJDBCEnabled", "()Z", false);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "this$1", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;");
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection", "this$0", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator", "access$100", "(Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator;)Lorg/apache/openjpa/lib/jdbc/DataSourceLogs;", false);
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitLdcInsn("cancel ");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/Object;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "this$1", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openjpa/lib/jdbc/DataSourceLogs", "logJDBC", "(Ljava/lang/String;Ljava/sql/Connection;)V", false);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openjpa/lib/jdbc/DelegatingStatement", "cancel", "()V", false);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(3, 1);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PROTECTED, "executeQuery", "(Ljava/lang/String;Z)Ljava/sql/ResultSet;", null, new String[] { "java/sql/SQLException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/sql/SQLException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, null);
Label label4 = new Label();
methodVisitor.visitTryCatchBlock(label2, label4, label3, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "_sql", "Ljava/lang/String;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "this$1", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection", "access$600", "(Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;Ljava/sql/Statement;)V", false);
methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/System", "currentTimeMillis", "()J", false);
methodVisitor.visitVarInsn(LSTORE, 3);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ILOAD, 2);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openjpa/lib/jdbc/DelegatingStatement", "executeQuery", "(Ljava/lang/String;Z)Ljava/sql/ResultSet;", false);
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitLabel(label1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "this$1", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;");
methodVisitor.visitVarInsn(LLOAD, 3);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection", "access$800", "(Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;J)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "this$1", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection", "access$900", "(Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;Ljava/sql/Statement;Ljava/sql/SQLException;)V", false);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_FULL, 5, new Object[] {"org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "java/lang/String", Opcodes.INTEGER, Opcodes.LONG, "java/sql/SQLException"}, 1, new Object[] {"java/sql/SQLException"});
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "this$1", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;");
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection", "this$0", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator;");
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator", "access$700", "(Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator;Ljava/sql/SQLException;Ljava/sql/Statement;Ljava/lang/String;)Ljava/sql/SQLException;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/Throwable"});
methodVisitor.visitVarInsn(ASTORE, 7);
methodVisitor.visitLabel(label4);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "this$1", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;");
methodVisitor.visitVarInsn(LLOAD, 3);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection", "access$800", "(Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;J)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "this$1", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection", "access$900", "(Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;Ljava/sql/Statement;Ljava/sql/SQLException;)V", false);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitMaxs(4, 8);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "executeUpdate", "(Ljava/lang/String;)I", null, new String[] { "java/sql/SQLException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/sql/SQLException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, null);
Label label4 = new Label();
methodVisitor.visitTryCatchBlock(label2, label4, label3, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "_sql", "Ljava/lang/String;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "this$1", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection", "access$600", "(Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;Ljava/sql/Statement;)V", false);
methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/System", "currentTimeMillis", "()J", false);
methodVisitor.visitVarInsn(LSTORE, 2);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openjpa/lib/jdbc/DelegatingStatement", "executeUpdate", "(Ljava/lang/String;)I", false);
methodVisitor.visitVarInsn(ISTORE, 5);
methodVisitor.visitLabel(label1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "this$1", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;");
methodVisitor.visitVarInsn(LLOAD, 2);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection", "access$800", "(Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;J)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "this$1", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection", "access$900", "(Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;Ljava/sql/Statement;Ljava/sql/SQLException;)V", false);
methodVisitor.visitVarInsn(ILOAD, 5);
methodVisitor.visitInsn(IRETURN);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_FULL, 4, new Object[] {"org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "java/lang/String", Opcodes.LONG, "java/sql/SQLException"}, 1, new Object[] {"java/sql/SQLException"});
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "this$1", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;");
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection", "this$0", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator;");
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator", "access$700", "(Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator;Ljava/sql/SQLException;Ljava/sql/Statement;Ljava/lang/String;)Ljava/sql/SQLException;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/Throwable"});
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitLabel(label4);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "this$1", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;");
methodVisitor.visitVarInsn(LLOAD, 2);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection", "access$800", "(Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;J)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "this$1", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection", "access$900", "(Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;Ljava/sql/Statement;Ljava/sql/SQLException;)V", false);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitMaxs(4, 7);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "execute", "(Ljava/lang/String;)Z", null, new String[] { "java/sql/SQLException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/sql/SQLException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, null);
Label label4 = new Label();
methodVisitor.visitTryCatchBlock(label2, label4, label3, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "_sql", "Ljava/lang/String;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "this$1", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection", "access$600", "(Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;Ljava/sql/Statement;)V", false);
methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/System", "currentTimeMillis", "()J", false);
methodVisitor.visitVarInsn(LSTORE, 2);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openjpa/lib/jdbc/DelegatingStatement", "execute", "(Ljava/lang/String;)Z", false);
methodVisitor.visitVarInsn(ISTORE, 5);
methodVisitor.visitLabel(label1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "this$1", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;");
methodVisitor.visitVarInsn(LLOAD, 2);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection", "access$800", "(Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;J)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "this$1", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection", "access$900", "(Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;Ljava/sql/Statement;Ljava/sql/SQLException;)V", false);
methodVisitor.visitVarInsn(ILOAD, 5);
methodVisitor.visitInsn(IRETURN);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_FULL, 4, new Object[] {"org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "java/lang/String", Opcodes.LONG, "java/sql/SQLException"}, 1, new Object[] {"java/sql/SQLException"});
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "this$1", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;");
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection", "this$0", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator;");
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator", "access$700", "(Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator;Ljava/sql/SQLException;Ljava/sql/Statement;Ljava/lang/String;)Ljava/sql/SQLException;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/Throwable"});
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitLabel(label4);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "this$1", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;");
methodVisitor.visitVarInsn(LLOAD, 2);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection", "access$800", "(Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;J)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "this$1", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection", "access$900", "(Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;Ljava/sql/Statement;Ljava/sql/SQLException;)V", false);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitMaxs(4, 7);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "executeUpdate", "(Ljava/lang/String;I)I", null, new String[] { "java/sql/SQLException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/sql/SQLException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, null);
Label label4 = new Label();
methodVisitor.visitTryCatchBlock(label2, label4, label3, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "_sql", "Ljava/lang/String;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "this$1", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection", "access$600", "(Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;Ljava/sql/Statement;)V", false);
methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/System", "currentTimeMillis", "()J", false);
methodVisitor.visitVarInsn(LSTORE, 3);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ILOAD, 2);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openjpa/lib/jdbc/DelegatingStatement", "executeUpdate", "(Ljava/lang/String;I)I", false);
methodVisitor.visitVarInsn(ISTORE, 6);
methodVisitor.visitLabel(label1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "this$1", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;");
methodVisitor.visitVarInsn(LLOAD, 3);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection", "access$800", "(Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;J)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "this$1", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection", "access$900", "(Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;Ljava/sql/Statement;Ljava/sql/SQLException;)V", false);
methodVisitor.visitVarInsn(ILOAD, 6);
methodVisitor.visitInsn(IRETURN);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_FULL, 5, new Object[] {"org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "java/lang/String", Opcodes.INTEGER, Opcodes.LONG, "java/sql/SQLException"}, 1, new Object[] {"java/sql/SQLException"});
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "this$1", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;");
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection", "this$0", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator;");
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator", "access$700", "(Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator;Ljava/sql/SQLException;Ljava/sql/Statement;Ljava/lang/String;)Ljava/sql/SQLException;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/Throwable"});
methodVisitor.visitVarInsn(ASTORE, 7);
methodVisitor.visitLabel(label4);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "this$1", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;");
methodVisitor.visitVarInsn(LLOAD, 3);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection", "access$800", "(Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;J)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "this$1", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection", "access$900", "(Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;Ljava/sql/Statement;Ljava/sql/SQLException;)V", false);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitMaxs(4, 8);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "executeUpdate", "(Ljava/lang/String;[I)I", null, new String[] { "java/sql/SQLException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/sql/SQLException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, null);
Label label4 = new Label();
methodVisitor.visitTryCatchBlock(label2, label4, label3, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "_sql", "Ljava/lang/String;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "this$1", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection", "access$600", "(Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;Ljava/sql/Statement;)V", false);
methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/System", "currentTimeMillis", "()J", false);
methodVisitor.visitVarInsn(LSTORE, 3);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openjpa/lib/jdbc/DelegatingStatement", "executeUpdate", "(Ljava/lang/String;[I)I", false);
methodVisitor.visitVarInsn(ISTORE, 6);
methodVisitor.visitLabel(label1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "this$1", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;");
methodVisitor.visitVarInsn(LLOAD, 3);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection", "access$800", "(Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;J)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "this$1", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection", "access$900", "(Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;Ljava/sql/Statement;Ljava/sql/SQLException;)V", false);
methodVisitor.visitVarInsn(ILOAD, 6);
methodVisitor.visitInsn(IRETURN);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_FULL, 5, new Object[] {"org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "java/lang/String", "[I", Opcodes.LONG, "java/sql/SQLException"}, 1, new Object[] {"java/sql/SQLException"});
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "this$1", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;");
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection", "this$0", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator;");
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator", "access$700", "(Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator;Ljava/sql/SQLException;Ljava/sql/Statement;Ljava/lang/String;)Ljava/sql/SQLException;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/Throwable"});
methodVisitor.visitVarInsn(ASTORE, 7);
methodVisitor.visitLabel(label4);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "this$1", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;");
methodVisitor.visitVarInsn(LLOAD, 3);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection", "access$800", "(Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;J)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "this$1", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection", "access$900", "(Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;Ljava/sql/Statement;Ljava/sql/SQLException;)V", false);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitMaxs(4, 8);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "executeUpdate", "(Ljava/lang/String;[Ljava/lang/String;)I", null, new String[] { "java/sql/SQLException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/sql/SQLException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, null);
Label label4 = new Label();
methodVisitor.visitTryCatchBlock(label2, label4, label3, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "_sql", "Ljava/lang/String;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "this$1", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection", "access$600", "(Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;Ljava/sql/Statement;)V", false);
methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/System", "currentTimeMillis", "()J", false);
methodVisitor.visitVarInsn(LSTORE, 3);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openjpa/lib/jdbc/DelegatingStatement", "executeUpdate", "(Ljava/lang/String;[Ljava/lang/String;)I", false);
methodVisitor.visitVarInsn(ISTORE, 6);
methodVisitor.visitLabel(label1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "this$1", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;");
methodVisitor.visitVarInsn(LLOAD, 3);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection", "access$800", "(Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;J)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "this$1", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection", "access$900", "(Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;Ljava/sql/Statement;Ljava/sql/SQLException;)V", false);
methodVisitor.visitVarInsn(ILOAD, 6);
methodVisitor.visitInsn(IRETURN);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_FULL, 5, new Object[] {"org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "java/lang/String", "[Ljava/lang/String;", Opcodes.LONG, "java/sql/SQLException"}, 1, new Object[] {"java/sql/SQLException"});
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "this$1", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;");
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection", "this$0", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator;");
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator", "access$700", "(Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator;Ljava/sql/SQLException;Ljava/sql/Statement;Ljava/lang/String;)Ljava/sql/SQLException;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/Throwable"});
methodVisitor.visitVarInsn(ASTORE, 7);
methodVisitor.visitLabel(label4);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "this$1", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;");
methodVisitor.visitVarInsn(LLOAD, 3);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection", "access$800", "(Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;J)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "this$1", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection", "access$900", "(Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;Ljava/sql/Statement;Ljava/sql/SQLException;)V", false);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitMaxs(4, 8);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "execute", "(Ljava/lang/String;I)Z", null, new String[] { "java/sql/SQLException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/sql/SQLException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, null);
Label label4 = new Label();
methodVisitor.visitTryCatchBlock(label2, label4, label3, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "_sql", "Ljava/lang/String;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "this$1", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection", "access$600", "(Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;Ljava/sql/Statement;)V", false);
methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/System", "currentTimeMillis", "()J", false);
methodVisitor.visitVarInsn(LSTORE, 3);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ILOAD, 2);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openjpa/lib/jdbc/DelegatingStatement", "execute", "(Ljava/lang/String;I)Z", false);
methodVisitor.visitVarInsn(ISTORE, 6);
methodVisitor.visitLabel(label1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "this$1", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;");
methodVisitor.visitVarInsn(LLOAD, 3);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection", "access$800", "(Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;J)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "this$1", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection", "access$900", "(Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;Ljava/sql/Statement;Ljava/sql/SQLException;)V", false);
methodVisitor.visitVarInsn(ILOAD, 6);
methodVisitor.visitInsn(IRETURN);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_FULL, 5, new Object[] {"org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "java/lang/String", Opcodes.INTEGER, Opcodes.LONG, "java/sql/SQLException"}, 1, new Object[] {"java/sql/SQLException"});
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "this$1", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;");
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection", "this$0", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator;");
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator", "access$700", "(Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator;Ljava/sql/SQLException;Ljava/sql/Statement;Ljava/lang/String;)Ljava/sql/SQLException;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/Throwable"});
methodVisitor.visitVarInsn(ASTORE, 7);
methodVisitor.visitLabel(label4);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "this$1", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;");
methodVisitor.visitVarInsn(LLOAD, 3);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection", "access$800", "(Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;J)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "this$1", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection", "access$900", "(Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;Ljava/sql/Statement;Ljava/sql/SQLException;)V", false);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitMaxs(4, 8);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "execute", "(Ljava/lang/String;[I)Z", null, new String[] { "java/sql/SQLException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/sql/SQLException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, null);
Label label4 = new Label();
methodVisitor.visitTryCatchBlock(label2, label4, label3, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "_sql", "Ljava/lang/String;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "this$1", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection", "access$600", "(Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;Ljava/sql/Statement;)V", false);
methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/System", "currentTimeMillis", "()J", false);
methodVisitor.visitVarInsn(LSTORE, 3);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openjpa/lib/jdbc/DelegatingStatement", "execute", "(Ljava/lang/String;[I)Z", false);
methodVisitor.visitVarInsn(ISTORE, 6);
methodVisitor.visitLabel(label1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "this$1", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;");
methodVisitor.visitVarInsn(LLOAD, 3);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection", "access$800", "(Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;J)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "this$1", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection", "access$900", "(Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;Ljava/sql/Statement;Ljava/sql/SQLException;)V", false);
methodVisitor.visitVarInsn(ILOAD, 6);
methodVisitor.visitInsn(IRETURN);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_FULL, 5, new Object[] {"org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "java/lang/String", "[I", Opcodes.LONG, "java/sql/SQLException"}, 1, new Object[] {"java/sql/SQLException"});
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "this$1", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;");
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection", "this$0", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator;");
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator", "access$700", "(Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator;Ljava/sql/SQLException;Ljava/sql/Statement;Ljava/lang/String;)Ljava/sql/SQLException;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/Throwable"});
methodVisitor.visitVarInsn(ASTORE, 7);
methodVisitor.visitLabel(label4);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "this$1", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;");
methodVisitor.visitVarInsn(LLOAD, 3);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection", "access$800", "(Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;J)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "this$1", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection", "access$900", "(Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;Ljava/sql/Statement;Ljava/sql/SQLException;)V", false);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitMaxs(4, 8);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "execute", "(Ljava/lang/String;[Ljava/lang/String;)Z", null, new String[] { "java/sql/SQLException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/sql/SQLException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, null);
Label label4 = new Label();
methodVisitor.visitTryCatchBlock(label2, label4, label3, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "_sql", "Ljava/lang/String;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "this$1", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection", "access$600", "(Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;Ljava/sql/Statement;)V", false);
methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/System", "currentTimeMillis", "()J", false);
methodVisitor.visitVarInsn(LSTORE, 3);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openjpa/lib/jdbc/DelegatingStatement", "execute", "(Ljava/lang/String;[Ljava/lang/String;)Z", false);
methodVisitor.visitVarInsn(ISTORE, 6);
methodVisitor.visitLabel(label1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "this$1", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;");
methodVisitor.visitVarInsn(LLOAD, 3);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection", "access$800", "(Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;J)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "this$1", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection", "access$900", "(Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;Ljava/sql/Statement;Ljava/sql/SQLException;)V", false);
methodVisitor.visitVarInsn(ILOAD, 6);
methodVisitor.visitInsn(IRETURN);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_FULL, 5, new Object[] {"org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "java/lang/String", "[Ljava/lang/String;", Opcodes.LONG, "java/sql/SQLException"}, 1, new Object[] {"java/sql/SQLException"});
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "this$1", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;");
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection", "this$0", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator;");
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator", "access$700", "(Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator;Ljava/sql/SQLException;Ljava/sql/Statement;Ljava/lang/String;)Ljava/sql/SQLException;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/Throwable"});
methodVisitor.visitVarInsn(ASTORE, 7);
methodVisitor.visitLabel(label4);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "this$1", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;");
methodVisitor.visitVarInsn(LLOAD, 3);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection", "access$800", "(Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;J)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection$LoggingStatement", "this$1", "Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection", "access$900", "(Lorg/apache/openjpa/lib/jdbc/LoggingConnectionDecorator$LoggingConnection;Ljava/sql/Statement;Ljava/sql/SQLException;)V", false);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitMaxs(4, 8);
methodVisitor.visitEnd();
}
classWriter.visitEnd();

return classWriter.toByteArray();
}
}
