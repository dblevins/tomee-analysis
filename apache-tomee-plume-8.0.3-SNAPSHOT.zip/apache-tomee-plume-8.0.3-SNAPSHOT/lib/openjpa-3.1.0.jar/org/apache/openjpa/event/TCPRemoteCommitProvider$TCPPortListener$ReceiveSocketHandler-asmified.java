package asm.org.apache.openjpa.event;
import org.objectweb.asm.AnnotationVisitor;
import org.objectweb.asm.Attribute;
import org.objectweb.asm.ClassReader;
import org.objectweb.asm.ClassWriter;
import org.objectweb.asm.ConstantDynamic;
import org.objectweb.asm.FieldVisitor;
import org.objectweb.asm.Handle;
import org.objectweb.asm.Label;
import org.objectweb.asm.MethodVisitor;
import org.objectweb.asm.Opcodes;
import org.objectweb.asm.RecordComponentVisitor;
import org.objectweb.asm.Type;
import org.objectweb.asm.TypePath;
public class TCPRemoteCommitProvider$TCPPortListener$ReceiveSocketHandlerDump implements Opcodes {

public static byte[] dump () throws Exception {

ClassWriter classWriter = new ClassWriter(0);
FieldVisitor fieldVisitor;
RecordComponentVisitor recordComponentVisitor;
MethodVisitor methodVisitor;
AnnotationVisitor annotationVisitor0;

classWriter.visit(V1_8, ACC_SUPER, "org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener$ReceiveSocketHandler", null, "java/lang/Object", new String[] { "java/lang/Runnable" });

classWriter.visitInnerClass("org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener", "org/apache/openjpa/event/TCPRemoteCommitProvider", "TCPPortListener", ACC_PRIVATE | ACC_STATIC);

classWriter.visitInnerClass("org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener$ReceiveSocketHandler", "org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener", "ReceiveSocketHandler", ACC_PRIVATE);

classWriter.visitInnerClass("org/apache/openjpa/event/TCPRemoteCommitProvider$1", null, null, ACC_STATIC | ACC_SYNTHETIC);

classWriter.visitInnerClass("org/apache/openjpa/util/Serialization$ClassResolvingObjectInputStream", "org/apache/openjpa/util/Serialization", "ClassResolvingObjectInputStream", ACC_PUBLIC | ACC_STATIC);

classWriter.visitInnerClass("org/apache/openjpa/lib/util/Localizer$Message", "org/apache/openjpa/lib/util/Localizer", "Message", ACC_PUBLIC | ACC_STATIC);

{
fieldVisitor = classWriter.visitField(ACC_PRIVATE, "_in", "Ljava/io/InputStream;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE, "_s", "Ljava/net/Socket;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_FINAL | ACC_SYNTHETIC, "this$0", "Lorg/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener;", null, null);
fieldVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PRIVATE, "<init>", "(Lorg/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener;Ljava/net/Socket;)V", null, null);
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/io/IOException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, "java/lang/Exception");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener$ReceiveSocketHandler", "this$0", "Lorg/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/Object", "<init>", "()V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener$ReceiveSocketHandler", "_s", "Ljava/net/Socket;");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener$ReceiveSocketHandler", "_s", "Ljava/net/Socket;");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/net/Socket", "setTcpNoDelay", "(Z)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitTypeInsn(NEW, "java/io/BufferedInputStream");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/net/Socket", "getInputStream", "()Ljava/io/InputStream;", false);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/io/BufferedInputStream", "<init>", "(Ljava/io/InputStream;)V", false);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener$ReceiveSocketHandler", "_in", "Ljava/io/InputStream;");
methodVisitor.visitLabel(label1);
Label label4 = new Label();
methodVisitor.visitJumpInsn(GOTO, label4);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_FULL, 3, new Object[] {"org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener$ReceiveSocketHandler", "org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener", "java/net/Socket"}, 1, new Object[] {"java/io/IOException"});
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener", "access$1900", "(Lorg/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener;)Lorg/apache/openjpa/lib/log/Log;", false);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/openjpa/lib/log/Log", "isInfoEnabled", "()Z", true);
Label label5 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label5);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener", "access$1900", "(Lorg/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener;)Lorg/apache/openjpa/lib/log/Log;", false);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/event/TCPRemoteCommitProvider", "access$1700", "()Lorg/apache/openjpa/lib/util/Localizer;", false);
methodVisitor.visitLdcInsn("tcp-socket-option-error");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openjpa/lib/util/Localizer", "get", "(Ljava/lang/String;)Lorg/apache/openjpa/lib/util/Localizer$Message;", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/openjpa/lib/log/Log", "info", "(Ljava/lang/Object;Ljava/lang/Throwable;)V", true);
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"java/io/IOException"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener$ReceiveSocketHandler", "_s", "Ljava/net/Socket;");
methodVisitor.visitJumpInsn(GOTO, label4);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_FULL, 3, new Object[] {"org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener$ReceiveSocketHandler", "org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener", "java/net/Socket"}, 1, new Object[] {"java/lang/Exception"});
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener", "access$1900", "(Lorg/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener;)Lorg/apache/openjpa/lib/log/Log;", false);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/openjpa/lib/log/Log", "isWarnEnabled", "()Z", true);
Label label6 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label6);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener", "access$1900", "(Lorg/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener;)Lorg/apache/openjpa/lib/log/Log;", false);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/event/TCPRemoteCommitProvider", "access$1700", "()Lorg/apache/openjpa/lib/util/Localizer;", false);
methodVisitor.visitLdcInsn("tcp-receive-error");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openjpa/lib/util/Localizer", "get", "(Ljava/lang/String;)Lorg/apache/openjpa/lib/util/Localizer$Message;", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/openjpa/lib/log/Log", "warn", "(Ljava/lang/Object;Ljava/lang/Throwable;)V", true);
methodVisitor.visitLabel(label6);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"java/lang/Exception"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener$ReceiveSocketHandler", "_s", "Ljava/net/Socket;");
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(4, 4);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "run", "()V", null, null);
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/io/EOFException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, "java/lang/Throwable");
Label label4 = new Label();
Label label5 = new Label();
Label label6 = new Label();
methodVisitor.visitTryCatchBlock(label4, label5, label6, "java/io/IOException");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener$ReceiveSocketHandler", "_s", "Ljava/net/Socket;");
Label label7 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label7);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitLabel(label7);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener$ReceiveSocketHandler", "this$0", "Lorg/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener", "access$2000", "(Lorg/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener;)Z", false);
methodVisitor.visitJumpInsn(IFEQ, label4);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener$ReceiveSocketHandler", "_s", "Ljava/net/Socket;");
methodVisitor.visitJumpInsn(IFNULL, label4);
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener$ReceiveSocketHandler", "_in", "Ljava/io/InputStream;");
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener$ReceiveSocketHandler", "handle", "(Ljava/io/InputStream;)V", false);
methodVisitor.visitLabel(label1);
methodVisitor.visitJumpInsn(GOTO, label7);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/io/EOFException"});
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener$ReceiveSocketHandler", "this$0", "Lorg/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener", "access$1900", "(Lorg/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener;)Lorg/apache/openjpa/lib/log/Log;", false);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/openjpa/lib/log/Log", "isTraceEnabled", "()Z", true);
Label label8 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label8);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener$ReceiveSocketHandler", "this$0", "Lorg/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener", "access$1900", "(Lorg/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener;)Lorg/apache/openjpa/lib/log/Log;", false);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/event/TCPRemoteCommitProvider", "access$1700", "()Lorg/apache/openjpa/lib/util/Localizer;", false);
methodVisitor.visitLdcInsn("tcp-close-socket");
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener$ReceiveSocketHandler", "_s", "Ljava/net/Socket;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/net/Socket", "getInetAddress", "()Ljava/net/InetAddress;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/net/InetAddress", "getHostAddress", "()Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitLdcInsn(":");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener$ReceiveSocketHandler", "_s", "Ljava/net/Socket;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/net/Socket", "getPort", "()I", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(I)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openjpa/lib/util/Localizer", "get", "(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/openjpa/lib/util/Localizer$Message;", false);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/openjpa/lib/log/Log", "trace", "(Ljava/lang/Object;)V", true);
methodVisitor.visitLabel(label8);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"java/io/EOFException"}, 0, null);
methodVisitor.visitJumpInsn(GOTO, label4);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_FULL, 1, new Object[] {"org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener$ReceiveSocketHandler"}, 1, new Object[] {"java/lang/Throwable"});
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener$ReceiveSocketHandler", "this$0", "Lorg/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener", "access$1900", "(Lorg/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener;)Lorg/apache/openjpa/lib/log/Log;", false);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/openjpa/lib/log/Log", "isWarnEnabled", "()Z", true);
Label label9 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label9);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener$ReceiveSocketHandler", "this$0", "Lorg/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener", "access$1900", "(Lorg/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener;)Lorg/apache/openjpa/lib/log/Log;", false);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/event/TCPRemoteCommitProvider", "access$1700", "()Lorg/apache/openjpa/lib/util/Localizer;", false);
methodVisitor.visitLdcInsn("tcp-receive-error");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openjpa/lib/util/Localizer", "get", "(Ljava/lang/String;)Lorg/apache/openjpa/lib/util/Localizer$Message;", false);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/openjpa/lib/log/Log", "warn", "(Ljava/lang/Object;Ljava/lang/Throwable;)V", true);
methodVisitor.visitLabel(label9);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"java/lang/Throwable"}, 0, null);
methodVisitor.visitJumpInsn(GOTO, label4);
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener$ReceiveSocketHandler", "_in", "Ljava/io/InputStream;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/InputStream", "close", "()V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener$ReceiveSocketHandler", "_s", "Ljava/net/Socket;");
methodVisitor.visitJumpInsn(IFNULL, label5);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener$ReceiveSocketHandler", "_s", "Ljava/net/Socket;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/net/Socket", "close", "()V", false);
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
Label label10 = new Label();
methodVisitor.visitJumpInsn(GOTO, label10);
methodVisitor.visitLabel(label6);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/io/IOException"});
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener$ReceiveSocketHandler", "this$0", "Lorg/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener", "access$1900", "(Lorg/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener;)Lorg/apache/openjpa/lib/log/Log;", false);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/event/TCPRemoteCommitProvider", "access$1700", "()Lorg/apache/openjpa/lib/util/Localizer;", false);
methodVisitor.visitLdcInsn("tcp-close-socket-error");
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener$ReceiveSocketHandler", "_s", "Ljava/net/Socket;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/net/Socket", "getInetAddress", "()Ljava/net/InetAddress;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/net/InetAddress", "getHostAddress", "()Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitLdcInsn(":");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener$ReceiveSocketHandler", "_s", "Ljava/net/Socket;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/net/Socket", "getPort", "()I", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(I)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openjpa/lib/util/Localizer", "get", "(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/openjpa/lib/util/Localizer$Message;", false);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/openjpa/lib/log/Log", "warn", "(Ljava/lang/Object;Ljava/lang/Throwable;)V", true);
methodVisitor.visitLabel(label10);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(5, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PRIVATE, "handle", "(Ljava/io/InputStream;)V", null, new String[] { "java/io/IOException", "java/lang/ClassNotFoundException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, null);
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label2, label3, label2, null);
methodVisitor.visitTypeInsn(NEW, "org/apache/openjpa/util/Serialization$ClassResolvingObjectInputStream");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openjpa/util/Serialization$ClassResolvingObjectInputStream", "<init>", "(Ljava/io/InputStream;)V", false);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/ObjectInputStream", "readLong", "()J", false);
methodVisitor.visitVarInsn(LSTORE, 3);
methodVisitor.visitVarInsn(LLOAD, 3);
methodVisitor.visitLdcInsn(new Long(338210047L));
methodVisitor.visitInsn(LCMP);
Label label4 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label4);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener$ReceiveSocketHandler", "this$0", "Lorg/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener", "access$1900", "(Lorg/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener;)Lorg/apache/openjpa/lib/log/Log;", false);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/openjpa/lib/log/Log", "isWarnEnabled", "()Z", true);
methodVisitor.visitJumpInsn(IFEQ, label4);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener$ReceiveSocketHandler", "this$0", "Lorg/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener", "access$1900", "(Lorg/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener;)Lorg/apache/openjpa/lib/log/Log;", false);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/event/TCPRemoteCommitProvider", "access$1700", "()Lorg/apache/openjpa/lib/util/Localizer;", false);
methodVisitor.visitLdcInsn("tcp-wrong-version-error");
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener$ReceiveSocketHandler", "_s", "Ljava/net/Socket;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/net/Socket", "getInetAddress", "()Ljava/net/InetAddress;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/net/InetAddress", "getHostAddress", "()Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitLdcInsn(":");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener$ReceiveSocketHandler", "_s", "Ljava/net/Socket;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/net/Socket", "getPort", "()I", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(I)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openjpa/lib/util/Localizer", "get", "(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/openjpa/lib/util/Localizer$Message;", false);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/openjpa/lib/log/Log", "warn", "(Ljava/lang/Object;)V", true);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_APPEND,2, new Object[] {"java/io/ObjectInputStream", Opcodes.LONG}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/ObjectInputStream", "readLong", "()J", false);
methodVisitor.visitVarInsn(LSTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/ObjectInputStream", "readInt", "()I", false);
methodVisitor.visitVarInsn(ISTORE, 7);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/ObjectInputStream", "readObject", "()Ljava/lang/Object;", false);
methodVisitor.visitTypeInsn(CHECKCAST, "[B");
methodVisitor.visitTypeInsn(CHECKCAST, "[B");
methodVisitor.visitVarInsn(ASTORE, 8);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/ObjectInputStream", "readObject", "()Ljava/lang/Object;", false);
methodVisitor.visitTypeInsn(CHECKCAST, "org/apache/openjpa/event/RemoteCommitEvent");
methodVisitor.visitVarInsn(ASTORE, 9);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener$ReceiveSocketHandler", "this$0", "Lorg/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener", "access$1900", "(Lorg/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener;)Lorg/apache/openjpa/lib/log/Log;", false);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/openjpa/lib/log/Log", "isTraceEnabled", "()Z", true);
Label label5 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label5);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener$ReceiveSocketHandler", "this$0", "Lorg/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener", "access$1900", "(Lorg/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener;)Lorg/apache/openjpa/lib/log/Log;", false);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/event/TCPRemoteCommitProvider", "access$1700", "()Lorg/apache/openjpa/lib/util/Localizer;", false);
methodVisitor.visitLdcInsn("tcp-received-event");
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener$ReceiveSocketHandler", "_s", "Ljava/net/Socket;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/net/Socket", "getInetAddress", "()Ljava/net/InetAddress;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/net/InetAddress", "getHostAddress", "()Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitLdcInsn(":");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener$ReceiveSocketHandler", "_s", "Ljava/net/Socket;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/net/Socket", "getPort", "()I", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(I)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openjpa/lib/util/Localizer", "get", "(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/openjpa/lib/util/Localizer$Message;", false);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/openjpa/lib/log/Log", "trace", "(Ljava/lang/Object;)V", true);
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_FULL, 8, new Object[] {"org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener$ReceiveSocketHandler", "java/io/InputStream", "java/io/ObjectInputStream", Opcodes.LONG, Opcodes.LONG, Opcodes.INTEGER, "[B", "org/apache/openjpa/event/RemoteCommitEvent"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ILOAD, 7);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener$ReceiveSocketHandler", "this$0", "Lorg/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener", "access$600", "(Lorg/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener;)I", false);
Label label6 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPNE, label6);
methodVisitor.visitVarInsn(ALOAD, 8);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener$ReceiveSocketHandler", "this$0", "Lorg/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener", "access$2100", "(Lorg/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener;)[B", false);
methodVisitor.visitMethodInsn(INVOKESTATIC, "java/util/Arrays", "equals", "([B[B)Z", false);
methodVisitor.visitJumpInsn(IFEQ, label6);
methodVisitor.visitInsn(ICONST_1);
Label label7 = new Label();
methodVisitor.visitJumpInsn(GOTO, label7);
methodVisitor.visitLabel(label6);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitLabel(label7);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {Opcodes.INTEGER});
methodVisitor.visitVarInsn(ISTORE, 10);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener$ReceiveSocketHandler", "this$0", "Lorg/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener", "access$2200", "(Lorg/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener;)Ljava/util/Set;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ASTORE, 12);
methodVisitor.visitInsn(MONITORENTER);
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener$ReceiveSocketHandler", "this$0", "Lorg/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener", "access$2200", "(Lorg/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener;)Ljava/util/Set;", false);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/Set", "iterator", "()Ljava/util/Iterator;", true);
methodVisitor.visitVarInsn(ASTORE, 13);
Label label8 = new Label();
methodVisitor.visitLabel(label8);
methodVisitor.visitFrame(Opcodes.F_FULL, 12, new Object[] {"org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener$ReceiveSocketHandler", "java/io/InputStream", "java/io/ObjectInputStream", Opcodes.LONG, Opcodes.LONG, Opcodes.INTEGER, "[B", "org/apache/openjpa/event/RemoteCommitEvent", Opcodes.INTEGER, Opcodes.TOP, "java/lang/Object", "java/util/Iterator"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "hasNext", "()Z", true);
Label label9 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label9);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "next", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/apache/openjpa/event/TCPRemoteCommitProvider");
methodVisitor.visitVarInsn(ASTORE, 11);
methodVisitor.visitVarInsn(LLOAD, 5);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openjpa/event/TCPRemoteCommitProvider", "access$2300", "(Lorg/apache/openjpa/event/TCPRemoteCommitProvider;)J", false);
methodVisitor.visitInsn(LCMP);
Label label10 = new Label();
methodVisitor.visitJumpInsn(IFNE, label10);
methodVisitor.visitVarInsn(ILOAD, 10);
methodVisitor.visitJumpInsn(IFNE, label8);
methodVisitor.visitLabel(label10);
methodVisitor.visitFrame(Opcodes.F_FULL, 12, new Object[] {"org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener$ReceiveSocketHandler", "java/io/InputStream", "java/io/ObjectInputStream", Opcodes.LONG, Opcodes.LONG, Opcodes.INTEGER, "[B", "org/apache/openjpa/event/RemoteCommitEvent", Opcodes.INTEGER, "org/apache/openjpa/event/TCPRemoteCommitProvider", "java/lang/Object", "java/util/Iterator"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openjpa/event/TCPRemoteCommitProvider", "eventManager", "Lorg/apache/openjpa/event/RemoteCommitEventManager;");
methodVisitor.visitVarInsn(ALOAD, 9);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openjpa/event/RemoteCommitEventManager", "fireEvent", "(Ljava/lang/Object;)[Ljava/lang/Exception;", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitJumpInsn(GOTO, label8);
methodVisitor.visitLabel(label9);
methodVisitor.visitFrame(Opcodes.F_FULL, 11, new Object[] {"org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener$ReceiveSocketHandler", "java/io/InputStream", "java/io/ObjectInputStream", Opcodes.LONG, Opcodes.LONG, Opcodes.INTEGER, "[B", "org/apache/openjpa/event/RemoteCommitEvent", Opcodes.INTEGER, Opcodes.TOP, "java/lang/Object"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitInsn(MONITOREXIT);
methodVisitor.visitLabel(label1);
Label label11 = new Label();
methodVisitor.visitJumpInsn(GOTO, label11);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/Throwable"});
methodVisitor.visitVarInsn(ASTORE, 14);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitInsn(MONITOREXIT);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label11);
methodVisitor.visitFrame(Opcodes.F_CHOP,2, null, 0, null);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(5, 15);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_SYNTHETIC, "<init>", "(Lorg/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener;Ljava/net/Socket;Lorg/apache/openjpa/event/TCPRemoteCommitProvider$1;)V", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener$ReceiveSocketHandler", "<init>", "(Lorg/apache/openjpa/event/TCPRemoteCommitProvider$TCPPortListener;Ljava/net/Socket;)V", false);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(3, 4);
methodVisitor.visitEnd();
}
classWriter.visitEnd();

return classWriter.toByteArray();
}
}
