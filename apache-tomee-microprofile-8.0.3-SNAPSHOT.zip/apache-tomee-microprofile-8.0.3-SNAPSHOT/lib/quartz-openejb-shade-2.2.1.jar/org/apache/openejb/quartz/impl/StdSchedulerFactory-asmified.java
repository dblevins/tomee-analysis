package asm.org.apache.openejb.quartz.impl;
import org.objectweb.asm.AnnotationVisitor;
import org.objectweb.asm.Attribute;
import org.objectweb.asm.ClassReader;
import org.objectweb.asm.ClassWriter;
import org.objectweb.asm.ConstantDynamic;
import org.objectweb.asm.FieldVisitor;
import org.objectweb.asm.Handle;
import org.objectweb.asm.Label;
import org.objectweb.asm.MethodVisitor;
import org.objectweb.asm.Opcodes;
import org.objectweb.asm.RecordComponentVisitor;
import org.objectweb.asm.Type;
import org.objectweb.asm.TypePath;
public class StdSchedulerFactoryDump implements Opcodes {

public static byte[] dump () throws Exception {

ClassWriter classWriter = new ClassWriter(0);
FieldVisitor fieldVisitor;
RecordComponentVisitor recordComponentVisitor;
MethodVisitor methodVisitor;
AnnotationVisitor annotationVisitor0;

classWriter.visit(V1_6, ACC_PUBLIC | ACC_SUPER, "org/apache/openejb/quartz/impl/StdSchedulerFactory", null, "java/lang/Object", new String[] { "org/apache/openejb/quartz/SchedulerFactory" });

{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC, "PROPERTIES_FILE", "Ljava/lang/String;", null, "org.apache.openejb.quartz.properties");
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC, "PROP_SCHED_INSTANCE_NAME", "Ljava/lang/String;", null, "org.apache.openejb.quartz.scheduler.instanceName");
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC, "PROP_SCHED_INSTANCE_ID", "Ljava/lang/String;", null, "org.apache.openejb.quartz.scheduler.instanceId");
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC, "PROP_SCHED_INSTANCE_ID_GENERATOR_PREFIX", "Ljava/lang/String;", null, "org.apache.openejb.quartz.scheduler.instanceIdGenerator");
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC, "PROP_SCHED_INSTANCE_ID_GENERATOR_CLASS", "Ljava/lang/String;", null, "org.apache.openejb.quartz.scheduler.instanceIdGenerator.class");
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC, "PROP_SCHED_THREAD_NAME", "Ljava/lang/String;", null, "org.apache.openejb.quartz.scheduler.threadName");
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC, "PROP_SCHED_SKIP_UPDATE_CHECK", "Ljava/lang/String;", null, "org.apache.openejb.quartz.scheduler.skipUpdateCheck");
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC, "PROP_SCHED_BATCH_TIME_WINDOW", "Ljava/lang/String;", null, "org.apache.openejb.quartz.scheduler.batchTriggerAcquisitionFireAheadTimeWindow");
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC, "PROP_SCHED_MAX_BATCH_SIZE", "Ljava/lang/String;", null, "org.apache.openejb.quartz.scheduler.batchTriggerAcquisitionMaxCount");
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC, "PROP_SCHED_JMX_EXPORT", "Ljava/lang/String;", null, "org.apache.openejb.quartz.scheduler.jmx.export");
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC, "PROP_SCHED_JMX_OBJECT_NAME", "Ljava/lang/String;", null, "org.apache.openejb.quartz.scheduler.jmx.objectName");
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC, "PROP_SCHED_JMX_PROXY", "Ljava/lang/String;", null, "org.apache.openejb.quartz.scheduler.jmx.proxy");
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC, "PROP_SCHED_JMX_PROXY_CLASS", "Ljava/lang/String;", null, "org.apache.openejb.quartz.scheduler.jmx.proxy.class");
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC, "PROP_SCHED_RMI_EXPORT", "Ljava/lang/String;", null, "org.apache.openejb.quartz.scheduler.rmi.export");
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC, "PROP_SCHED_RMI_PROXY", "Ljava/lang/String;", null, "org.apache.openejb.quartz.scheduler.rmi.proxy");
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC, "PROP_SCHED_RMI_HOST", "Ljava/lang/String;", null, "org.apache.openejb.quartz.scheduler.rmi.registryHost");
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC, "PROP_SCHED_RMI_PORT", "Ljava/lang/String;", null, "org.apache.openejb.quartz.scheduler.rmi.registryPort");
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC, "PROP_SCHED_RMI_SERVER_PORT", "Ljava/lang/String;", null, "org.apache.openejb.quartz.scheduler.rmi.serverPort");
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC, "PROP_SCHED_RMI_CREATE_REGISTRY", "Ljava/lang/String;", null, "org.apache.openejb.quartz.scheduler.rmi.createRegistry");
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC, "PROP_SCHED_RMI_BIND_NAME", "Ljava/lang/String;", null, "org.apache.openejb.quartz.scheduler.rmi.bindName");
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC, "PROP_SCHED_WRAP_JOB_IN_USER_TX", "Ljava/lang/String;", null, "org.apache.openejb.quartz.scheduler.wrapJobExecutionInUserTransaction");
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC, "PROP_SCHED_USER_TX_URL", "Ljava/lang/String;", null, "org.apache.openejb.quartz.scheduler.userTransactionURL");
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC, "PROP_SCHED_IDLE_WAIT_TIME", "Ljava/lang/String;", null, "org.apache.openejb.quartz.scheduler.idleWaitTime");
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC, "PROP_SCHED_DB_FAILURE_RETRY_INTERVAL", "Ljava/lang/String;", null, "org.apache.openejb.quartz.scheduler.dbFailureRetryInterval");
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC, "PROP_SCHED_MAKE_SCHEDULER_THREAD_DAEMON", "Ljava/lang/String;", null, "org.apache.openejb.quartz.scheduler.makeSchedulerThreadDaemon");
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC, "PROP_SCHED_SCHEDULER_THREADS_INHERIT_CONTEXT_CLASS_LOADER_OF_INITIALIZING_THREAD", "Ljava/lang/String;", null, "org.apache.openejb.quartz.scheduler.threadsInheritContextClassLoaderOfInitializer");
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC, "PROP_SCHED_CLASS_LOAD_HELPER_CLASS", "Ljava/lang/String;", null, "org.apache.openejb.quartz.scheduler.classLoadHelper.class");
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC, "PROP_SCHED_JOB_FACTORY_CLASS", "Ljava/lang/String;", null, "org.apache.openejb.quartz.scheduler.jobFactory.class");
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC, "PROP_SCHED_JOB_FACTORY_PREFIX", "Ljava/lang/String;", null, "org.apache.openejb.quartz.scheduler.jobFactory");
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC, "PROP_SCHED_INTERRUPT_JOBS_ON_SHUTDOWN", "Ljava/lang/String;", null, "org.apache.openejb.quartz.scheduler.interruptJobsOnShutdown");
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC, "PROP_SCHED_INTERRUPT_JOBS_ON_SHUTDOWN_WITH_WAIT", "Ljava/lang/String;", null, "org.apache.openejb.quartz.scheduler.interruptJobsOnShutdownWithWait");
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC, "PROP_SCHED_CONTEXT_PREFIX", "Ljava/lang/String;", null, "org.apache.openejb.quartz.context.key");
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC, "PROP_THREAD_POOL_PREFIX", "Ljava/lang/String;", null, "org.apache.openejb.quartz.threadPool");
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC, "PROP_THREAD_POOL_CLASS", "Ljava/lang/String;", null, "org.apache.openejb.quartz.threadPool.class");
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC, "PROP_JOB_STORE_PREFIX", "Ljava/lang/String;", null, "org.apache.openejb.quartz.jobStore");
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC, "PROP_JOB_STORE_LOCK_HANDLER_PREFIX", "Ljava/lang/String;", null, "org.apache.openejb.quartz.jobStore.lockHandler");
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC, "PROP_JOB_STORE_LOCK_HANDLER_CLASS", "Ljava/lang/String;", null, "org.apache.openejb.quartz.jobStore.lockHandler.class");
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC, "PROP_TABLE_PREFIX", "Ljava/lang/String;", null, "tablePrefix");
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC, "PROP_SCHED_NAME", "Ljava/lang/String;", null, "schedName");
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC, "PROP_JOB_STORE_CLASS", "Ljava/lang/String;", null, "org.apache.openejb.quartz.jobStore.class");
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC, "PROP_JOB_STORE_USE_PROP", "Ljava/lang/String;", null, "org.apache.openejb.quartz.jobStore.useProperties");
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC, "PROP_DATASOURCE_PREFIX", "Ljava/lang/String;", null, "org.apache.openejb.quartz.dataSource");
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC, "PROP_CONNECTION_PROVIDER_CLASS", "Ljava/lang/String;", null, "connectionProvider.class");
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC | ACC_DEPRECATED, "PROP_DATASOURCE_DRIVER", "Ljava/lang/String;", null, "driver");
{
annotationVisitor0 = fieldVisitor.visitAnnotation("Ljava/lang/Deprecated;", true);
annotationVisitor0.visitEnd();
}
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC | ACC_DEPRECATED, "PROP_DATASOURCE_URL", "Ljava/lang/String;", null, "URL");
{
annotationVisitor0 = fieldVisitor.visitAnnotation("Ljava/lang/Deprecated;", true);
annotationVisitor0.visitEnd();
}
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC | ACC_DEPRECATED, "PROP_DATASOURCE_USER", "Ljava/lang/String;", null, "user");
{
annotationVisitor0 = fieldVisitor.visitAnnotation("Ljava/lang/Deprecated;", true);
annotationVisitor0.visitEnd();
}
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC | ACC_DEPRECATED, "PROP_DATASOURCE_PASSWORD", "Ljava/lang/String;", null, "password");
{
annotationVisitor0 = fieldVisitor.visitAnnotation("Ljava/lang/Deprecated;", true);
annotationVisitor0.visitEnd();
}
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC | ACC_DEPRECATED, "PROP_DATASOURCE_MAX_CONNECTIONS", "Ljava/lang/String;", null, "maxConnections");
{
annotationVisitor0 = fieldVisitor.visitAnnotation("Ljava/lang/Deprecated;", true);
annotationVisitor0.visitEnd();
}
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC | ACC_DEPRECATED, "PROP_DATASOURCE_VALIDATION_QUERY", "Ljava/lang/String;", null, "validationQuery");
{
annotationVisitor0 = fieldVisitor.visitAnnotation("Ljava/lang/Deprecated;", true);
annotationVisitor0.visitEnd();
}
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC, "PROP_DATASOURCE_JNDI_URL", "Ljava/lang/String;", null, "jndiURL");
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC, "PROP_DATASOURCE_JNDI_ALWAYS_LOOKUP", "Ljava/lang/String;", null, "jndiAlwaysLookup");
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC, "PROP_DATASOURCE_JNDI_INITIAL", "Ljava/lang/String;", null, "java.naming.factory.initial");
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC, "PROP_DATASOURCE_JNDI_PROVDER", "Ljava/lang/String;", null, "java.naming.provider.url");
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC, "PROP_DATASOURCE_JNDI_PRINCIPAL", "Ljava/lang/String;", null, "java.naming.security.principal");
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC, "PROP_DATASOURCE_JNDI_CREDENTIALS", "Ljava/lang/String;", null, "java.naming.security.credentials");
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC, "PROP_PLUGIN_PREFIX", "Ljava/lang/String;", null, "org.apache.openejb.quartz.plugin");
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC, "PROP_PLUGIN_CLASS", "Ljava/lang/String;", null, "class");
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC, "PROP_JOB_LISTENER_PREFIX", "Ljava/lang/String;", null, "org.apache.openejb.quartz.jobListener");
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC, "PROP_TRIGGER_LISTENER_PREFIX", "Ljava/lang/String;", null, "org.apache.openejb.quartz.triggerListener");
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC, "PROP_LISTENER_CLASS", "Ljava/lang/String;", null, "class");
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC, "DEFAULT_INSTANCE_ID", "Ljava/lang/String;", null, "NON_CLUSTERED");
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC, "AUTO_GENERATE_INSTANCE_ID", "Ljava/lang/String;", null, "AUTO");
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC, "PROP_THREAD_EXECUTOR", "Ljava/lang/String;", null, "org.apache.openejb.quartz.threadExecutor");
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC, "PROP_THREAD_EXECUTOR_CLASS", "Ljava/lang/String;", null, "org.apache.openejb.quartz.threadExecutor.class");
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC, "SYSTEM_PROPERTY_AS_INSTANCE_ID", "Ljava/lang/String;", null, "SYS_PROP");
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC, "MANAGEMENT_REST_SERVICE_ENABLED", "Ljava/lang/String;", null, "org.apache.openejb.quartz.managementRESTService.enabled");
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PUBLIC | ACC_FINAL | ACC_STATIC, "MANAGEMENT_REST_SERVICE_HOST_PORT", "Ljava/lang/String;", null, "org.apache.openejb.quartz.managementRESTService.bind");
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE, "initException", "Lorg/apache/openejb/quartz/SchedulerException;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE, "propSrc", "Ljava/lang/String;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE, "cfg", "Lorg/apache/openejb/quartz/utils/PropertiesParser;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_FINAL, "log", "Lorg/slf4j/Logger;", null, null);
fieldVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "<init>", "()V", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/Object", "<init>", "()V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "propSrc", "Ljava/lang/String;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Object", "getClass", "()Ljava/lang/Class;", false);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/slf4j/LoggerFactory", "getLogger", "(Ljava/lang/Class;)Lorg/slf4j/Logger;", false);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "log", "Lorg/slf4j/Logger;");
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(2, 1);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "<init>", "(Ljava/util/Properties;)V", null, new String[] { "org/apache/openejb/quartz/SchedulerException" });
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/Object", "<init>", "()V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "propSrc", "Ljava/lang/String;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Object", "getClass", "()Ljava/lang/Class;", false);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/slf4j/LoggerFactory", "getLogger", "(Ljava/lang/Class;)Lorg/slf4j/Logger;", false);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "log", "Lorg/slf4j/Logger;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initialize", "(Ljava/util/Properties;)V", false);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(2, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "<init>", "(Ljava/lang/String;)V", null, new String[] { "org/apache/openejb/quartz/SchedulerException" });
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/Object", "<init>", "()V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "propSrc", "Ljava/lang/String;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Object", "getClass", "()Ljava/lang/Class;", false);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/slf4j/LoggerFactory", "getLogger", "(Ljava/lang/Class;)Lorg/slf4j/Logger;", false);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "log", "Lorg/slf4j/Logger;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initialize", "(Ljava/lang/String;)V", false);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(2, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "getLog", "()Lorg/slf4j/Logger;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "log", "Lorg/slf4j/Logger;");
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(1, 1);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "initialize", "()V", null, new String[] { "org/apache/openejb/quartz/SchedulerException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/io/IOException");
Label label3 = new Label();
Label label4 = new Label();
Label label5 = new Label();
methodVisitor.visitTryCatchBlock(label3, label4, label5, "java/io/IOException");
Label label6 = new Label();
Label label7 = new Label();
Label label8 = new Label();
methodVisitor.visitTryCatchBlock(label6, label7, label8, "java/io/IOException");
Label label9 = new Label();
Label label10 = new Label();
Label label11 = new Label();
methodVisitor.visitTryCatchBlock(label9, label10, label11, "java/io/IOException");
Label label12 = new Label();
Label label13 = new Label();
Label label14 = new Label();
methodVisitor.visitTryCatchBlock(label12, label13, label14, null);
Label label15 = new Label();
Label label16 = new Label();
Label label17 = new Label();
methodVisitor.visitTryCatchBlock(label15, label16, label17, "java/io/IOException");
Label label18 = new Label();
methodVisitor.visitTryCatchBlock(label14, label18, label14, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "cfg", "Lorg/apache/openejb/quartz/utils/PropertiesParser;");
Label label19 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label19);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitLabel(label19);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
Label label20 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label20);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label20);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.properties");
methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/System", "getProperty", "(Ljava/lang/String;)Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
Label label21 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label21);
methodVisitor.visitVarInsn(ALOAD, 1);
Label label22 = new Label();
methodVisitor.visitJumpInsn(GOTO, label22);
methodVisitor.visitLabel(label21);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"java/lang/String"}, 0, null);
methodVisitor.visitLdcInsn("quartz.properties");
methodVisitor.visitLabel(label22);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/String"});
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitTypeInsn(NEW, "java/io/File");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/io/File", "<init>", "(Ljava/lang/String;)V", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitTypeInsn(NEW, "java/util/Properties");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/util/Properties", "<init>", "()V", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitLabel(label12);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/File", "exists", "()Z", false);
Label label23 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label23);
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 1);
Label label24 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label24);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitLdcInsn("specified file: '");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitLdcInsn("'");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "propSrc", "Ljava/lang/String;");
Label label25 = new Label();
methodVisitor.visitJumpInsn(GOTO, label25);
methodVisitor.visitLabel(label24);
methodVisitor.visitFrame(Opcodes.F_FULL, 6, new Object[] {"org/apache/openejb/quartz/impl/StdSchedulerFactory", "java/lang/String", "java/lang/String", "java/io/File", "java/util/Properties", "java/io/InputStream"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitLdcInsn("default file in current working dir: 'quartz.properties'");
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "propSrc", "Ljava/lang/String;");
methodVisitor.visitLabel(label25);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitTypeInsn(NEW, "java/io/BufferedInputStream");
methodVisitor.visitInsn(DUP);
methodVisitor.visitTypeInsn(NEW, "java/io/FileInputStream");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/io/FileInputStream", "<init>", "(Ljava/lang/String;)V", false);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/io/BufferedInputStream", "<init>", "(Ljava/io/InputStream;)V", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/Properties", "load", "(Ljava/io/InputStream;)V", false);
methodVisitor.visitLabel(label1);
methodVisitor.visitJumpInsn(GOTO, label13);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/io/IOException"});
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/quartz/SchedulerException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitLdcInsn("Properties file: '");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitLdcInsn("' could not be read.");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/SchedulerException", "<init>", "(Ljava/lang/String;Ljava/lang/Throwable;)V", false);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label23);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
Label label26 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label26);
methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/Thread", "currentThread", "()Ljava/lang/Thread;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Thread", "getContextClassLoader", "()Ljava/lang/ClassLoader;", false);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/ClassLoader", "getResourceAsStream", "(Ljava/lang/String;)Ljava/io/InputStream;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 5);
Label label27 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label27);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/quartz/SchedulerException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitLdcInsn("Properties file: '");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitLdcInsn("' could not be found.");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/SchedulerException", "<init>", "(Ljava/lang/String;)V", false);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label27);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitLdcInsn("specified file: '");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitLdcInsn("' in the class resource path.");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "propSrc", "Ljava/lang/String;");
methodVisitor.visitTypeInsn(NEW, "java/io/BufferedInputStream");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/io/BufferedInputStream", "<init>", "(Ljava/io/InputStream;)V", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/Properties", "load", "(Ljava/io/InputStream;)V", false);
methodVisitor.visitLabel(label4);
methodVisitor.visitJumpInsn(GOTO, label13);
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/io/IOException"});
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/quartz/SchedulerException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitLdcInsn("Properties file: '");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitLdcInsn("' could not be read.");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/SchedulerException", "<init>", "(Ljava/lang/String;Ljava/lang/Throwable;)V", false);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label26);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitLdcInsn("default resource file in Quartz package: 'quartz.properties'");
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "propSrc", "Ljava/lang/String;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Object", "getClass", "()Ljava/lang/Class;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getClassLoader", "()Ljava/lang/ClassLoader;", false);
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 6);
Label label28 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label28);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "findClassloader", "()Ljava/lang/ClassLoader;", false);
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitLabel(label28);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"java/lang/ClassLoader"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 6);
Label label29 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label29);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/quartz/SchedulerConfigException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("Unable to find a class loader on the current thread or class.");
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/SchedulerConfigException", "<init>", "(Ljava/lang/String;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label29);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitLdcInsn("quartz.properties");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/ClassLoader", "getResourceAsStream", "(Ljava/lang/String;)Ljava/io/InputStream;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 5);
Label label30 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label30);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitLdcInsn("/quartz.properties");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/ClassLoader", "getResourceAsStream", "(Ljava/lang/String;)Ljava/io/InputStream;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitLabel(label30);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 5);
Label label31 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label31);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitLdcInsn("org/apache/openejb/quartz/quartz.properties");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/ClassLoader", "getResourceAsStream", "(Ljava/lang/String;)Ljava/io/InputStream;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitLabel(label31);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitJumpInsn(IFNONNULL, label6);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/quartz/SchedulerException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("Default quartz.properties not found in class path");
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/SchedulerException", "<init>", "(Ljava/lang/String;)V", false);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label6);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/Properties", "load", "(Ljava/io/InputStream;)V", false);
methodVisitor.visitLabel(label7);
methodVisitor.visitJumpInsn(GOTO, label13);
methodVisitor.visitLabel(label8);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/io/IOException"});
methodVisitor.visitVarInsn(ASTORE, 7);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/quartz/SchedulerException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("Resource properties file: 'org/quartz/quartz.properties' could not be read from the classpath.");
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/SchedulerException", "<init>", "(Ljava/lang/String;Ljava/lang/Throwable;)V", false);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label13);
methodVisitor.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 5);
Label label32 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label32);
methodVisitor.visitLabel(label9);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/InputStream", "close", "()V", false);
methodVisitor.visitLabel(label10);
methodVisitor.visitJumpInsn(GOTO, label32);
methodVisitor.visitLabel(label11);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/io/IOException"});
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitJumpInsn(GOTO, label32);
methodVisitor.visitLabel(label14);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/Throwable"});
methodVisitor.visitVarInsn(ASTORE, 8);
methodVisitor.visitLabel(label18);
methodVisitor.visitVarInsn(ALOAD, 5);
Label label33 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label33);
methodVisitor.visitLabel(label15);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/InputStream", "close", "()V", false);
methodVisitor.visitLabel(label16);
methodVisitor.visitJumpInsn(GOTO, label33);
methodVisitor.visitLabel(label17);
methodVisitor.visitFrame(Opcodes.F_FULL, 9, new Object[] {"org/apache/openejb/quartz/impl/StdSchedulerFactory", "java/lang/String", "java/lang/String", "java/io/File", "java/util/Properties", "java/io/InputStream", Opcodes.TOP, Opcodes.TOP, "java/lang/Throwable"}, 1, new Object[] {"java/io/IOException"});
methodVisitor.visitVarInsn(ASTORE, 9);
methodVisitor.visitLabel(label33);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 8);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label32);
methodVisitor.visitFrame(Opcodes.F_CHOP,3, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "overrideWithSysProps", "(Ljava/util/Properties;)Ljava/util/Properties;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initialize", "(Ljava/util/Properties;)V", false);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(5, 10);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PRIVATE, "overrideWithSysProps", "(Ljava/util/Properties;)Ljava/util/Properties;", null, null);
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/security/AccessControlException");
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitLabel(label0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/System", "getProperties", "()Ljava/util/Properties;", false);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitLabel(label1);
Label label3 = new Label();
methodVisitor.visitJumpInsn(GOTO, label3);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_FULL, 3, new Object[] {"org/apache/openejb/quartz/impl/StdSchedulerFactory", "java/util/Properties", "java/util/Properties"}, 1, new Object[] {"java/security/AccessControlException"});
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "getLog", "()Lorg/slf4j/Logger;", false);
methodVisitor.visitLdcInsn("Skipping overriding quartz properties with System properties during initialization because of an AccessControlException.  This is likely due to not having read/write access for java.util.PropertyPermission as required by java.lang.System.getProperties().  To resolve this warning, either add this permission to your policy file or use a non-default version of initialize().");
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/slf4j/Logger", "warn", "(Ljava/lang/String;Ljava/lang/Throwable;)V", true);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 2);
Label label4 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label4);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/Properties", "putAll", "(Ljava/util/Map;)V", false);
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(3, 4);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "initialize", "(Ljava/lang/String;)V", null, new String[] { "org/apache/openejb/quartz/SchedulerException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/io/IOException");
Label label3 = new Label();
Label label4 = new Label();
Label label5 = new Label();
methodVisitor.visitTryCatchBlock(label3, label4, label5, "java/io/IOException");
Label label6 = new Label();
methodVisitor.visitTryCatchBlock(label3, label4, label6, null);
Label label7 = new Label();
Label label8 = new Label();
Label label9 = new Label();
methodVisitor.visitTryCatchBlock(label7, label8, label9, "java/io/IOException");
Label label10 = new Label();
methodVisitor.visitTryCatchBlock(label5, label10, label6, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "cfg", "Lorg/apache/openejb/quartz/utils/PropertiesParser;");
Label label11 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label11);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitLabel(label11);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
Label label12 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label12);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label12);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitTypeInsn(NEW, "java/util/Properties");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/util/Properties", "<init>", "()V", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/Thread", "currentThread", "()Ljava/lang/Thread;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Thread", "getContextClassLoader", "()Ljava/lang/ClassLoader;", false);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/ClassLoader", "getResourceAsStream", "(Ljava/lang/String;)Ljava/io/InputStream;", false);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ALOAD, 2);
Label label13 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label13);
methodVisitor.visitTypeInsn(NEW, "java/io/BufferedInputStream");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/io/BufferedInputStream", "<init>", "(Ljava/io/InputStream;)V", false);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitLdcInsn("the specified file : '");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitLdcInsn("' from the class resource path.");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "propSrc", "Ljava/lang/String;");
Label label14 = new Label();
methodVisitor.visitJumpInsn(GOTO, label14);
methodVisitor.visitLabel(label13);
methodVisitor.visitFrame(Opcodes.F_APPEND,2, new Object[] {"java/io/InputStream", "java/util/Properties"}, 0, null);
methodVisitor.visitTypeInsn(NEW, "java/io/BufferedInputStream");
methodVisitor.visitInsn(DUP);
methodVisitor.visitTypeInsn(NEW, "java/io/FileInputStream");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/io/FileInputStream", "<init>", "(Ljava/lang/String;)V", false);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/io/BufferedInputStream", "<init>", "(Ljava/io/InputStream;)V", false);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitLdcInsn("the specified file : '");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitLdcInsn("'");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "propSrc", "Ljava/lang/String;");
methodVisitor.visitLabel(label14);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/Properties", "load", "(Ljava/io/InputStream;)V", false);
methodVisitor.visitLabel(label4);
methodVisitor.visitVarInsn(ALOAD, 2);
Label label15 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label15);
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/InputStream", "close", "()V", false);
methodVisitor.visitLabel(label1);
methodVisitor.visitJumpInsn(GOTO, label15);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/io/IOException"});
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitJumpInsn(GOTO, label15);
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/io/IOException"});
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/quartz/SchedulerException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitLdcInsn("Properties file: '");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitLdcInsn("' could not be read.");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/SchedulerException", "<init>", "(Ljava/lang/String;Ljava/lang/Throwable;)V", false);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label6);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/Throwable"});
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitLabel(label10);
methodVisitor.visitVarInsn(ALOAD, 2);
Label label16 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label16);
methodVisitor.visitLabel(label7);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/InputStream", "close", "()V", false);
methodVisitor.visitLabel(label8);
methodVisitor.visitJumpInsn(GOTO, label16);
methodVisitor.visitLabel(label9);
methodVisitor.visitFrame(Opcodes.F_FULL, 6, new Object[] {"org/apache/openejb/quartz/impl/StdSchedulerFactory", "java/lang/String", "java/io/InputStream", "java/util/Properties", Opcodes.TOP, "java/lang/Throwable"}, 1, new Object[] {"java/io/IOException"});
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitLabel(label16);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label15);
methodVisitor.visitFrame(Opcodes.F_CHOP,2, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initialize", "(Ljava/util/Properties;)V", false);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(5, 7);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "initialize", "(Ljava/io/InputStream;)V", null, new String[] { "org/apache/openejb/quartz/SchedulerException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/io/IOException");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "cfg", "Lorg/apache/openejb/quartz/utils/PropertiesParser;");
Label label3 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label3);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
Label label4 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label4);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitTypeInsn(NEW, "java/util/Properties");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/util/Properties", "<init>", "()V", false);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 1);
Label label5 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label5);
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/Properties", "load", "(Ljava/io/InputStream;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitLdcInsn("an externally opened InputStream.");
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "propSrc", "Ljava/lang/String;");
methodVisitor.visitLabel(label1);
Label label6 = new Label();
methodVisitor.visitJumpInsn(GOTO, label6);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_FULL, 3, new Object[] {"org/apache/openejb/quartz/impl/StdSchedulerFactory", "java/io/InputStream", "java/util/Properties"}, 1, new Object[] {"java/io/IOException"});
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/quartz/SchedulerException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("Error loading property data from InputStream");
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/SchedulerException", "<init>", "(Ljava/lang/String;Ljava/lang/Throwable;)V", false);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/quartz/SchedulerException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("Error loading property data from InputStream - InputStream is null.");
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/SchedulerException", "<init>", "(Ljava/lang/String;)V", false);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label6);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initialize", "(Ljava/util/Properties;)V", false);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(5, 4);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "initialize", "(Ljava/util/Properties;)V", null, new String[] { "org/apache/openejb/quartz/SchedulerException" });
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "propSrc", "Ljava/lang/String;");
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitLdcInsn("an externally provided properties instance.");
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "propSrc", "Ljava/lang/String;");
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/quartz/utils/PropertiesParser");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/utils/PropertiesParser", "<init>", "(Ljava/util/Properties;)V", false);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "cfg", "Lorg/apache/openejb/quartz/utils/PropertiesParser;");
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(4, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PRIVATE, "instantiate", "()Lorg/apache/openejb/quartz/Scheduler;", null, new String[] { "org/apache/openejb/quartz/SchedulerException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/lang/Exception");
Label label3 = new Label();
Label label4 = new Label();
Label label5 = new Label();
methodVisitor.visitTryCatchBlock(label3, label4, label5, "java/lang/Exception");
Label label6 = new Label();
Label label7 = new Label();
Label label8 = new Label();
methodVisitor.visitTryCatchBlock(label6, label7, label8, "java/lang/Exception");
Label label9 = new Label();
Label label10 = new Label();
Label label11 = new Label();
methodVisitor.visitTryCatchBlock(label9, label10, label11, "java/lang/Exception");
Label label12 = new Label();
Label label13 = new Label();
Label label14 = new Label();
methodVisitor.visitTryCatchBlock(label12, label13, label14, "java/lang/Exception");
Label label15 = new Label();
Label label16 = new Label();
Label label17 = new Label();
methodVisitor.visitTryCatchBlock(label15, label16, label17, "java/lang/Exception");
Label label18 = new Label();
Label label19 = new Label();
Label label20 = new Label();
methodVisitor.visitTryCatchBlock(label18, label19, label20, "java/lang/Exception");
Label label21 = new Label();
Label label22 = new Label();
Label label23 = new Label();
methodVisitor.visitTryCatchBlock(label21, label22, label23, "java/lang/Exception");
Label label24 = new Label();
Label label25 = new Label();
Label label26 = new Label();
methodVisitor.visitTryCatchBlock(label24, label25, label26, "java/lang/Exception");
Label label27 = new Label();
Label label28 = new Label();
Label label29 = new Label();
methodVisitor.visitTryCatchBlock(label27, label28, label29, "java/lang/Exception");
Label label30 = new Label();
Label label31 = new Label();
Label label32 = new Label();
methodVisitor.visitTryCatchBlock(label30, label31, label32, "java/lang/Exception");
Label label33 = new Label();
Label label34 = new Label();
Label label35 = new Label();
methodVisitor.visitTryCatchBlock(label33, label34, label35, "java/lang/Exception");
Label label36 = new Label();
Label label37 = new Label();
Label label38 = new Label();
methodVisitor.visitTryCatchBlock(label36, label37, label38, "java/lang/Exception");
Label label39 = new Label();
Label label40 = new Label();
Label label41 = new Label();
methodVisitor.visitTryCatchBlock(label39, label40, label41, "java/lang/Exception");
Label label42 = new Label();
Label label43 = new Label();
Label label44 = new Label();
methodVisitor.visitTryCatchBlock(label42, label43, label44, "java/lang/Exception");
Label label45 = new Label();
Label label46 = new Label();
Label label47 = new Label();
methodVisitor.visitTryCatchBlock(label45, label46, label47, "java/sql/SQLException");
Label label48 = new Label();
Label label49 = new Label();
Label label50 = new Label();
methodVisitor.visitTryCatchBlock(label48, label49, label50, "java/lang/Exception");
Label label51 = new Label();
Label label52 = new Label();
Label label53 = new Label();
methodVisitor.visitTryCatchBlock(label51, label52, label53, "java/lang/Exception");
Label label54 = new Label();
Label label55 = new Label();
Label label56 = new Label();
methodVisitor.visitTryCatchBlock(label54, label55, label56, "java/lang/Exception");
Label label57 = new Label();
Label label58 = new Label();
Label label59 = new Label();
methodVisitor.visitTryCatchBlock(label57, label58, label59, "java/lang/NoSuchMethodException");
Label label60 = new Label();
Label label61 = new Label();
Label label62 = new Label();
methodVisitor.visitTryCatchBlock(label60, label61, label62, "java/lang/Exception");
Label label63 = new Label();
Label label64 = new Label();
Label label65 = new Label();
methodVisitor.visitTryCatchBlock(label63, label64, label65, "java/lang/Exception");
Label label66 = new Label();
Label label67 = new Label();
Label label68 = new Label();
methodVisitor.visitTryCatchBlock(label66, label67, label68, "java/lang/NoSuchMethodException");
Label label69 = new Label();
Label label70 = new Label();
Label label71 = new Label();
methodVisitor.visitTryCatchBlock(label69, label70, label71, "java/lang/Exception");
Label label72 = new Label();
Label label73 = new Label();
Label label74 = new Label();
methodVisitor.visitTryCatchBlock(label72, label73, label74, "java/lang/Exception");
Label label75 = new Label();
Label label76 = new Label();
Label label77 = new Label();
methodVisitor.visitTryCatchBlock(label75, label76, label77, "java/lang/Exception");
Label label78 = new Label();
Label label79 = new Label();
Label label80 = new Label();
methodVisitor.visitTryCatchBlock(label78, label79, label80, "java/lang/Exception");
Label label81 = new Label();
Label label82 = new Label();
Label label83 = new Label();
methodVisitor.visitTryCatchBlock(label81, label82, label83, "org/apache/openejb/quartz/SchedulerException");
Label label84 = new Label();
methodVisitor.visitTryCatchBlock(label81, label82, label84, "java/lang/RuntimeException");
Label label85 = new Label();
methodVisitor.visitTryCatchBlock(label81, label82, label85, "java/lang/Error");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "cfg", "Lorg/apache/openejb/quartz/utils/PropertiesParser;");
Label label86 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label86);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initialize", "()V", false);
methodVisitor.visitLabel(label86);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
Label label87 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label87);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label87);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ASTORE, 7);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 8);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 9);
methodVisitor.visitLdcInsn(new Long(-1L));
methodVisitor.visitVarInsn(LSTORE, 10);
methodVisitor.visitLdcInsn(new Long(15000L));
methodVisitor.visitVarInsn(LSTORE, 12);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/impl/SchedulerRepository", "getInstance", "()Lorg/apache/openejb/quartz/impl/SchedulerRepository;", false);
methodVisitor.visitVarInsn(ASTORE, 14);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "cfg", "Lorg/apache/openejb/quartz/utils/PropertiesParser;");
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.scheduler.instanceName");
methodVisitor.visitLdcInsn("QuartzScheduler");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getStringProperty", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ASTORE, 15);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "cfg", "Lorg/apache/openejb/quartz/utils/PropertiesParser;");
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.scheduler.threadName");
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitLdcInsn("_QuartzSchedulerThread");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getStringProperty", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ASTORE, 16);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "cfg", "Lorg/apache/openejb/quartz/utils/PropertiesParser;");
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.scheduler.instanceId");
methodVisitor.visitLdcInsn("NON_CLUSTERED");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getStringProperty", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ASTORE, 17);
methodVisitor.visitVarInsn(ALOAD, 17);
methodVisitor.visitLdcInsn("AUTO");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
Label label88 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label88);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ISTORE, 9);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "cfg", "Lorg/apache/openejb/quartz/utils/PropertiesParser;");
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.scheduler.instanceIdGenerator.class");
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.simpl.SimpleInstanceIdGenerator");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getStringProperty", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
Label label89 = new Label();
methodVisitor.visitJumpInsn(GOTO, label89);
methodVisitor.visitLabel(label88);
methodVisitor.visitFrame(Opcodes.F_FULL, 16, new Object[] {"org/apache/openejb/quartz/impl/StdSchedulerFactory", "org/apache/openejb/quartz/spi/JobStore", "org/apache/openejb/quartz/spi/ThreadPool", "org/apache/openejb/quartz/core/QuartzScheduler", "org/apache/openejb/quartz/utils/DBConnectionManager", "java/lang/String", "java/util/Properties", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.LONG, "org/apache/openejb/quartz/impl/SchedulerRepository", "java/lang/String", "java/lang/String", "java/lang/String"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 17);
methodVisitor.visitLdcInsn("SYS_PROP");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
methodVisitor.visitJumpInsn(IFEQ, label89);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ISTORE, 9);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.simpl.SystemPropertyInstanceIdGenerator");
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitLabel(label89);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "cfg", "Lorg/apache/openejb/quartz/utils/PropertiesParser;");
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.scheduler.userTransactionURL");
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getStringProperty", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ASTORE, 7);
methodVisitor.visitVarInsn(ALOAD, 7);
Label label90 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label90);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "trim", "()Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "length", "()I", false);
methodVisitor.visitJumpInsn(IFNE, label90);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ASTORE, 7);
methodVisitor.visitLabel(label90);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "cfg", "Lorg/apache/openejb/quartz/utils/PropertiesParser;");
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.scheduler.classLoadHelper.class");
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.simpl.CascadingClassLoadHelper");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getStringProperty", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ASTORE, 18);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "cfg", "Lorg/apache/openejb/quartz/utils/PropertiesParser;");
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.scheduler.wrapJobExecutionInUserTransaction");
methodVisitor.visitVarInsn(ILOAD, 8);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getBooleanProperty", "(Ljava/lang/String;Z)Z", false);
methodVisitor.visitVarInsn(ISTORE, 8);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "cfg", "Lorg/apache/openejb/quartz/utils/PropertiesParser;");
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.scheduler.jobFactory.class");
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getStringProperty", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ASTORE, 19);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "cfg", "Lorg/apache/openejb/quartz/utils/PropertiesParser;");
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.scheduler.idleWaitTime");
methodVisitor.visitVarInsn(LLOAD, 10);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getLongProperty", "(Ljava/lang/String;J)J", false);
methodVisitor.visitVarInsn(LSTORE, 10);
methodVisitor.visitVarInsn(LLOAD, 10);
methodVisitor.visitLdcInsn(new Long(-1L));
methodVisitor.visitInsn(LCMP);
Label label91 = new Label();
methodVisitor.visitJumpInsn(IFLE, label91);
methodVisitor.visitVarInsn(LLOAD, 10);
methodVisitor.visitLdcInsn(new Long(1000L));
methodVisitor.visitInsn(LCMP);
methodVisitor.visitJumpInsn(IFGE, label91);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/quartz/SchedulerException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.scheduler.idleWaitTime of less than 1000ms is not legal.");
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/SchedulerException", "<init>", "(Ljava/lang/String;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label91);
methodVisitor.visitFrame(Opcodes.F_APPEND,2, new Object[] {"java/lang/String", "java/lang/String"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "cfg", "Lorg/apache/openejb/quartz/utils/PropertiesParser;");
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.scheduler.dbFailureRetryInterval");
methodVisitor.visitVarInsn(LLOAD, 12);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getLongProperty", "(Ljava/lang/String;J)J", false);
methodVisitor.visitVarInsn(LSTORE, 12);
methodVisitor.visitVarInsn(LLOAD, 12);
methodVisitor.visitInsn(LCONST_0);
methodVisitor.visitInsn(LCMP);
Label label92 = new Label();
methodVisitor.visitJumpInsn(IFGE, label92);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/quartz/SchedulerException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.scheduler.dbFailureRetryInterval of less than 0 ms is not legal.");
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/SchedulerException", "<init>", "(Ljava/lang/String;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label92);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "cfg", "Lorg/apache/openejb/quartz/utils/PropertiesParser;");
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.scheduler.makeSchedulerThreadDaemon");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getBooleanProperty", "(Ljava/lang/String;)Z", false);
methodVisitor.visitVarInsn(ISTORE, 20);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "cfg", "Lorg/apache/openejb/quartz/utils/PropertiesParser;");
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.scheduler.threadsInheritContextClassLoaderOfInitializer");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getBooleanProperty", "(Ljava/lang/String;)Z", false);
methodVisitor.visitVarInsn(ISTORE, 21);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "cfg", "Lorg/apache/openejb/quartz/utils/PropertiesParser;");
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.scheduler.skipUpdateCheck");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getBooleanProperty", "(Ljava/lang/String;Z)Z", false);
methodVisitor.visitVarInsn(ISTORE, 22);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "cfg", "Lorg/apache/openejb/quartz/utils/PropertiesParser;");
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.scheduler.batchTriggerAcquisitionFireAheadTimeWindow");
methodVisitor.visitInsn(LCONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getLongProperty", "(Ljava/lang/String;J)J", false);
methodVisitor.visitVarInsn(LSTORE, 23);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "cfg", "Lorg/apache/openejb/quartz/utils/PropertiesParser;");
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.scheduler.batchTriggerAcquisitionMaxCount");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getIntProperty", "(Ljava/lang/String;I)I", false);
methodVisitor.visitVarInsn(ISTORE, 25);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "cfg", "Lorg/apache/openejb/quartz/utils/PropertiesParser;");
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.scheduler.interruptJobsOnShutdown");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getBooleanProperty", "(Ljava/lang/String;Z)Z", false);
methodVisitor.visitVarInsn(ISTORE, 26);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "cfg", "Lorg/apache/openejb/quartz/utils/PropertiesParser;");
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.scheduler.interruptJobsOnShutdownWithWait");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getBooleanProperty", "(Ljava/lang/String;Z)Z", false);
methodVisitor.visitVarInsn(ISTORE, 27);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "cfg", "Lorg/apache/openejb/quartz/utils/PropertiesParser;");
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.scheduler.jmx.export");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getBooleanProperty", "(Ljava/lang/String;)Z", false);
methodVisitor.visitVarInsn(ISTORE, 28);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "cfg", "Lorg/apache/openejb/quartz/utils/PropertiesParser;");
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.scheduler.jmx.objectName");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getStringProperty", "(Ljava/lang/String;)Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ASTORE, 29);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "cfg", "Lorg/apache/openejb/quartz/utils/PropertiesParser;");
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.scheduler.jmx.proxy");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getBooleanProperty", "(Ljava/lang/String;)Z", false);
methodVisitor.visitVarInsn(ISTORE, 30);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "cfg", "Lorg/apache/openejb/quartz/utils/PropertiesParser;");
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.scheduler.jmx.proxy.class");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getStringProperty", "(Ljava/lang/String;)Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ASTORE, 31);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "cfg", "Lorg/apache/openejb/quartz/utils/PropertiesParser;");
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.scheduler.rmi.export");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getBooleanProperty", "(Ljava/lang/String;Z)Z", false);
methodVisitor.visitVarInsn(ISTORE, 32);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "cfg", "Lorg/apache/openejb/quartz/utils/PropertiesParser;");
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.scheduler.rmi.proxy");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getBooleanProperty", "(Ljava/lang/String;Z)Z", false);
methodVisitor.visitVarInsn(ISTORE, 33);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "cfg", "Lorg/apache/openejb/quartz/utils/PropertiesParser;");
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.scheduler.rmi.registryHost");
methodVisitor.visitLdcInsn("localhost");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getStringProperty", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ASTORE, 34);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "cfg", "Lorg/apache/openejb/quartz/utils/PropertiesParser;");
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.scheduler.rmi.registryPort");
methodVisitor.visitIntInsn(SIPUSH, 1099);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getIntProperty", "(Ljava/lang/String;I)I", false);
methodVisitor.visitVarInsn(ISTORE, 35);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "cfg", "Lorg/apache/openejb/quartz/utils/PropertiesParser;");
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.scheduler.rmi.serverPort");
methodVisitor.visitInsn(ICONST_M1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getIntProperty", "(Ljava/lang/String;I)I", false);
methodVisitor.visitVarInsn(ISTORE, 36);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "cfg", "Lorg/apache/openejb/quartz/utils/PropertiesParser;");
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.scheduler.rmi.createRegistry");
methodVisitor.visitLdcInsn("never");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getStringProperty", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ASTORE, 37);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "cfg", "Lorg/apache/openejb/quartz/utils/PropertiesParser;");
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.scheduler.rmi.bindName");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getStringProperty", "(Ljava/lang/String;)Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ASTORE, 38);
methodVisitor.visitVarInsn(ILOAD, 30);
Label label93 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label93);
methodVisitor.visitVarInsn(ILOAD, 33);
methodVisitor.visitJumpInsn(IFEQ, label93);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/quartz/SchedulerConfigException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("Cannot proxy both RMI and JMX.");
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/SchedulerConfigException", "<init>", "(Ljava/lang/String;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label93);
methodVisitor.visitFrame(Opcodes.F_FULL, 36, new Object[] {"org/apache/openejb/quartz/impl/StdSchedulerFactory", "org/apache/openejb/quartz/spi/JobStore", "org/apache/openejb/quartz/spi/ThreadPool", "org/apache/openejb/quartz/core/QuartzScheduler", "org/apache/openejb/quartz/utils/DBConnectionManager", "java/lang/String", "java/util/Properties", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.LONG, "org/apache/openejb/quartz/impl/SchedulerRepository", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", "java/lang/String"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "cfg", "Lorg/apache/openejb/quartz/utils/PropertiesParser;");
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.managementRESTService.enabled");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getBooleanProperty", "(Ljava/lang/String;Z)Z", false);
methodVisitor.visitVarInsn(ISTORE, 39);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "cfg", "Lorg/apache/openejb/quartz/utils/PropertiesParser;");
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.managementRESTService.bind");
methodVisitor.visitLdcInsn("0.0.0.0:9889");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getStringProperty", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ASTORE, 40);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "cfg", "Lorg/apache/openejb/quartz/utils/PropertiesParser;");
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.context.key");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getPropertyGroup", "(Ljava/lang/String;Z)Ljava/util/Properties;", false);
methodVisitor.visitVarInsn(ASTORE, 41);
methodVisitor.visitVarInsn(ILOAD, 33);
Label label94 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label94);
methodVisitor.visitVarInsn(ILOAD, 9);
Label label95 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label95);
methodVisitor.visitLdcInsn("NON_CLUSTERED");
methodVisitor.visitVarInsn(ASTORE, 17);
methodVisitor.visitLabel(label95);
methodVisitor.visitFrame(Opcodes.F_APPEND,3, new Object[] {Opcodes.INTEGER, "java/lang/String", "java/util/Properties"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 38);
Label label96 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label96);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitVarInsn(ALOAD, 17);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzSchedulerResources", "getUniqueIdentifier", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", false);
Label label97 = new Label();
methodVisitor.visitJumpInsn(GOTO, label97);
methodVisitor.visitLabel(label96);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 38);
methodVisitor.visitLabel(label97);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/String"});
methodVisitor.visitVarInsn(ASTORE, 42);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/quartz/impl/RemoteScheduler");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 42);
methodVisitor.visitVarInsn(ALOAD, 34);
methodVisitor.visitVarInsn(ILOAD, 35);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/impl/RemoteScheduler", "<init>", "(Ljava/lang/String;Ljava/lang/String;I)V", false);
methodVisitor.visitVarInsn(ASTORE, 43);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitVarInsn(ALOAD, 43);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/impl/SchedulerRepository", "bind", "(Lorg/apache/openejb/quartz/Scheduler;)V", false);
methodVisitor.visitVarInsn(ALOAD, 43);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label94);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ASTORE, 42);
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "loadClass", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "newInstance", "()Ljava/lang/Object;", false);
methodVisitor.visitTypeInsn(CHECKCAST, "org/apache/openejb/quartz/spi/ClassLoadHelper");
methodVisitor.visitVarInsn(ASTORE, 42);
methodVisitor.visitLabel(label1);
Label label98 = new Label();
methodVisitor.visitJumpInsn(GOTO, label98);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_FULL, 40, new Object[] {"org/apache/openejb/quartz/impl/StdSchedulerFactory", "org/apache/openejb/quartz/spi/JobStore", "org/apache/openejb/quartz/spi/ThreadPool", "org/apache/openejb/quartz/core/QuartzScheduler", "org/apache/openejb/quartz/utils/DBConnectionManager", "java/lang/String", "java/util/Properties", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.LONG, "org/apache/openejb/quartz/impl/SchedulerRepository", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", "java/lang/String", Opcodes.INTEGER, "java/lang/String", "java/util/Properties", "org/apache/openejb/quartz/spi/ClassLoadHelper"}, 1, new Object[] {"java/lang/Exception"});
methodVisitor.visitVarInsn(ASTORE, 43);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/quartz/SchedulerConfigException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitLdcInsn("Unable to instantiate class load helper class: ");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ALOAD, 43);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Exception", "getMessage", "()Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ALOAD, 43);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/SchedulerConfigException", "<init>", "(Ljava/lang/String;Ljava/lang/Throwable;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label98);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 42);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/openejb/quartz/spi/ClassLoadHelper", "initialize", "()V", true);
methodVisitor.visitVarInsn(ILOAD, 30);
Label label99 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label99);
methodVisitor.visitVarInsn(ILOAD, 9);
Label label100 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label100);
methodVisitor.visitLdcInsn("NON_CLUSTERED");
methodVisitor.visitVarInsn(ASTORE, 17);
methodVisitor.visitLabel(label100);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 31);
Label label101 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label101);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/quartz/SchedulerConfigException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("No JMX Proxy Scheduler class provided");
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/SchedulerConfigException", "<init>", "(Ljava/lang/String;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label101);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ASTORE, 43);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ALOAD, 42);
methodVisitor.visitVarInsn(ALOAD, 31);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/openejb/quartz/spi/ClassLoadHelper", "loadClass", "(Ljava/lang/String;)Ljava/lang/Class;", true);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "newInstance", "()Ljava/lang/Object;", false);
methodVisitor.visitTypeInsn(CHECKCAST, "org/apache/openejb/quartz/impl/RemoteMBeanScheduler");
methodVisitor.visitVarInsn(ASTORE, 43);
methodVisitor.visitLabel(label4);
Label label102 = new Label();
methodVisitor.visitJumpInsn(GOTO, label102);
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_FULL, 41, new Object[] {"org/apache/openejb/quartz/impl/StdSchedulerFactory", "org/apache/openejb/quartz/spi/JobStore", "org/apache/openejb/quartz/spi/ThreadPool", "org/apache/openejb/quartz/core/QuartzScheduler", "org/apache/openejb/quartz/utils/DBConnectionManager", "java/lang/String", "java/util/Properties", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.LONG, "org/apache/openejb/quartz/impl/SchedulerRepository", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", "java/lang/String", Opcodes.INTEGER, "java/lang/String", "java/util/Properties", "org/apache/openejb/quartz/spi/ClassLoadHelper", "org/apache/openejb/quartz/impl/RemoteMBeanScheduler"}, 1, new Object[] {"java/lang/Exception"});
methodVisitor.visitVarInsn(ASTORE, 44);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/quartz/SchedulerConfigException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("Unable to instantiate RemoteMBeanScheduler class.");
methodVisitor.visitVarInsn(ALOAD, 44);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/SchedulerConfigException", "<init>", "(Ljava/lang/String;Ljava/lang/Throwable;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label102);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 29);
Label label103 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label103);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitVarInsn(ALOAD, 17);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzSchedulerResources", "generateJMXObjectName", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ASTORE, 29);
methodVisitor.visitLabel(label103);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 43);
methodVisitor.visitVarInsn(ALOAD, 29);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/impl/RemoteMBeanScheduler", "setSchedulerObjectName", "(Ljava/lang/String;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "cfg", "Lorg/apache/openejb/quartz/utils/PropertiesParser;");
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.scheduler.jmx.proxy");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getPropertyGroup", "(Ljava/lang/String;Z)Ljava/util/Properties;", false);
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitLabel(label6);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 43);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "setBeanProps", "(Ljava/lang/Object;Ljava/util/Properties;)V", false);
methodVisitor.visitLabel(label7);
Label label104 = new Label();
methodVisitor.visitJumpInsn(GOTO, label104);
methodVisitor.visitLabel(label8);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/Exception"});
methodVisitor.visitVarInsn(ASTORE, 44);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/quartz/SchedulerException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitLdcInsn("RemoteMBeanScheduler class '");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ALOAD, 31);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitLdcInsn("' props could not be configured.");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ALOAD, 44);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/SchedulerException", "<init>", "(Ljava/lang/String;Ljava/lang/Throwable;)V", false);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label104);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 43);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/impl/RemoteMBeanScheduler", "initialize", "()V", false);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitVarInsn(ALOAD, 43);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/impl/SchedulerRepository", "bind", "(Lorg/apache/openejb/quartz/Scheduler;)V", false);
methodVisitor.visitVarInsn(ALOAD, 43);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label99);
methodVisitor.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ASTORE, 43);
methodVisitor.visitVarInsn(ALOAD, 19);
Label label105 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label105);
methodVisitor.visitLabel(label9);
methodVisitor.visitVarInsn(ALOAD, 42);
methodVisitor.visitVarInsn(ALOAD, 19);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/openejb/quartz/spi/ClassLoadHelper", "loadClass", "(Ljava/lang/String;)Ljava/lang/Class;", true);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "newInstance", "()Ljava/lang/Object;", false);
methodVisitor.visitTypeInsn(CHECKCAST, "org/apache/openejb/quartz/spi/JobFactory");
methodVisitor.visitVarInsn(ASTORE, 43);
methodVisitor.visitLabel(label10);
Label label106 = new Label();
methodVisitor.visitJumpInsn(GOTO, label106);
methodVisitor.visitLabel(label11);
methodVisitor.visitFrame(Opcodes.F_FULL, 41, new Object[] {"org/apache/openejb/quartz/impl/StdSchedulerFactory", "org/apache/openejb/quartz/spi/JobStore", "org/apache/openejb/quartz/spi/ThreadPool", "org/apache/openejb/quartz/core/QuartzScheduler", "org/apache/openejb/quartz/utils/DBConnectionManager", "java/lang/String", "java/util/Properties", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.LONG, "org/apache/openejb/quartz/impl/SchedulerRepository", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", "java/lang/String", Opcodes.INTEGER, "java/lang/String", "java/util/Properties", "org/apache/openejb/quartz/spi/ClassLoadHelper", "org/apache/openejb/quartz/spi/JobFactory"}, 1, new Object[] {"java/lang/Exception"});
methodVisitor.visitVarInsn(ASTORE, 44);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/quartz/SchedulerConfigException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitLdcInsn("Unable to instantiate JobFactory class: ");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ALOAD, 44);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Exception", "getMessage", "()Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ALOAD, 44);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/SchedulerConfigException", "<init>", "(Ljava/lang/String;Ljava/lang/Throwable;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label106);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "cfg", "Lorg/apache/openejb/quartz/utils/PropertiesParser;");
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.scheduler.jobFactory");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getPropertyGroup", "(Ljava/lang/String;Z)Ljava/util/Properties;", false);
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitLabel(label12);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 43);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "setBeanProps", "(Ljava/lang/Object;Ljava/util/Properties;)V", false);
methodVisitor.visitLabel(label13);
methodVisitor.visitJumpInsn(GOTO, label105);
methodVisitor.visitLabel(label14);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/Exception"});
methodVisitor.visitVarInsn(ASTORE, 44);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/quartz/SchedulerException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitLdcInsn("JobFactory class '");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ALOAD, 19);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitLdcInsn("' props could not be configured.");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ALOAD, 44);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/SchedulerException", "<init>", "(Ljava/lang/String;Ljava/lang/Throwable;)V", false);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label105);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ASTORE, 44);
methodVisitor.visitVarInsn(ALOAD, 5);
Label label107 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label107);
methodVisitor.visitLabel(label15);
methodVisitor.visitVarInsn(ALOAD, 42);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/openejb/quartz/spi/ClassLoadHelper", "loadClass", "(Ljava/lang/String;)Ljava/lang/Class;", true);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "newInstance", "()Ljava/lang/Object;", false);
methodVisitor.visitTypeInsn(CHECKCAST, "org/apache/openejb/quartz/spi/InstanceIdGenerator");
methodVisitor.visitVarInsn(ASTORE, 44);
methodVisitor.visitLabel(label16);
Label label108 = new Label();
methodVisitor.visitJumpInsn(GOTO, label108);
methodVisitor.visitLabel(label17);
methodVisitor.visitFrame(Opcodes.F_FULL, 42, new Object[] {"org/apache/openejb/quartz/impl/StdSchedulerFactory", "org/apache/openejb/quartz/spi/JobStore", "org/apache/openejb/quartz/spi/ThreadPool", "org/apache/openejb/quartz/core/QuartzScheduler", "org/apache/openejb/quartz/utils/DBConnectionManager", "java/lang/String", "java/util/Properties", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.LONG, "org/apache/openejb/quartz/impl/SchedulerRepository", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", "java/lang/String", Opcodes.INTEGER, "java/lang/String", "java/util/Properties", "org/apache/openejb/quartz/spi/ClassLoadHelper", "org/apache/openejb/quartz/spi/JobFactory", "org/apache/openejb/quartz/spi/InstanceIdGenerator"}, 1, new Object[] {"java/lang/Exception"});
methodVisitor.visitVarInsn(ASTORE, 45);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/quartz/SchedulerConfigException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitLdcInsn("Unable to instantiate InstanceIdGenerator class: ");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ALOAD, 45);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Exception", "getMessage", "()Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ALOAD, 45);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/SchedulerConfigException", "<init>", "(Ljava/lang/String;Ljava/lang/Throwable;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label108);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "cfg", "Lorg/apache/openejb/quartz/utils/PropertiesParser;");
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.scheduler.instanceIdGenerator");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getPropertyGroup", "(Ljava/lang/String;Z)Ljava/util/Properties;", false);
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitLabel(label18);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 44);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "setBeanProps", "(Ljava/lang/Object;Ljava/util/Properties;)V", false);
methodVisitor.visitLabel(label19);
methodVisitor.visitJumpInsn(GOTO, label107);
methodVisitor.visitLabel(label20);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/Exception"});
methodVisitor.visitVarInsn(ASTORE, 45);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/quartz/SchedulerException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitLdcInsn("InstanceIdGenerator class '");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitLdcInsn("' props could not be configured.");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ALOAD, 45);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/SchedulerException", "<init>", "(Ljava/lang/String;Ljava/lang/Throwable;)V", false);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label107);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "cfg", "Lorg/apache/openejb/quartz/utils/PropertiesParser;");
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.threadPool.class");
methodVisitor.visitLdcInsn(Type.getType("Lorg/apache/openejb/quartz/simpl/SimpleThreadPool;"));
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getName", "()Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getStringProperty", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ASTORE, 45);
methodVisitor.visitVarInsn(ALOAD, 45);
methodVisitor.visitJumpInsn(IFNONNULL, label21);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/quartz/SchedulerException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("ThreadPool class not specified. ");
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/SchedulerException", "<init>", "(Ljava/lang/String;)V", false);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label21);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"java/lang/String"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 42);
methodVisitor.visitVarInsn(ALOAD, 45);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/openejb/quartz/spi/ClassLoadHelper", "loadClass", "(Ljava/lang/String;)Ljava/lang/Class;", true);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "newInstance", "()Ljava/lang/Object;", false);
methodVisitor.visitTypeInsn(CHECKCAST, "org/apache/openejb/quartz/spi/ThreadPool");
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitLabel(label22);
Label label109 = new Label();
methodVisitor.visitJumpInsn(GOTO, label109);
methodVisitor.visitLabel(label23);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/Exception"});
methodVisitor.visitVarInsn(ASTORE, 46);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/quartz/SchedulerException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitLdcInsn("ThreadPool class '");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ALOAD, 45);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitLdcInsn("' could not be instantiated.");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ALOAD, 46);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/SchedulerException", "<init>", "(Ljava/lang/String;Ljava/lang/Throwable;)V", false);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label109);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "cfg", "Lorg/apache/openejb/quartz/utils/PropertiesParser;");
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.threadPool");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getPropertyGroup", "(Ljava/lang/String;Z)Ljava/util/Properties;", false);
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitLabel(label24);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "setBeanProps", "(Ljava/lang/Object;Ljava/util/Properties;)V", false);
methodVisitor.visitLabel(label25);
Label label110 = new Label();
methodVisitor.visitJumpInsn(GOTO, label110);
methodVisitor.visitLabel(label26);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/Exception"});
methodVisitor.visitVarInsn(ASTORE, 46);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/quartz/SchedulerException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitLdcInsn("ThreadPool class '");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ALOAD, 45);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitLdcInsn("' props could not be configured.");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ALOAD, 46);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/SchedulerException", "<init>", "(Ljava/lang/String;Ljava/lang/Throwable;)V", false);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label110);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "cfg", "Lorg/apache/openejb/quartz/utils/PropertiesParser;");
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.jobStore.class");
methodVisitor.visitLdcInsn(Type.getType("Lorg/apache/openejb/quartz/simpl/RAMJobStore;"));
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getName", "()Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getStringProperty", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ASTORE, 46);
methodVisitor.visitVarInsn(ALOAD, 46);
methodVisitor.visitJumpInsn(IFNONNULL, label27);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/quartz/SchedulerException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("JobStore class not specified. ");
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/SchedulerException", "<init>", "(Ljava/lang/String;)V", false);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label27);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"java/lang/String"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 42);
methodVisitor.visitVarInsn(ALOAD, 46);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/openejb/quartz/spi/ClassLoadHelper", "loadClass", "(Ljava/lang/String;)Ljava/lang/Class;", true);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "newInstance", "()Ljava/lang/Object;", false);
methodVisitor.visitTypeInsn(CHECKCAST, "org/apache/openejb/quartz/spi/JobStore");
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitLabel(label28);
Label label111 = new Label();
methodVisitor.visitJumpInsn(GOTO, label111);
methodVisitor.visitLabel(label29);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/Exception"});
methodVisitor.visitVarInsn(ASTORE, 47);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/quartz/SchedulerException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitLdcInsn("JobStore class '");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ALOAD, 46);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitLdcInsn("' could not be instantiated.");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ALOAD, 47);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/SchedulerException", "<init>", "(Ljava/lang/String;Ljava/lang/Throwable;)V", false);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label111);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitVarInsn(ALOAD, 17);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/impl/SchedulerDetailsSetter", "setDetails", "(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "cfg", "Lorg/apache/openejb/quartz/utils/PropertiesParser;");
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.jobStore");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/String");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.jobStore.lockHandler");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getPropertyGroup", "(Ljava/lang/String;Z[Ljava/lang/String;)Ljava/util/Properties;", false);
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitLabel(label30);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "setBeanProps", "(Ljava/lang/Object;Ljava/util/Properties;)V", false);
methodVisitor.visitLabel(label31);
Label label112 = new Label();
methodVisitor.visitJumpInsn(GOTO, label112);
methodVisitor.visitLabel(label32);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/Exception"});
methodVisitor.visitVarInsn(ASTORE, 47);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/quartz/SchedulerException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitLdcInsn("JobStore class '");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ALOAD, 46);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitLdcInsn("' props could not be configured.");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ALOAD, 47);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/SchedulerException", "<init>", "(Ljava/lang/String;Ljava/lang/Throwable;)V", false);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label112);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitTypeInsn(INSTANCEOF, "org/apache/openejb/quartz/impl/jdbcjobstore/JobStoreSupport");
Label label113 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label113);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "cfg", "Lorg/apache/openejb/quartz/utils/PropertiesParser;");
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.jobStore.lockHandler.class");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getStringProperty", "(Ljava/lang/String;)Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ASTORE, 47);
methodVisitor.visitVarInsn(ALOAD, 47);
methodVisitor.visitJumpInsn(IFNULL, label113);
methodVisitor.visitLabel(label36);
methodVisitor.visitVarInsn(ALOAD, 42);
methodVisitor.visitVarInsn(ALOAD, 47);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/openejb/quartz/spi/ClassLoadHelper", "loadClass", "(Ljava/lang/String;)Ljava/lang/Class;", true);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "newInstance", "()Ljava/lang/Object;", false);
methodVisitor.visitTypeInsn(CHECKCAST, "org/apache/openejb/quartz/impl/jdbcjobstore/Semaphore");
methodVisitor.visitVarInsn(ASTORE, 48);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "cfg", "Lorg/apache/openejb/quartz/utils/PropertiesParser;");
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.jobStore.lockHandler");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getPropertyGroup", "(Ljava/lang/String;Z)Ljava/util/Properties;", false);
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 48);
methodVisitor.visitTypeInsn(INSTANCEOF, "org/apache/openejb/quartz/impl/jdbcjobstore/TablePrefixAware");
methodVisitor.visitJumpInsn(IFEQ, label33);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitLdcInsn("tablePrefix");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitTypeInsn(CHECKCAST, "org/apache/openejb/quartz/impl/jdbcjobstore/JobStoreSupport");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/impl/jdbcjobstore/JobStoreSupport", "getTablePrefix", "()Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/Properties", "setProperty", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitLdcInsn("schedName");
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/Properties", "setProperty", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitLabel(label33);
methodVisitor.visitFrame(Opcodes.F_APPEND,2, new Object[] {"java/lang/String", "org/apache/openejb/quartz/impl/jdbcjobstore/Semaphore"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 48);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "setBeanProps", "(Ljava/lang/Object;Ljava/util/Properties;)V", false);
methodVisitor.visitLabel(label34);
Label label114 = new Label();
methodVisitor.visitJumpInsn(GOTO, label114);
methodVisitor.visitLabel(label35);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/Exception"});
methodVisitor.visitVarInsn(ASTORE, 49);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/quartz/SchedulerException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitLdcInsn("JobStore LockHandler class '");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ALOAD, 47);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitLdcInsn("' props could not be configured.");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ALOAD, 49);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/SchedulerException", "<init>", "(Ljava/lang/String;Ljava/lang/Throwable;)V", false);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label114);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitTypeInsn(CHECKCAST, "org/apache/openejb/quartz/impl/jdbcjobstore/JobStoreSupport");
methodVisitor.visitVarInsn(ALOAD, 48);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/impl/jdbcjobstore/JobStoreSupport", "setLockHandler", "(Lorg/apache/openejb/quartz/impl/jdbcjobstore/Semaphore;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "getLog", "()Lorg/slf4j/Logger;", false);
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitLdcInsn("Using custom data access locking (synchronization): ");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ALOAD, 47);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/slf4j/Logger", "info", "(Ljava/lang/String;)V", true);
methodVisitor.visitLabel(label37);
methodVisitor.visitJumpInsn(GOTO, label113);
methodVisitor.visitLabel(label38);
methodVisitor.visitFrame(Opcodes.F_FULL, 45, new Object[] {"org/apache/openejb/quartz/impl/StdSchedulerFactory", "org/apache/openejb/quartz/spi/JobStore", "org/apache/openejb/quartz/spi/ThreadPool", "org/apache/openejb/quartz/core/QuartzScheduler", "org/apache/openejb/quartz/utils/DBConnectionManager", "java/lang/String", "java/util/Properties", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.LONG, "org/apache/openejb/quartz/impl/SchedulerRepository", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", "java/lang/String", Opcodes.INTEGER, "java/lang/String", "java/util/Properties", "org/apache/openejb/quartz/spi/ClassLoadHelper", "org/apache/openejb/quartz/spi/JobFactory", "org/apache/openejb/quartz/spi/InstanceIdGenerator", "java/lang/String", "java/lang/String", "java/lang/String"}, 1, new Object[] {"java/lang/Exception"});
methodVisitor.visitVarInsn(ASTORE, 48);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/quartz/SchedulerException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitLdcInsn("JobStore LockHandler class '");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ALOAD, 47);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitLdcInsn("' could not be instantiated.");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ALOAD, 48);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/SchedulerException", "<init>", "(Ljava/lang/String;Ljava/lang/Throwable;)V", false);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label113);
methodVisitor.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "cfg", "Lorg/apache/openejb/quartz/utils/PropertiesParser;");
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.dataSource");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getPropertyGroups", "(Ljava/lang/String;)[Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ASTORE, 47);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 48);
Label label115 = new Label();
methodVisitor.visitLabel(label115);
methodVisitor.visitFrame(Opcodes.F_APPEND,2, new Object[] {"[Ljava/lang/String;", Opcodes.INTEGER}, 0, null);
methodVisitor.visitVarInsn(ILOAD, 48);
methodVisitor.visitVarInsn(ALOAD, 47);
methodVisitor.visitInsn(ARRAYLENGTH);
Label label116 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPGE, label116);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/quartz/utils/PropertiesParser");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "cfg", "Lorg/apache/openejb/quartz/utils/PropertiesParser;");
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.dataSource.");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ALOAD, 47);
methodVisitor.visitVarInsn(ILOAD, 48);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getPropertyGroup", "(Ljava/lang/String;Z)Ljava/util/Properties;", false);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/utils/PropertiesParser", "<init>", "(Ljava/util/Properties;)V", false);
methodVisitor.visitVarInsn(ASTORE, 49);
methodVisitor.visitVarInsn(ALOAD, 49);
methodVisitor.visitLdcInsn("connectionProvider.class");
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getStringProperty", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ASTORE, 50);
methodVisitor.visitVarInsn(ALOAD, 50);
Label label117 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label117);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ASTORE, 51);
methodVisitor.visitLabel(label39);
methodVisitor.visitVarInsn(ALOAD, 42);
methodVisitor.visitVarInsn(ALOAD, 50);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/openejb/quartz/spi/ClassLoadHelper", "loadClass", "(Ljava/lang/String;)Ljava/lang/Class;", true);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "newInstance", "()Ljava/lang/Object;", false);
methodVisitor.visitTypeInsn(CHECKCAST, "org/apache/openejb/quartz/utils/ConnectionProvider");
methodVisitor.visitVarInsn(ASTORE, 51);
methodVisitor.visitLabel(label40);
methodVisitor.visitJumpInsn(GOTO, label42);
methodVisitor.visitLabel(label41);
methodVisitor.visitFrame(Opcodes.F_FULL, 49, new Object[] {"org/apache/openejb/quartz/impl/StdSchedulerFactory", "org/apache/openejb/quartz/spi/JobStore", "org/apache/openejb/quartz/spi/ThreadPool", "org/apache/openejb/quartz/core/QuartzScheduler", "org/apache/openejb/quartz/utils/DBConnectionManager", "java/lang/String", "java/util/Properties", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.LONG, "org/apache/openejb/quartz/impl/SchedulerRepository", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", "java/lang/String", Opcodes.INTEGER, "java/lang/String", "java/util/Properties", "org/apache/openejb/quartz/spi/ClassLoadHelper", "org/apache/openejb/quartz/spi/JobFactory", "org/apache/openejb/quartz/spi/InstanceIdGenerator", "java/lang/String", "java/lang/String", "[Ljava/lang/String;", Opcodes.INTEGER, "org/apache/openejb/quartz/utils/PropertiesParser", "java/lang/String", "org/apache/openejb/quartz/utils/ConnectionProvider"}, 1, new Object[] {"java/lang/Exception"});
methodVisitor.visitVarInsn(ASTORE, 52);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/quartz/SchedulerException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitLdcInsn("ConnectionProvider class '");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ALOAD, 50);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitLdcInsn("' could not be instantiated.");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ALOAD, 52);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/SchedulerException", "<init>", "(Ljava/lang/String;Ljava/lang/Throwable;)V", false);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label42);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 49);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getUnderlyingProperties", "()Ljava/util/Properties;", false);
methodVisitor.visitLdcInsn("connectionProvider.class");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/Properties", "remove", "(Ljava/lang/Object;)Ljava/lang/Object;", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 51);
methodVisitor.visitVarInsn(ALOAD, 49);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getUnderlyingProperties", "()Ljava/util/Properties;", false);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "setBeanProps", "(Ljava/lang/Object;Ljava/util/Properties;)V", false);
methodVisitor.visitVarInsn(ALOAD, 51);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/openejb/quartz/utils/ConnectionProvider", "initialize", "()V", true);
methodVisitor.visitLabel(label43);
Label label118 = new Label();
methodVisitor.visitJumpInsn(GOTO, label118);
methodVisitor.visitLabel(label44);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/Exception"});
methodVisitor.visitVarInsn(ASTORE, 52);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/quartz/SchedulerException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitLdcInsn("ConnectionProvider class '");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ALOAD, 50);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitLdcInsn("' props could not be configured.");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ALOAD, 52);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/SchedulerException", "<init>", "(Ljava/lang/String;Ljava/lang/Throwable;)V", false);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label118);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/utils/DBConnectionManager", "getInstance", "()Lorg/apache/openejb/quartz/utils/DBConnectionManager;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitVarInsn(ALOAD, 47);
methodVisitor.visitVarInsn(ILOAD, 48);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ALOAD, 51);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/DBConnectionManager", "addConnectionProvider", "(Ljava/lang/String;Lorg/apache/openejb/quartz/utils/ConnectionProvider;)V", false);
Label label119 = new Label();
methodVisitor.visitJumpInsn(GOTO, label119);
methodVisitor.visitLabel(label117);
methodVisitor.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 49);
methodVisitor.visitLdcInsn("jndiURL");
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getStringProperty", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ASTORE, 51);
methodVisitor.visitVarInsn(ALOAD, 51);
Label label120 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label120);
methodVisitor.visitVarInsn(ALOAD, 49);
methodVisitor.visitLdcInsn("jndiAlwaysLookup");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getBooleanProperty", "(Ljava/lang/String;)Z", false);
methodVisitor.visitVarInsn(ISTORE, 52);
methodVisitor.visitVarInsn(ALOAD, 49);
methodVisitor.visitLdcInsn("java.naming.factory.initial");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getStringProperty", "(Ljava/lang/String;)Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ASTORE, 53);
methodVisitor.visitVarInsn(ALOAD, 49);
methodVisitor.visitLdcInsn("java.naming.provider.url");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getStringProperty", "(Ljava/lang/String;)Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ASTORE, 54);
methodVisitor.visitVarInsn(ALOAD, 49);
methodVisitor.visitLdcInsn("java.naming.security.principal");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getStringProperty", "(Ljava/lang/String;)Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ASTORE, 55);
methodVisitor.visitVarInsn(ALOAD, 49);
methodVisitor.visitLdcInsn("java.naming.security.credentials");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getStringProperty", "(Ljava/lang/String;)Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ASTORE, 56);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ASTORE, 57);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ALOAD, 53);
Label label121 = new Label();
methodVisitor.visitJumpInsn(IF_ACMPNE, label121);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitJumpInsn(IF_ACMPNE, label121);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ALOAD, 55);
methodVisitor.visitJumpInsn(IF_ACMPNE, label121);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ALOAD, 56);
Label label122 = new Label();
methodVisitor.visitJumpInsn(IF_ACMPEQ, label122);
methodVisitor.visitLabel(label121);
methodVisitor.visitFrame(Opcodes.F_FULL, 55, new Object[] {"org/apache/openejb/quartz/impl/StdSchedulerFactory", "org/apache/openejb/quartz/spi/JobStore", "org/apache/openejb/quartz/spi/ThreadPool", "org/apache/openejb/quartz/core/QuartzScheduler", "org/apache/openejb/quartz/utils/DBConnectionManager", "java/lang/String", "java/util/Properties", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.LONG, "org/apache/openejb/quartz/impl/SchedulerRepository", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", "java/lang/String", Opcodes.INTEGER, "java/lang/String", "java/util/Properties", "org/apache/openejb/quartz/spi/ClassLoadHelper", "org/apache/openejb/quartz/spi/JobFactory", "org/apache/openejb/quartz/spi/InstanceIdGenerator", "java/lang/String", "java/lang/String", "[Ljava/lang/String;", Opcodes.INTEGER, "org/apache/openejb/quartz/utils/PropertiesParser", "java/lang/String", "java/lang/String", Opcodes.INTEGER, "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", "java/util/Properties"}, 0, new Object[] {});
methodVisitor.visitTypeInsn(NEW, "java/util/Properties");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/util/Properties", "<init>", "()V", false);
methodVisitor.visitVarInsn(ASTORE, 57);
methodVisitor.visitVarInsn(ALOAD, 53);
Label label123 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label123);
methodVisitor.visitVarInsn(ALOAD, 57);
methodVisitor.visitLdcInsn("java.naming.factory.initial");
methodVisitor.visitVarInsn(ALOAD, 53);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/Properties", "put", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitLabel(label123);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 54);
Label label124 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label124);
methodVisitor.visitVarInsn(ALOAD, 57);
methodVisitor.visitLdcInsn("java.naming.provider.url");
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/Properties", "put", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitLabel(label124);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 55);
Label label125 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label125);
methodVisitor.visitVarInsn(ALOAD, 57);
methodVisitor.visitLdcInsn("java.naming.security.principal");
methodVisitor.visitVarInsn(ALOAD, 55);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/Properties", "put", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitLabel(label125);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 56);
methodVisitor.visitJumpInsn(IFNULL, label122);
methodVisitor.visitVarInsn(ALOAD, 57);
methodVisitor.visitLdcInsn("java.naming.security.credentials");
methodVisitor.visitVarInsn(ALOAD, 56);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/Properties", "put", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitLabel(label122);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/quartz/utils/JNDIConnectionProvider");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 51);
methodVisitor.visitVarInsn(ALOAD, 57);
methodVisitor.visitVarInsn(ILOAD, 52);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/utils/JNDIConnectionProvider", "<init>", "(Ljava/lang/String;Ljava/util/Properties;Z)V", false);
methodVisitor.visitVarInsn(ASTORE, 58);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/utils/DBConnectionManager", "getInstance", "()Lorg/apache/openejb/quartz/utils/DBConnectionManager;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitVarInsn(ALOAD, 47);
methodVisitor.visitVarInsn(ILOAD, 48);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ALOAD, 58);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/DBConnectionManager", "addConnectionProvider", "(Ljava/lang/String;Lorg/apache/openejb/quartz/utils/ConnectionProvider;)V", false);
methodVisitor.visitJumpInsn(GOTO, label119);
methodVisitor.visitLabel(label120);
methodVisitor.visitFrame(Opcodes.F_FULL, 49, new Object[] {"org/apache/openejb/quartz/impl/StdSchedulerFactory", "org/apache/openejb/quartz/spi/JobStore", "org/apache/openejb/quartz/spi/ThreadPool", "org/apache/openejb/quartz/core/QuartzScheduler", "org/apache/openejb/quartz/utils/DBConnectionManager", "java/lang/String", "java/util/Properties", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.LONG, "org/apache/openejb/quartz/impl/SchedulerRepository", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", "java/lang/String", Opcodes.INTEGER, "java/lang/String", "java/util/Properties", "org/apache/openejb/quartz/spi/ClassLoadHelper", "org/apache/openejb/quartz/spi/JobFactory", "org/apache/openejb/quartz/spi/InstanceIdGenerator", "java/lang/String", "java/lang/String", "[Ljava/lang/String;", Opcodes.INTEGER, "org/apache/openejb/quartz/utils/PropertiesParser", "java/lang/String", "java/lang/String"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 49);
methodVisitor.visitLdcInsn("driver");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getStringProperty", "(Ljava/lang/String;)Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ASTORE, 52);
methodVisitor.visitVarInsn(ALOAD, 49);
methodVisitor.visitLdcInsn("URL");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getStringProperty", "(Ljava/lang/String;)Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ASTORE, 53);
methodVisitor.visitVarInsn(ALOAD, 52);
Label label126 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label126);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/quartz/SchedulerException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitLdcInsn("Driver not specified for DataSource: ");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ALOAD, 47);
methodVisitor.visitVarInsn(ILOAD, 48);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/SchedulerException", "<init>", "(Ljava/lang/String;)V", false);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label126);
methodVisitor.visitFrame(Opcodes.F_APPEND,2, new Object[] {"java/lang/String", "java/lang/String"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 53);
methodVisitor.visitJumpInsn(IFNONNULL, label45);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/quartz/SchedulerException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitLdcInsn("DB URL not specified for DataSource: ");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ALOAD, 47);
methodVisitor.visitVarInsn(ILOAD, 48);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/SchedulerException", "<init>", "(Ljava/lang/String;)V", false);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label45);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/quartz/utils/PoolingConnectionProvider");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 49);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getUnderlyingProperties", "()Ljava/util/Properties;", false);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/utils/PoolingConnectionProvider", "<init>", "(Ljava/util/Properties;)V", false);
methodVisitor.visitVarInsn(ASTORE, 54);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/utils/DBConnectionManager", "getInstance", "()Lorg/apache/openejb/quartz/utils/DBConnectionManager;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitVarInsn(ALOAD, 47);
methodVisitor.visitVarInsn(ILOAD, 48);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/DBConnectionManager", "addConnectionProvider", "(Ljava/lang/String;Lorg/apache/openejb/quartz/utils/ConnectionProvider;)V", false);
methodVisitor.visitLabel(label46);
methodVisitor.visitJumpInsn(GOTO, label119);
methodVisitor.visitLabel(label47);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/sql/SQLException"});
methodVisitor.visitVarInsn(ASTORE, 54);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/quartz/SchedulerException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitLdcInsn("Could not initialize DataSource: ");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ALOAD, 47);
methodVisitor.visitVarInsn(ILOAD, 48);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/SchedulerException", "<init>", "(Ljava/lang/String;Ljava/lang/Throwable;)V", false);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label119);
methodVisitor.visitFrame(Opcodes.F_FULL, 46, new Object[] {"org/apache/openejb/quartz/impl/StdSchedulerFactory", "org/apache/openejb/quartz/spi/JobStore", "org/apache/openejb/quartz/spi/ThreadPool", "org/apache/openejb/quartz/core/QuartzScheduler", "org/apache/openejb/quartz/utils/DBConnectionManager", "java/lang/String", "java/util/Properties", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.LONG, "org/apache/openejb/quartz/impl/SchedulerRepository", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", "java/lang/String", Opcodes.INTEGER, "java/lang/String", "java/util/Properties", "org/apache/openejb/quartz/spi/ClassLoadHelper", "org/apache/openejb/quartz/spi/JobFactory", "org/apache/openejb/quartz/spi/InstanceIdGenerator", "java/lang/String", "java/lang/String", "[Ljava/lang/String;", Opcodes.INTEGER}, 0, new Object[] {});
methodVisitor.visitIincInsn(48, 1);
methodVisitor.visitJumpInsn(GOTO, label115);
methodVisitor.visitLabel(label116);
methodVisitor.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "cfg", "Lorg/apache/openejb/quartz/utils/PropertiesParser;");
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.plugin");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getPropertyGroups", "(Ljava/lang/String;)[Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ASTORE, 48);
methodVisitor.visitVarInsn(ALOAD, 48);
methodVisitor.visitInsn(ARRAYLENGTH);
methodVisitor.visitTypeInsn(ANEWARRAY, "org/apache/openejb/quartz/spi/SchedulerPlugin");
methodVisitor.visitVarInsn(ASTORE, 49);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 50);
Label label127 = new Label();
methodVisitor.visitLabel(label127);
methodVisitor.visitFrame(Opcodes.F_APPEND,3, new Object[] {"[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/spi/SchedulerPlugin;", Opcodes.INTEGER}, 0, null);
methodVisitor.visitVarInsn(ILOAD, 50);
methodVisitor.visitVarInsn(ALOAD, 48);
methodVisitor.visitInsn(ARRAYLENGTH);
Label label128 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPGE, label128);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "cfg", "Lorg/apache/openejb/quartz/utils/PropertiesParser;");
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.plugin.");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ALOAD, 48);
methodVisitor.visitVarInsn(ILOAD, 50);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getPropertyGroup", "(Ljava/lang/String;Z)Ljava/util/Properties;", false);
methodVisitor.visitVarInsn(ASTORE, 51);
methodVisitor.visitVarInsn(ALOAD, 51);
methodVisitor.visitLdcInsn("class");
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/Properties", "getProperty", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ASTORE, 52);
methodVisitor.visitVarInsn(ALOAD, 52);
Label label129 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label129);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/quartz/SchedulerException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitLdcInsn("SchedulerPlugin class not specified for plugin '");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ALOAD, 48);
methodVisitor.visitVarInsn(ILOAD, 50);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitLdcInsn("'");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/SchedulerException", "<init>", "(Ljava/lang/String;)V", false);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label129);
methodVisitor.visitFrame(Opcodes.F_APPEND,2, new Object[] {"java/util/Properties", "java/lang/String"}, 0, null);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ASTORE, 53);
methodVisitor.visitLabel(label48);
methodVisitor.visitVarInsn(ALOAD, 42);
methodVisitor.visitVarInsn(ALOAD, 52);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/openejb/quartz/spi/ClassLoadHelper", "loadClass", "(Ljava/lang/String;)Ljava/lang/Class;", true);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "newInstance", "()Ljava/lang/Object;", false);
methodVisitor.visitTypeInsn(CHECKCAST, "org/apache/openejb/quartz/spi/SchedulerPlugin");
methodVisitor.visitVarInsn(ASTORE, 53);
methodVisitor.visitLabel(label49);
methodVisitor.visitJumpInsn(GOTO, label51);
methodVisitor.visitLabel(label50);
methodVisitor.visitFrame(Opcodes.F_FULL, 51, new Object[] {"org/apache/openejb/quartz/impl/StdSchedulerFactory", "org/apache/openejb/quartz/spi/JobStore", "org/apache/openejb/quartz/spi/ThreadPool", "org/apache/openejb/quartz/core/QuartzScheduler", "org/apache/openejb/quartz/utils/DBConnectionManager", "java/lang/String", "java/util/Properties", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.LONG, "org/apache/openejb/quartz/impl/SchedulerRepository", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", "java/lang/String", Opcodes.INTEGER, "java/lang/String", "java/util/Properties", "org/apache/openejb/quartz/spi/ClassLoadHelper", "org/apache/openejb/quartz/spi/JobFactory", "org/apache/openejb/quartz/spi/InstanceIdGenerator", "java/lang/String", "java/lang/String", "[Ljava/lang/String;", "[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/spi/SchedulerPlugin;", Opcodes.INTEGER, "java/util/Properties", "java/lang/String", "org/apache/openejb/quartz/spi/SchedulerPlugin"}, 1, new Object[] {"java/lang/Exception"});
methodVisitor.visitVarInsn(ASTORE, 54);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/quartz/SchedulerException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitLdcInsn("SchedulerPlugin class '");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ALOAD, 52);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitLdcInsn("' could not be instantiated.");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/SchedulerException", "<init>", "(Ljava/lang/String;Ljava/lang/Throwable;)V", false);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label51);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 53);
methodVisitor.visitVarInsn(ALOAD, 51);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "setBeanProps", "(Ljava/lang/Object;Ljava/util/Properties;)V", false);
methodVisitor.visitLabel(label52);
Label label130 = new Label();
methodVisitor.visitJumpInsn(GOTO, label130);
methodVisitor.visitLabel(label53);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/Exception"});
methodVisitor.visitVarInsn(ASTORE, 54);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/quartz/SchedulerException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitLdcInsn("JobStore SchedulerPlugin '");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ALOAD, 52);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitLdcInsn("' props could not be configured.");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/SchedulerException", "<init>", "(Ljava/lang/String;Ljava/lang/Throwable;)V", false);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label130);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 49);
methodVisitor.visitVarInsn(ILOAD, 50);
methodVisitor.visitVarInsn(ALOAD, 53);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitIincInsn(50, 1);
methodVisitor.visitJumpInsn(GOTO, label127);
methodVisitor.visitLabel(label128);
methodVisitor.visitFrame(Opcodes.F_FULL, 47, new Object[] {"org/apache/openejb/quartz/impl/StdSchedulerFactory", "org/apache/openejb/quartz/spi/JobStore", "org/apache/openejb/quartz/spi/ThreadPool", "org/apache/openejb/quartz/core/QuartzScheduler", "org/apache/openejb/quartz/utils/DBConnectionManager", "java/lang/String", "java/util/Properties", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.LONG, "org/apache/openejb/quartz/impl/SchedulerRepository", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", "java/lang/String", Opcodes.INTEGER, "java/lang/String", "java/util/Properties", "org/apache/openejb/quartz/spi/ClassLoadHelper", "org/apache/openejb/quartz/spi/JobFactory", "org/apache/openejb/quartz/spi/InstanceIdGenerator", "java/lang/String", "java/lang/String", "[Ljava/lang/String;", "[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/spi/SchedulerPlugin;"}, 0, new Object[] {});
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Class");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitLdcInsn(Type.getType("Ljava/lang/String;"));
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ASTORE, 50);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "cfg", "Lorg/apache/openejb/quartz/utils/PropertiesParser;");
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.jobListener");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getPropertyGroups", "(Ljava/lang/String;)[Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ASTORE, 51);
methodVisitor.visitVarInsn(ALOAD, 51);
methodVisitor.visitInsn(ARRAYLENGTH);
methodVisitor.visitTypeInsn(ANEWARRAY, "org/apache/openejb/quartz/JobListener");
methodVisitor.visitVarInsn(ASTORE, 52);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 53);
Label label131 = new Label();
methodVisitor.visitLabel(label131);
methodVisitor.visitFrame(Opcodes.F_FULL, 51, new Object[] {"org/apache/openejb/quartz/impl/StdSchedulerFactory", "org/apache/openejb/quartz/spi/JobStore", "org/apache/openejb/quartz/spi/ThreadPool", "org/apache/openejb/quartz/core/QuartzScheduler", "org/apache/openejb/quartz/utils/DBConnectionManager", "java/lang/String", "java/util/Properties", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.LONG, "org/apache/openejb/quartz/impl/SchedulerRepository", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", "java/lang/String", Opcodes.INTEGER, "java/lang/String", "java/util/Properties", "org/apache/openejb/quartz/spi/ClassLoadHelper", "org/apache/openejb/quartz/spi/JobFactory", "org/apache/openejb/quartz/spi/InstanceIdGenerator", "java/lang/String", "java/lang/String", "[Ljava/lang/String;", "[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/spi/SchedulerPlugin;", "[Ljava/lang/Class;", "[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/JobListener;", Opcodes.INTEGER}, 0, new Object[] {});
methodVisitor.visitVarInsn(ILOAD, 53);
methodVisitor.visitVarInsn(ALOAD, 51);
methodVisitor.visitInsn(ARRAYLENGTH);
Label label132 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPGE, label132);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "cfg", "Lorg/apache/openejb/quartz/utils/PropertiesParser;");
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.jobListener.");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ALOAD, 51);
methodVisitor.visitVarInsn(ILOAD, 53);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getPropertyGroup", "(Ljava/lang/String;Z)Ljava/util/Properties;", false);
methodVisitor.visitVarInsn(ASTORE, 54);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitLdcInsn("class");
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/Properties", "getProperty", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ASTORE, 55);
methodVisitor.visitVarInsn(ALOAD, 55);
Label label133 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label133);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/quartz/SchedulerException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitLdcInsn("JobListener class not specified for listener '");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ALOAD, 51);
methodVisitor.visitVarInsn(ILOAD, 53);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitLdcInsn("'");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/SchedulerException", "<init>", "(Ljava/lang/String;)V", false);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label133);
methodVisitor.visitFrame(Opcodes.F_APPEND,2, new Object[] {"java/util/Properties", "java/lang/String"}, 0, null);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ASTORE, 56);
methodVisitor.visitLabel(label54);
methodVisitor.visitVarInsn(ALOAD, 42);
methodVisitor.visitVarInsn(ALOAD, 55);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/openejb/quartz/spi/ClassLoadHelper", "loadClass", "(Ljava/lang/String;)Ljava/lang/Class;", true);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "newInstance", "()Ljava/lang/Object;", false);
methodVisitor.visitTypeInsn(CHECKCAST, "org/apache/openejb/quartz/JobListener");
methodVisitor.visitVarInsn(ASTORE, 56);
methodVisitor.visitLabel(label55);
methodVisitor.visitJumpInsn(GOTO, label60);
methodVisitor.visitLabel(label56);
methodVisitor.visitFrame(Opcodes.F_FULL, 54, new Object[] {"org/apache/openejb/quartz/impl/StdSchedulerFactory", "org/apache/openejb/quartz/spi/JobStore", "org/apache/openejb/quartz/spi/ThreadPool", "org/apache/openejb/quartz/core/QuartzScheduler", "org/apache/openejb/quartz/utils/DBConnectionManager", "java/lang/String", "java/util/Properties", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.LONG, "org/apache/openejb/quartz/impl/SchedulerRepository", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", "java/lang/String", Opcodes.INTEGER, "java/lang/String", "java/util/Properties", "org/apache/openejb/quartz/spi/ClassLoadHelper", "org/apache/openejb/quartz/spi/JobFactory", "org/apache/openejb/quartz/spi/InstanceIdGenerator", "java/lang/String", "java/lang/String", "[Ljava/lang/String;", "[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/spi/SchedulerPlugin;", "[Ljava/lang/Class;", "[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/JobListener;", Opcodes.INTEGER, "java/util/Properties", "java/lang/String", "org/apache/openejb/quartz/JobListener"}, 1, new Object[] {"java/lang/Exception"});
methodVisitor.visitVarInsn(ASTORE, 57);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/quartz/SchedulerException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitLdcInsn("JobListener class '");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ALOAD, 55);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitLdcInsn("' could not be instantiated.");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ALOAD, 57);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/SchedulerException", "<init>", "(Ljava/lang/String;Ljava/lang/Throwable;)V", false);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label60);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ASTORE, 57);
methodVisitor.visitLabel(label57);
methodVisitor.visitVarInsn(ALOAD, 56);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Object", "getClass", "()Ljava/lang/Class;", false);
methodVisitor.visitLdcInsn("setName");
methodVisitor.visitVarInsn(ALOAD, 50);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
methodVisitor.visitVarInsn(ASTORE, 57);
methodVisitor.visitLabel(label58);
Label label134 = new Label();
methodVisitor.visitJumpInsn(GOTO, label134);
methodVisitor.visitLabel(label59);
methodVisitor.visitFrame(Opcodes.F_FULL, 55, new Object[] {"org/apache/openejb/quartz/impl/StdSchedulerFactory", "org/apache/openejb/quartz/spi/JobStore", "org/apache/openejb/quartz/spi/ThreadPool", "org/apache/openejb/quartz/core/QuartzScheduler", "org/apache/openejb/quartz/utils/DBConnectionManager", "java/lang/String", "java/util/Properties", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.LONG, "org/apache/openejb/quartz/impl/SchedulerRepository", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", "java/lang/String", Opcodes.INTEGER, "java/lang/String", "java/util/Properties", "org/apache/openejb/quartz/spi/ClassLoadHelper", "org/apache/openejb/quartz/spi/JobFactory", "org/apache/openejb/quartz/spi/InstanceIdGenerator", "java/lang/String", "java/lang/String", "[Ljava/lang/String;", "[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/spi/SchedulerPlugin;", "[Ljava/lang/Class;", "[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/JobListener;", Opcodes.INTEGER, "java/util/Properties", "java/lang/String", "org/apache/openejb/quartz/JobListener", "java/lang/reflect/Method"}, 1, new Object[] {"java/lang/NoSuchMethodException"});
methodVisitor.visitVarInsn(ASTORE, 58);
methodVisitor.visitLabel(label134);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 57);
Label label135 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label135);
methodVisitor.visitVarInsn(ALOAD, 57);
methodVisitor.visitVarInsn(ALOAD, 56);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Object");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 51);
methodVisitor.visitVarInsn(ILOAD, 53);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/reflect/Method", "invoke", "(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitLabel(label135);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 56);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "setBeanProps", "(Ljava/lang/Object;Ljava/util/Properties;)V", false);
methodVisitor.visitLabel(label61);
Label label136 = new Label();
methodVisitor.visitJumpInsn(GOTO, label136);
methodVisitor.visitLabel(label62);
methodVisitor.visitFrame(Opcodes.F_FULL, 54, new Object[] {"org/apache/openejb/quartz/impl/StdSchedulerFactory", "org/apache/openejb/quartz/spi/JobStore", "org/apache/openejb/quartz/spi/ThreadPool", "org/apache/openejb/quartz/core/QuartzScheduler", "org/apache/openejb/quartz/utils/DBConnectionManager", "java/lang/String", "java/util/Properties", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.LONG, "org/apache/openejb/quartz/impl/SchedulerRepository", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", "java/lang/String", Opcodes.INTEGER, "java/lang/String", "java/util/Properties", "org/apache/openejb/quartz/spi/ClassLoadHelper", "org/apache/openejb/quartz/spi/JobFactory", "org/apache/openejb/quartz/spi/InstanceIdGenerator", "java/lang/String", "java/lang/String", "[Ljava/lang/String;", "[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/spi/SchedulerPlugin;", "[Ljava/lang/Class;", "[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/JobListener;", Opcodes.INTEGER, "java/util/Properties", "java/lang/String", "org/apache/openejb/quartz/JobListener"}, 1, new Object[] {"java/lang/Exception"});
methodVisitor.visitVarInsn(ASTORE, 57);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/quartz/SchedulerException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitLdcInsn("JobListener '");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ALOAD, 55);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitLdcInsn("' props could not be configured.");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ALOAD, 57);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/SchedulerException", "<init>", "(Ljava/lang/String;Ljava/lang/Throwable;)V", false);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label136);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 52);
methodVisitor.visitVarInsn(ILOAD, 53);
methodVisitor.visitVarInsn(ALOAD, 56);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitIincInsn(53, 1);
methodVisitor.visitJumpInsn(GOTO, label131);
methodVisitor.visitLabel(label132);
methodVisitor.visitFrame(Opcodes.F_FULL, 50, new Object[] {"org/apache/openejb/quartz/impl/StdSchedulerFactory", "org/apache/openejb/quartz/spi/JobStore", "org/apache/openejb/quartz/spi/ThreadPool", "org/apache/openejb/quartz/core/QuartzScheduler", "org/apache/openejb/quartz/utils/DBConnectionManager", "java/lang/String", "java/util/Properties", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.LONG, "org/apache/openejb/quartz/impl/SchedulerRepository", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", "java/lang/String", Opcodes.INTEGER, "java/lang/String", "java/util/Properties", "org/apache/openejb/quartz/spi/ClassLoadHelper", "org/apache/openejb/quartz/spi/JobFactory", "org/apache/openejb/quartz/spi/InstanceIdGenerator", "java/lang/String", "java/lang/String", "[Ljava/lang/String;", "[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/spi/SchedulerPlugin;", "[Ljava/lang/Class;", "[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/JobListener;"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "cfg", "Lorg/apache/openejb/quartz/utils/PropertiesParser;");
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.triggerListener");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getPropertyGroups", "(Ljava/lang/String;)[Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ASTORE, 53);
methodVisitor.visitVarInsn(ALOAD, 53);
methodVisitor.visitInsn(ARRAYLENGTH);
methodVisitor.visitTypeInsn(ANEWARRAY, "org/apache/openejb/quartz/TriggerListener");
methodVisitor.visitVarInsn(ASTORE, 54);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 55);
Label label137 = new Label();
methodVisitor.visitLabel(label137);
methodVisitor.visitFrame(Opcodes.F_APPEND,3, new Object[] {"[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/TriggerListener;", Opcodes.INTEGER}, 0, null);
methodVisitor.visitVarInsn(ILOAD, 55);
methodVisitor.visitVarInsn(ALOAD, 53);
methodVisitor.visitInsn(ARRAYLENGTH);
Label label138 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPGE, label138);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "cfg", "Lorg/apache/openejb/quartz/utils/PropertiesParser;");
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.triggerListener.");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ALOAD, 53);
methodVisitor.visitVarInsn(ILOAD, 55);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getPropertyGroup", "(Ljava/lang/String;Z)Ljava/util/Properties;", false);
methodVisitor.visitVarInsn(ASTORE, 56);
methodVisitor.visitVarInsn(ALOAD, 56);
methodVisitor.visitLdcInsn("class");
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/Properties", "getProperty", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ASTORE, 57);
methodVisitor.visitVarInsn(ALOAD, 57);
Label label139 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label139);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/quartz/SchedulerException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitLdcInsn("TriggerListener class not specified for listener '");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ALOAD, 53);
methodVisitor.visitVarInsn(ILOAD, 55);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitLdcInsn("'");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/SchedulerException", "<init>", "(Ljava/lang/String;)V", false);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label139);
methodVisitor.visitFrame(Opcodes.F_APPEND,2, new Object[] {"java/util/Properties", "java/lang/String"}, 0, null);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ASTORE, 58);
methodVisitor.visitLabel(label63);
methodVisitor.visitVarInsn(ALOAD, 42);
methodVisitor.visitVarInsn(ALOAD, 57);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/openejb/quartz/spi/ClassLoadHelper", "loadClass", "(Ljava/lang/String;)Ljava/lang/Class;", true);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "newInstance", "()Ljava/lang/Object;", false);
methodVisitor.visitTypeInsn(CHECKCAST, "org/apache/openejb/quartz/TriggerListener");
methodVisitor.visitVarInsn(ASTORE, 58);
methodVisitor.visitLabel(label64);
methodVisitor.visitJumpInsn(GOTO, label69);
methodVisitor.visitLabel(label65);
methodVisitor.visitFrame(Opcodes.F_FULL, 56, new Object[] {"org/apache/openejb/quartz/impl/StdSchedulerFactory", "org/apache/openejb/quartz/spi/JobStore", "org/apache/openejb/quartz/spi/ThreadPool", "org/apache/openejb/quartz/core/QuartzScheduler", "org/apache/openejb/quartz/utils/DBConnectionManager", "java/lang/String", "java/util/Properties", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.LONG, "org/apache/openejb/quartz/impl/SchedulerRepository", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", "java/lang/String", Opcodes.INTEGER, "java/lang/String", "java/util/Properties", "org/apache/openejb/quartz/spi/ClassLoadHelper", "org/apache/openejb/quartz/spi/JobFactory", "org/apache/openejb/quartz/spi/InstanceIdGenerator", "java/lang/String", "java/lang/String", "[Ljava/lang/String;", "[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/spi/SchedulerPlugin;", "[Ljava/lang/Class;", "[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/JobListener;", "[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/TriggerListener;", Opcodes.INTEGER, "java/util/Properties", "java/lang/String", "org/apache/openejb/quartz/TriggerListener"}, 1, new Object[] {"java/lang/Exception"});
methodVisitor.visitVarInsn(ASTORE, 59);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/quartz/SchedulerException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitLdcInsn("TriggerListener class '");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ALOAD, 57);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitLdcInsn("' could not be instantiated.");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ALOAD, 59);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/SchedulerException", "<init>", "(Ljava/lang/String;Ljava/lang/Throwable;)V", false);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label69);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ASTORE, 59);
methodVisitor.visitLabel(label66);
methodVisitor.visitVarInsn(ALOAD, 58);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Object", "getClass", "()Ljava/lang/Class;", false);
methodVisitor.visitLdcInsn("setName");
methodVisitor.visitVarInsn(ALOAD, 50);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
methodVisitor.visitVarInsn(ASTORE, 59);
methodVisitor.visitLabel(label67);
Label label140 = new Label();
methodVisitor.visitJumpInsn(GOTO, label140);
methodVisitor.visitLabel(label68);
methodVisitor.visitFrame(Opcodes.F_FULL, 57, new Object[] {"org/apache/openejb/quartz/impl/StdSchedulerFactory", "org/apache/openejb/quartz/spi/JobStore", "org/apache/openejb/quartz/spi/ThreadPool", "org/apache/openejb/quartz/core/QuartzScheduler", "org/apache/openejb/quartz/utils/DBConnectionManager", "java/lang/String", "java/util/Properties", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.LONG, "org/apache/openejb/quartz/impl/SchedulerRepository", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", "java/lang/String", Opcodes.INTEGER, "java/lang/String", "java/util/Properties", "org/apache/openejb/quartz/spi/ClassLoadHelper", "org/apache/openejb/quartz/spi/JobFactory", "org/apache/openejb/quartz/spi/InstanceIdGenerator", "java/lang/String", "java/lang/String", "[Ljava/lang/String;", "[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/spi/SchedulerPlugin;", "[Ljava/lang/Class;", "[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/JobListener;", "[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/TriggerListener;", Opcodes.INTEGER, "java/util/Properties", "java/lang/String", "org/apache/openejb/quartz/TriggerListener", "java/lang/reflect/Method"}, 1, new Object[] {"java/lang/NoSuchMethodException"});
methodVisitor.visitVarInsn(ASTORE, 60);
methodVisitor.visitLabel(label140);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 59);
Label label141 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label141);
methodVisitor.visitVarInsn(ALOAD, 59);
methodVisitor.visitVarInsn(ALOAD, 58);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Object");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 53);
methodVisitor.visitVarInsn(ILOAD, 55);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/reflect/Method", "invoke", "(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitLabel(label141);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 58);
methodVisitor.visitVarInsn(ALOAD, 56);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "setBeanProps", "(Ljava/lang/Object;Ljava/util/Properties;)V", false);
methodVisitor.visitLabel(label70);
Label label142 = new Label();
methodVisitor.visitJumpInsn(GOTO, label142);
methodVisitor.visitLabel(label71);
methodVisitor.visitFrame(Opcodes.F_FULL, 56, new Object[] {"org/apache/openejb/quartz/impl/StdSchedulerFactory", "org/apache/openejb/quartz/spi/JobStore", "org/apache/openejb/quartz/spi/ThreadPool", "org/apache/openejb/quartz/core/QuartzScheduler", "org/apache/openejb/quartz/utils/DBConnectionManager", "java/lang/String", "java/util/Properties", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.LONG, "org/apache/openejb/quartz/impl/SchedulerRepository", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", "java/lang/String", Opcodes.INTEGER, "java/lang/String", "java/util/Properties", "org/apache/openejb/quartz/spi/ClassLoadHelper", "org/apache/openejb/quartz/spi/JobFactory", "org/apache/openejb/quartz/spi/InstanceIdGenerator", "java/lang/String", "java/lang/String", "[Ljava/lang/String;", "[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/spi/SchedulerPlugin;", "[Ljava/lang/Class;", "[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/JobListener;", "[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/TriggerListener;", Opcodes.INTEGER, "java/util/Properties", "java/lang/String", "org/apache/openejb/quartz/TriggerListener"}, 1, new Object[] {"java/lang/Exception"});
methodVisitor.visitVarInsn(ASTORE, 59);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/quartz/SchedulerException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitLdcInsn("TriggerListener '");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ALOAD, 57);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitLdcInsn("' props could not be configured.");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ALOAD, 59);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/SchedulerException", "<init>", "(Ljava/lang/String;Ljava/lang/Throwable;)V", false);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label142);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitVarInsn(ILOAD, 55);
methodVisitor.visitVarInsn(ALOAD, 58);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitIincInsn(55, 1);
methodVisitor.visitJumpInsn(GOTO, label137);
methodVisitor.visitLabel(label138);
methodVisitor.visitFrame(Opcodes.F_FULL, 52, new Object[] {"org/apache/openejb/quartz/impl/StdSchedulerFactory", "org/apache/openejb/quartz/spi/JobStore", "org/apache/openejb/quartz/spi/ThreadPool", "org/apache/openejb/quartz/core/QuartzScheduler", "org/apache/openejb/quartz/utils/DBConnectionManager", "java/lang/String", "java/util/Properties", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.LONG, "org/apache/openejb/quartz/impl/SchedulerRepository", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", "java/lang/String", Opcodes.INTEGER, "java/lang/String", "java/util/Properties", "org/apache/openejb/quartz/spi/ClassLoadHelper", "org/apache/openejb/quartz/spi/JobFactory", "org/apache/openejb/quartz/spi/InstanceIdGenerator", "java/lang/String", "java/lang/String", "[Ljava/lang/String;", "[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/spi/SchedulerPlugin;", "[Ljava/lang/Class;", "[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/JobListener;", "[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/TriggerListener;"}, 0, new Object[] {});
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 55);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 56);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "cfg", "Lorg/apache/openejb/quartz/utils/PropertiesParser;");
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.threadExecutor.class");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getStringProperty", "(Ljava/lang/String;)Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ASTORE, 57);
methodVisitor.visitVarInsn(ALOAD, 57);
Label label143 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label143);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "cfg", "Lorg/apache/openejb/quartz/utils/PropertiesParser;");
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.threadExecutor");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getPropertyGroup", "(Ljava/lang/String;Z)Ljava/util/Properties;", false);
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitLabel(label72);
methodVisitor.visitVarInsn(ALOAD, 42);
methodVisitor.visitVarInsn(ALOAD, 57);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/openejb/quartz/spi/ClassLoadHelper", "loadClass", "(Ljava/lang/String;)Ljava/lang/Class;", true);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "newInstance", "()Ljava/lang/Object;", false);
methodVisitor.visitTypeInsn(CHECKCAST, "org/apache/openejb/quartz/spi/ThreadExecutor");
methodVisitor.visitVarInsn(ASTORE, 61);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "log", "Lorg/slf4j/Logger;");
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitLdcInsn("Using custom implementation for ThreadExecutor: ");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ALOAD, 57);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/slf4j/Logger", "info", "(Ljava/lang/String;)V", true);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 61);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "setBeanProps", "(Ljava/lang/Object;Ljava/util/Properties;)V", false);
methodVisitor.visitLabel(label73);
methodVisitor.visitJumpInsn(GOTO, label81);
methodVisitor.visitLabel(label74);
methodVisitor.visitFrame(Opcodes.F_FULL, 55, new Object[] {"org/apache/openejb/quartz/impl/StdSchedulerFactory", "org/apache/openejb/quartz/spi/JobStore", "org/apache/openejb/quartz/spi/ThreadPool", "org/apache/openejb/quartz/core/QuartzScheduler", "org/apache/openejb/quartz/utils/DBConnectionManager", "java/lang/String", "java/util/Properties", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.LONG, "org/apache/openejb/quartz/impl/SchedulerRepository", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", "java/lang/String", Opcodes.INTEGER, "java/lang/String", "java/util/Properties", "org/apache/openejb/quartz/spi/ClassLoadHelper", "org/apache/openejb/quartz/spi/JobFactory", "org/apache/openejb/quartz/spi/InstanceIdGenerator", "java/lang/String", "java/lang/String", "[Ljava/lang/String;", "[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/spi/SchedulerPlugin;", "[Ljava/lang/Class;", "[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/JobListener;", "[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/TriggerListener;", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String"}, 1, new Object[] {"java/lang/Exception"});
methodVisitor.visitVarInsn(ASTORE, 58);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/quartz/SchedulerException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitLdcInsn("ThreadExecutor class '");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ALOAD, 57);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitLdcInsn("' could not be instantiated.");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ALOAD, 58);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/SchedulerException", "<init>", "(Ljava/lang/String;Ljava/lang/Throwable;)V", false);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initException", "Lorg/apache/openejb/quartz/SchedulerException;");
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label143);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "log", "Lorg/slf4j/Logger;");
methodVisitor.visitLdcInsn("Using default implementation for ThreadExecutor");
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/slf4j/Logger", "info", "(Ljava/lang/String;)V", true);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/quartz/impl/DefaultThreadExecutor");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/impl/DefaultThreadExecutor", "<init>", "()V", false);
methodVisitor.visitVarInsn(ASTORE, 61);
methodVisitor.visitLabel(label81);
methodVisitor.visitFrame(Opcodes.F_FULL, 59, new Object[] {"org/apache/openejb/quartz/impl/StdSchedulerFactory", "org/apache/openejb/quartz/spi/JobStore", "org/apache/openejb/quartz/spi/ThreadPool", "org/apache/openejb/quartz/core/QuartzScheduler", "org/apache/openejb/quartz/utils/DBConnectionManager", "java/lang/String", "java/util/Properties", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.LONG, "org/apache/openejb/quartz/impl/SchedulerRepository", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", "java/lang/String", Opcodes.INTEGER, "java/lang/String", "java/util/Properties", "org/apache/openejb/quartz/spi/ClassLoadHelper", "org/apache/openejb/quartz/spi/JobFactory", "org/apache/openejb/quartz/spi/InstanceIdGenerator", "java/lang/String", "java/lang/String", "[Ljava/lang/String;", "[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/spi/SchedulerPlugin;", "[Ljava/lang/Class;", "[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/JobListener;", "[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/TriggerListener;", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/apache/openejb/quartz/spi/ThreadExecutor"}, 0, new Object[] {});
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ASTORE, 58);
methodVisitor.visitVarInsn(ALOAD, 7);
Label label144 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label144);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/ee/jta/UserTransactionHelper", "setUserTxLocation", "(Ljava/lang/String;)V", false);
methodVisitor.visitLabel(label144);
methodVisitor.visitFrame(Opcodes.F_FULL, 59, new Object[] {"org/apache/openejb/quartz/impl/StdSchedulerFactory", "org/apache/openejb/quartz/spi/JobStore", "org/apache/openejb/quartz/spi/ThreadPool", "org/apache/openejb/quartz/core/QuartzScheduler", "org/apache/openejb/quartz/utils/DBConnectionManager", "java/lang/String", "java/util/Properties", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.LONG, "org/apache/openejb/quartz/impl/SchedulerRepository", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", "java/lang/String", Opcodes.INTEGER, "java/lang/String", "java/util/Properties", "org/apache/openejb/quartz/spi/ClassLoadHelper", "org/apache/openejb/quartz/spi/JobFactory", "org/apache/openejb/quartz/spi/InstanceIdGenerator", "java/lang/String", "java/lang/String", "[Ljava/lang/String;", "[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/spi/SchedulerPlugin;", "[Ljava/lang/Class;", "[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/JobListener;", "[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/TriggerListener;", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", "org/apache/openejb/quartz/core/JobRunShellFactory", Opcodes.TOP, Opcodes.TOP, "org/apache/openejb/quartz/spi/ThreadExecutor"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ILOAD, 8);
Label label145 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label145);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/quartz/ee/jta/JTAJobRunShellFactory");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/ee/jta/JTAJobRunShellFactory", "<init>", "()V", false);
methodVisitor.visitVarInsn(ASTORE, 58);
Label label146 = new Label();
methodVisitor.visitJumpInsn(GOTO, label146);
methodVisitor.visitLabel(label145);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/quartz/ee/jta/JTAAnnotationAwareJobRunShellFactory");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/ee/jta/JTAAnnotationAwareJobRunShellFactory", "<init>", "()V", false);
methodVisitor.visitVarInsn(ASTORE, 58);
methodVisitor.visitLabel(label146);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ILOAD, 9);
Label label147 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label147);
methodVisitor.visitLabel(label75);
methodVisitor.visitLdcInsn("NON_CLUSTERED");
methodVisitor.visitVarInsn(ASTORE, 17);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/openejb/quartz/spi/JobStore", "isClustered", "()Z", true);
methodVisitor.visitJumpInsn(IFEQ, label76);
methodVisitor.visitVarInsn(ALOAD, 44);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/openejb/quartz/spi/InstanceIdGenerator", "generateInstanceId", "()Ljava/lang/String;", true);
methodVisitor.visitVarInsn(ASTORE, 17);
methodVisitor.visitLabel(label76);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitJumpInsn(GOTO, label147);
methodVisitor.visitLabel(label77);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/Exception"});
methodVisitor.visitVarInsn(ASTORE, 59);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "getLog", "()Lorg/slf4j/Logger;", false);
methodVisitor.visitLdcInsn("Couldn't generate instance Id!");
methodVisitor.visitVarInsn(ALOAD, 59);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/slf4j/Logger", "error", "(Ljava/lang/String;Ljava/lang/Throwable;)V", true);
methodVisitor.visitTypeInsn(NEW, "java/lang/IllegalStateException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("Cannot run without an instance id.");
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/IllegalStateException", "<init>", "(Ljava/lang/String;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label147);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Object", "getClass", "()Ljava/lang/Class;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getName", "()Ljava/lang/String;", false);
methodVisitor.visitLdcInsn("org.apache.openejb.terracotta.quartz");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "startsWith", "(Ljava/lang/String;)Z", false);
Label label148 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label148);
methodVisitor.visitLabel(label78);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Object", "getClass", "()Ljava/lang/Class;", false);
methodVisitor.visitLdcInsn("getUUID");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Class");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Object");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/reflect/Method", "invoke", "(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;", false);
methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/String");
methodVisitor.visitVarInsn(ASTORE, 59);
methodVisitor.visitVarInsn(ALOAD, 17);
methodVisitor.visitLdcInsn("NON_CLUSTERED");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
Label label149 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label149);
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitLdcInsn("TERRACOTTA_CLUSTERED,node=");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ALOAD, 59);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ASTORE, 17);
methodVisitor.visitVarInsn(ALOAD, 29);
methodVisitor.visitJumpInsn(IFNONNULL, label79);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitVarInsn(ALOAD, 17);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzSchedulerResources", "generateJMXObjectName", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ASTORE, 29);
methodVisitor.visitJumpInsn(GOTO, label79);
methodVisitor.visitLabel(label149);
methodVisitor.visitFrame(Opcodes.F_FULL, 59, new Object[] {"org/apache/openejb/quartz/impl/StdSchedulerFactory", "org/apache/openejb/quartz/spi/JobStore", "org/apache/openejb/quartz/spi/ThreadPool", "org/apache/openejb/quartz/core/QuartzScheduler", "org/apache/openejb/quartz/utils/DBConnectionManager", "java/lang/String", "java/util/Properties", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.LONG, "org/apache/openejb/quartz/impl/SchedulerRepository", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", "java/lang/String", Opcodes.INTEGER, "java/lang/String", "java/util/Properties", "org/apache/openejb/quartz/spi/ClassLoadHelper", "org/apache/openejb/quartz/spi/JobFactory", "org/apache/openejb/quartz/spi/InstanceIdGenerator", "java/lang/String", "java/lang/String", "[Ljava/lang/String;", "[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/spi/SchedulerPlugin;", "[Ljava/lang/Class;", "[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/JobListener;", "[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/TriggerListener;", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", "org/apache/openejb/quartz/core/JobRunShellFactory", "java/lang/String", Opcodes.TOP, "org/apache/openejb/quartz/spi/ThreadExecutor"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 29);
methodVisitor.visitJumpInsn(IFNONNULL, label79);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitVarInsn(ALOAD, 17);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitLdcInsn(",node=");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ALOAD, 59);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzSchedulerResources", "generateJMXObjectName", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ASTORE, 29);
methodVisitor.visitLabel(label79);
methodVisitor.visitFrame(Opcodes.F_FULL, 59, new Object[] {"org/apache/openejb/quartz/impl/StdSchedulerFactory", "org/apache/openejb/quartz/spi/JobStore", "org/apache/openejb/quartz/spi/ThreadPool", "org/apache/openejb/quartz/core/QuartzScheduler", "org/apache/openejb/quartz/utils/DBConnectionManager", "java/lang/String", "java/util/Properties", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.LONG, "org/apache/openejb/quartz/impl/SchedulerRepository", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", "java/lang/String", Opcodes.INTEGER, "java/lang/String", "java/util/Properties", "org/apache/openejb/quartz/spi/ClassLoadHelper", "org/apache/openejb/quartz/spi/JobFactory", "org/apache/openejb/quartz/spi/InstanceIdGenerator", "java/lang/String", "java/lang/String", "[Ljava/lang/String;", "[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/spi/SchedulerPlugin;", "[Ljava/lang/Class;", "[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/JobListener;", "[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/TriggerListener;", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", "org/apache/openejb/quartz/core/JobRunShellFactory", Opcodes.TOP, Opcodes.TOP, "org/apache/openejb/quartz/spi/ThreadExecutor"}, 0, new Object[] {});
Label label150 = new Label();
methodVisitor.visitJumpInsn(GOTO, label150);
methodVisitor.visitLabel(label80);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/Exception"});
methodVisitor.visitVarInsn(ASTORE, 59);
methodVisitor.visitTypeInsn(NEW, "java/lang/RuntimeException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("Problem obtaining node id from TerracottaJobStore.");
methodVisitor.visitVarInsn(ALOAD, 59);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/RuntimeException", "<init>", "(Ljava/lang/String;Ljava/lang/Throwable;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label150);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "cfg", "Lorg/apache/openejb/quartz/utils/PropertiesParser;");
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.scheduler.jmx.export");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getStringProperty", "(Ljava/lang/String;)Ljava/lang/String;", false);
methodVisitor.visitJumpInsn(IF_ACMPNE, label148);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ISTORE, 28);
methodVisitor.visitLabel(label148);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitTypeInsn(INSTANCEOF, "org/apache/openejb/quartz/impl/jdbcjobstore/JobStoreSupport");
Label label151 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label151);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitTypeInsn(CHECKCAST, "org/apache/openejb/quartz/impl/jdbcjobstore/JobStoreSupport");
methodVisitor.visitVarInsn(ASTORE, 59);
methodVisitor.visitVarInsn(ALOAD, 59);
methodVisitor.visitVarInsn(LLOAD, 12);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/impl/jdbcjobstore/JobStoreSupport", "setDbRetryInterval", "(J)V", false);
methodVisitor.visitVarInsn(ILOAD, 21);
Label label152 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label152);
methodVisitor.visitVarInsn(ALOAD, 59);
methodVisitor.visitVarInsn(ILOAD, 21);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/impl/jdbcjobstore/JobStoreSupport", "setThreadsInheritInitializersClassLoadContext", "(Z)V", false);
methodVisitor.visitLabel(label152);
methodVisitor.visitFrame(Opcodes.F_FULL, 59, new Object[] {"org/apache/openejb/quartz/impl/StdSchedulerFactory", "org/apache/openejb/quartz/spi/JobStore", "org/apache/openejb/quartz/spi/ThreadPool", "org/apache/openejb/quartz/core/QuartzScheduler", "org/apache/openejb/quartz/utils/DBConnectionManager", "java/lang/String", "java/util/Properties", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.LONG, "org/apache/openejb/quartz/impl/SchedulerRepository", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", "java/lang/String", Opcodes.INTEGER, "java/lang/String", "java/util/Properties", "org/apache/openejb/quartz/spi/ClassLoadHelper", "org/apache/openejb/quartz/spi/JobFactory", "org/apache/openejb/quartz/spi/InstanceIdGenerator", "java/lang/String", "java/lang/String", "[Ljava/lang/String;", "[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/spi/SchedulerPlugin;", "[Ljava/lang/Class;", "[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/JobListener;", "[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/TriggerListener;", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", "org/apache/openejb/quartz/core/JobRunShellFactory", "org/apache/openejb/quartz/impl/jdbcjobstore/JobStoreSupport", Opcodes.TOP, "org/apache/openejb/quartz/spi/ThreadExecutor"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 59);
methodVisitor.visitVarInsn(ALOAD, 61);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/impl/jdbcjobstore/JobStoreSupport", "setThreadExecutor", "(Lorg/apache/openejb/quartz/spi/ThreadExecutor;)V", false);
methodVisitor.visitLabel(label151);
methodVisitor.visitFrame(Opcodes.F_FULL, 59, new Object[] {"org/apache/openejb/quartz/impl/StdSchedulerFactory", "org/apache/openejb/quartz/spi/JobStore", "org/apache/openejb/quartz/spi/ThreadPool", "org/apache/openejb/quartz/core/QuartzScheduler", "org/apache/openejb/quartz/utils/DBConnectionManager", "java/lang/String", "java/util/Properties", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.LONG, "org/apache/openejb/quartz/impl/SchedulerRepository", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", "java/lang/String", Opcodes.INTEGER, "java/lang/String", "java/util/Properties", "org/apache/openejb/quartz/spi/ClassLoadHelper", "org/apache/openejb/quartz/spi/JobFactory", "org/apache/openejb/quartz/spi/InstanceIdGenerator", "java/lang/String", "java/lang/String", "[Ljava/lang/String;", "[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/spi/SchedulerPlugin;", "[Ljava/lang/Class;", "[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/JobListener;", "[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/TriggerListener;", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", "org/apache/openejb/quartz/core/JobRunShellFactory", Opcodes.TOP, Opcodes.TOP, "org/apache/openejb/quartz/spi/ThreadExecutor"}, 0, new Object[] {});
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/quartz/core/QuartzSchedulerResources");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/core/QuartzSchedulerResources", "<init>", "()V", false);
methodVisitor.visitVarInsn(ASTORE, 59);
methodVisitor.visitVarInsn(ALOAD, 59);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/core/QuartzSchedulerResources", "setName", "(Ljava/lang/String;)V", false);
methodVisitor.visitVarInsn(ALOAD, 59);
methodVisitor.visitVarInsn(ALOAD, 16);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/core/QuartzSchedulerResources", "setThreadName", "(Ljava/lang/String;)V", false);
methodVisitor.visitVarInsn(ALOAD, 59);
methodVisitor.visitVarInsn(ALOAD, 17);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/core/QuartzSchedulerResources", "setInstanceId", "(Ljava/lang/String;)V", false);
methodVisitor.visitVarInsn(ALOAD, 59);
methodVisitor.visitVarInsn(ALOAD, 58);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/core/QuartzSchedulerResources", "setJobRunShellFactory", "(Lorg/apache/openejb/quartz/core/JobRunShellFactory;)V", false);
methodVisitor.visitVarInsn(ALOAD, 59);
methodVisitor.visitVarInsn(ILOAD, 20);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/core/QuartzSchedulerResources", "setMakeSchedulerThreadDaemon", "(Z)V", false);
methodVisitor.visitVarInsn(ALOAD, 59);
methodVisitor.visitVarInsn(ILOAD, 21);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/core/QuartzSchedulerResources", "setThreadsInheritInitializersClassLoadContext", "(Z)V", false);
methodVisitor.visitVarInsn(ALOAD, 59);
methodVisitor.visitVarInsn(ILOAD, 22);
Label label153 = new Label();
methodVisitor.visitJumpInsn(IFNE, label153);
methodVisitor.visitInsn(ICONST_1);
Label label154 = new Label();
methodVisitor.visitJumpInsn(GOTO, label154);
methodVisitor.visitLabel(label153);
methodVisitor.visitFrame(Opcodes.F_FULL, 59, new Object[] {"org/apache/openejb/quartz/impl/StdSchedulerFactory", "org/apache/openejb/quartz/spi/JobStore", "org/apache/openejb/quartz/spi/ThreadPool", "org/apache/openejb/quartz/core/QuartzScheduler", "org/apache/openejb/quartz/utils/DBConnectionManager", "java/lang/String", "java/util/Properties", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.LONG, "org/apache/openejb/quartz/impl/SchedulerRepository", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", "java/lang/String", Opcodes.INTEGER, "java/lang/String", "java/util/Properties", "org/apache/openejb/quartz/spi/ClassLoadHelper", "org/apache/openejb/quartz/spi/JobFactory", "org/apache/openejb/quartz/spi/InstanceIdGenerator", "java/lang/String", "java/lang/String", "[Ljava/lang/String;", "[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/spi/SchedulerPlugin;", "[Ljava/lang/Class;", "[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/JobListener;", "[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/TriggerListener;", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", "org/apache/openejb/quartz/core/JobRunShellFactory", "org/apache/openejb/quartz/core/QuartzSchedulerResources", Opcodes.TOP, "org/apache/openejb/quartz/spi/ThreadExecutor"}, 1, new Object[] {"org/apache/openejb/quartz/core/QuartzSchedulerResources"});
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitLabel(label154);
methodVisitor.visitFrame(Opcodes.F_FULL, 59, new Object[] {"org/apache/openejb/quartz/impl/StdSchedulerFactory", "org/apache/openejb/quartz/spi/JobStore", "org/apache/openejb/quartz/spi/ThreadPool", "org/apache/openejb/quartz/core/QuartzScheduler", "org/apache/openejb/quartz/utils/DBConnectionManager", "java/lang/String", "java/util/Properties", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.LONG, "org/apache/openejb/quartz/impl/SchedulerRepository", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", "java/lang/String", Opcodes.INTEGER, "java/lang/String", "java/util/Properties", "org/apache/openejb/quartz/spi/ClassLoadHelper", "org/apache/openejb/quartz/spi/JobFactory", "org/apache/openejb/quartz/spi/InstanceIdGenerator", "java/lang/String", "java/lang/String", "[Ljava/lang/String;", "[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/spi/SchedulerPlugin;", "[Ljava/lang/Class;", "[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/JobListener;", "[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/TriggerListener;", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", "org/apache/openejb/quartz/core/JobRunShellFactory", "org/apache/openejb/quartz/core/QuartzSchedulerResources", Opcodes.TOP, "org/apache/openejb/quartz/spi/ThreadExecutor"}, 2, new Object[] {"org/apache/openejb/quartz/core/QuartzSchedulerResources", Opcodes.INTEGER});
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/core/QuartzSchedulerResources", "setRunUpdateCheck", "(Z)V", false);
methodVisitor.visitVarInsn(ALOAD, 59);
methodVisitor.visitVarInsn(LLOAD, 23);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/core/QuartzSchedulerResources", "setBatchTimeWindow", "(J)V", false);
methodVisitor.visitVarInsn(ALOAD, 59);
methodVisitor.visitVarInsn(ILOAD, 25);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/core/QuartzSchedulerResources", "setMaxBatchSize", "(I)V", false);
methodVisitor.visitVarInsn(ALOAD, 59);
methodVisitor.visitVarInsn(ILOAD, 26);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/core/QuartzSchedulerResources", "setInterruptJobsOnShutdown", "(Z)V", false);
methodVisitor.visitVarInsn(ALOAD, 59);
methodVisitor.visitVarInsn(ILOAD, 27);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/core/QuartzSchedulerResources", "setInterruptJobsOnShutdownWithWait", "(Z)V", false);
methodVisitor.visitVarInsn(ALOAD, 59);
methodVisitor.visitVarInsn(ILOAD, 28);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/core/QuartzSchedulerResources", "setJMXExport", "(Z)V", false);
methodVisitor.visitVarInsn(ALOAD, 59);
methodVisitor.visitVarInsn(ALOAD, 29);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/core/QuartzSchedulerResources", "setJMXObjectName", "(Ljava/lang/String;)V", false);
methodVisitor.visitVarInsn(ILOAD, 39);
Label label155 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label155);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/quartz/management/ManagementRESTServiceConfiguration");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/management/ManagementRESTServiceConfiguration", "<init>", "()V", false);
methodVisitor.visitVarInsn(ASTORE, 60);
methodVisitor.visitVarInsn(ALOAD, 60);
methodVisitor.visitVarInsn(ALOAD, 40);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/management/ManagementRESTServiceConfiguration", "setBind", "(Ljava/lang/String;)V", false);
methodVisitor.visitVarInsn(ALOAD, 60);
methodVisitor.visitVarInsn(ILOAD, 39);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/management/ManagementRESTServiceConfiguration", "setEnabled", "(Z)V", false);
methodVisitor.visitVarInsn(ALOAD, 59);
methodVisitor.visitVarInsn(ALOAD, 60);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/core/QuartzSchedulerResources", "setManagementRESTServiceConfiguration", "(Lorg/apache/openejb/quartz/management/ManagementRESTServiceConfiguration;)V", false);
methodVisitor.visitLabel(label155);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ILOAD, 32);
Label label156 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label156);
methodVisitor.visitVarInsn(ALOAD, 59);
methodVisitor.visitVarInsn(ALOAD, 34);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/core/QuartzSchedulerResources", "setRMIRegistryHost", "(Ljava/lang/String;)V", false);
methodVisitor.visitVarInsn(ALOAD, 59);
methodVisitor.visitVarInsn(ILOAD, 35);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/core/QuartzSchedulerResources", "setRMIRegistryPort", "(I)V", false);
methodVisitor.visitVarInsn(ALOAD, 59);
methodVisitor.visitVarInsn(ILOAD, 36);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/core/QuartzSchedulerResources", "setRMIServerPort", "(I)V", false);
methodVisitor.visitVarInsn(ALOAD, 59);
methodVisitor.visitVarInsn(ALOAD, 37);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/core/QuartzSchedulerResources", "setRMICreateRegistryStrategy", "(Ljava/lang/String;)V", false);
methodVisitor.visitVarInsn(ALOAD, 59);
methodVisitor.visitVarInsn(ALOAD, 38);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/core/QuartzSchedulerResources", "setRMIBindName", "(Ljava/lang/String;)V", false);
methodVisitor.visitLabel(label156);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitVarInsn(ALOAD, 17);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/impl/SchedulerDetailsSetter", "setDetails", "(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V", false);
methodVisitor.visitVarInsn(ALOAD, 59);
methodVisitor.visitVarInsn(ALOAD, 61);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/core/QuartzSchedulerResources", "setThreadExecutor", "(Lorg/apache/openejb/quartz/spi/ThreadExecutor;)V", false);
methodVisitor.visitVarInsn(ALOAD, 61);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/openejb/quartz/spi/ThreadExecutor", "initialize", "()V", true);
methodVisitor.visitVarInsn(ALOAD, 59);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/core/QuartzSchedulerResources", "setThreadPool", "(Lorg/apache/openejb/quartz/spi/ThreadPool;)V", false);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitTypeInsn(INSTANCEOF, "org/apache/openejb/quartz/simpl/SimpleThreadPool");
Label label157 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label157);
methodVisitor.visitVarInsn(ILOAD, 21);
methodVisitor.visitJumpInsn(IFEQ, label157);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitTypeInsn(CHECKCAST, "org/apache/openejb/quartz/simpl/SimpleThreadPool");
methodVisitor.visitVarInsn(ILOAD, 21);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/simpl/SimpleThreadPool", "setThreadsInheritContextClassLoaderOfInitializingThread", "(Z)V", false);
methodVisitor.visitLabel(label157);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/openejb/quartz/spi/ThreadPool", "initialize", "()V", true);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ISTORE, 55);
methodVisitor.visitVarInsn(ALOAD, 59);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/core/QuartzSchedulerResources", "setJobStore", "(Lorg/apache/openejb/quartz/spi/JobStore;)V", false);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 60);
Label label158 = new Label();
methodVisitor.visitLabel(label158);
methodVisitor.visitFrame(Opcodes.F_FULL, 59, new Object[] {"org/apache/openejb/quartz/impl/StdSchedulerFactory", "org/apache/openejb/quartz/spi/JobStore", "org/apache/openejb/quartz/spi/ThreadPool", "org/apache/openejb/quartz/core/QuartzScheduler", "org/apache/openejb/quartz/utils/DBConnectionManager", "java/lang/String", "java/util/Properties", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.LONG, "org/apache/openejb/quartz/impl/SchedulerRepository", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", "java/lang/String", Opcodes.INTEGER, "java/lang/String", "java/util/Properties", "org/apache/openejb/quartz/spi/ClassLoadHelper", "org/apache/openejb/quartz/spi/JobFactory", "org/apache/openejb/quartz/spi/InstanceIdGenerator", "java/lang/String", "java/lang/String", "[Ljava/lang/String;", "[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/spi/SchedulerPlugin;", "[Ljava/lang/Class;", "[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/JobListener;", "[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/TriggerListener;", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", "org/apache/openejb/quartz/core/JobRunShellFactory", "org/apache/openejb/quartz/core/QuartzSchedulerResources", Opcodes.INTEGER, "org/apache/openejb/quartz/spi/ThreadExecutor"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ILOAD, 60);
methodVisitor.visitVarInsn(ALOAD, 49);
methodVisitor.visitInsn(ARRAYLENGTH);
Label label159 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPGE, label159);
methodVisitor.visitVarInsn(ALOAD, 59);
methodVisitor.visitVarInsn(ALOAD, 49);
methodVisitor.visitVarInsn(ILOAD, 60);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/core/QuartzSchedulerResources", "addSchedulerPlugin", "(Lorg/apache/openejb/quartz/spi/SchedulerPlugin;)V", false);
methodVisitor.visitIincInsn(60, 1);
methodVisitor.visitJumpInsn(GOTO, label158);
methodVisitor.visitLabel(label159);
methodVisitor.visitFrame(Opcodes.F_FULL, 59, new Object[] {"org/apache/openejb/quartz/impl/StdSchedulerFactory", "org/apache/openejb/quartz/spi/JobStore", "org/apache/openejb/quartz/spi/ThreadPool", "org/apache/openejb/quartz/core/QuartzScheduler", "org/apache/openejb/quartz/utils/DBConnectionManager", "java/lang/String", "java/util/Properties", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.LONG, "org/apache/openejb/quartz/impl/SchedulerRepository", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", "java/lang/String", Opcodes.INTEGER, "java/lang/String", "java/util/Properties", "org/apache/openejb/quartz/spi/ClassLoadHelper", "org/apache/openejb/quartz/spi/JobFactory", "org/apache/openejb/quartz/spi/InstanceIdGenerator", "java/lang/String", "java/lang/String", "[Ljava/lang/String;", "[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/spi/SchedulerPlugin;", "[Ljava/lang/Class;", "[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/JobListener;", "[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/TriggerListener;", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", "org/apache/openejb/quartz/core/JobRunShellFactory", "org/apache/openejb/quartz/core/QuartzSchedulerResources", Opcodes.TOP, "org/apache/openejb/quartz/spi/ThreadExecutor"}, 0, new Object[] {});
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/quartz/core/QuartzScheduler");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 59);
methodVisitor.visitVarInsn(LLOAD, 10);
methodVisitor.visitVarInsn(LLOAD, 12);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/core/QuartzScheduler", "<init>", "(Lorg/apache/openejb/quartz/core/QuartzSchedulerResources;JJ)V", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ISTORE, 56);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 59);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "instantiate", "(Lorg/apache/openejb/quartz/core/QuartzSchedulerResources;Lorg/apache/openejb/quartz/core/QuartzScheduler;)Lorg/apache/openejb/quartz/Scheduler;", false);
methodVisitor.visitVarInsn(ASTORE, 60);
methodVisitor.visitVarInsn(ALOAD, 43);
Label label160 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label160);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 43);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/core/QuartzScheduler", "setJobFactory", "(Lorg/apache/openejb/quartz/spi/JobFactory;)V", false);
methodVisitor.visitLabel(label160);
methodVisitor.visitFrame(Opcodes.F_FULL, 59, new Object[] {"org/apache/openejb/quartz/impl/StdSchedulerFactory", "org/apache/openejb/quartz/spi/JobStore", "org/apache/openejb/quartz/spi/ThreadPool", "org/apache/openejb/quartz/core/QuartzScheduler", "org/apache/openejb/quartz/utils/DBConnectionManager", "java/lang/String", "java/util/Properties", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.LONG, "org/apache/openejb/quartz/impl/SchedulerRepository", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", "java/lang/String", Opcodes.INTEGER, "java/lang/String", "java/util/Properties", "org/apache/openejb/quartz/spi/ClassLoadHelper", "org/apache/openejb/quartz/spi/JobFactory", "org/apache/openejb/quartz/spi/InstanceIdGenerator", "java/lang/String", "java/lang/String", "[Ljava/lang/String;", "[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/spi/SchedulerPlugin;", "[Ljava/lang/Class;", "[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/JobListener;", "[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/TriggerListener;", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", "org/apache/openejb/quartz/core/JobRunShellFactory", "org/apache/openejb/quartz/core/QuartzSchedulerResources", "org/apache/openejb/quartz/Scheduler", "org/apache/openejb/quartz/spi/ThreadExecutor"}, 0, new Object[] {});
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 62);
Label label161 = new Label();
methodVisitor.visitLabel(label161);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
methodVisitor.visitVarInsn(ILOAD, 62);
methodVisitor.visitVarInsn(ALOAD, 49);
methodVisitor.visitInsn(ARRAYLENGTH);
Label label162 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPGE, label162);
methodVisitor.visitVarInsn(ALOAD, 49);
methodVisitor.visitVarInsn(ILOAD, 62);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ALOAD, 48);
methodVisitor.visitVarInsn(ILOAD, 62);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ALOAD, 60);
methodVisitor.visitVarInsn(ALOAD, 42);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/openejb/quartz/spi/SchedulerPlugin", "initialize", "(Ljava/lang/String;Lorg/apache/openejb/quartz/Scheduler;Lorg/apache/openejb/quartz/spi/ClassLoadHelper;)V", true);
methodVisitor.visitIincInsn(62, 1);
methodVisitor.visitJumpInsn(GOTO, label161);
methodVisitor.visitLabel(label162);
methodVisitor.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 62);
Label label163 = new Label();
methodVisitor.visitLabel(label163);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
methodVisitor.visitVarInsn(ILOAD, 62);
methodVisitor.visitVarInsn(ALOAD, 52);
methodVisitor.visitInsn(ARRAYLENGTH);
Label label164 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPGE, label164);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/core/QuartzScheduler", "getListenerManager", "()Lorg/apache/openejb/quartz/ListenerManager;", false);
methodVisitor.visitVarInsn(ALOAD, 52);
methodVisitor.visitVarInsn(ILOAD, 62);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/impl/matchers/EverythingMatcher", "allJobs", "()Lorg/apache/openejb/quartz/impl/matchers/EverythingMatcher;", false);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/openejb/quartz/ListenerManager", "addJobListener", "(Lorg/apache/openejb/quartz/JobListener;Lorg/apache/openejb/quartz/Matcher;)V", true);
methodVisitor.visitIincInsn(62, 1);
methodVisitor.visitJumpInsn(GOTO, label163);
methodVisitor.visitLabel(label164);
methodVisitor.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 62);
Label label165 = new Label();
methodVisitor.visitLabel(label165);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
methodVisitor.visitVarInsn(ILOAD, 62);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitInsn(ARRAYLENGTH);
Label label166 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPGE, label166);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/core/QuartzScheduler", "getListenerManager", "()Lorg/apache/openejb/quartz/ListenerManager;", false);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitVarInsn(ILOAD, 62);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/impl/matchers/EverythingMatcher", "allTriggers", "()Lorg/apache/openejb/quartz/impl/matchers/EverythingMatcher;", false);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/openejb/quartz/ListenerManager", "addTriggerListener", "(Lorg/apache/openejb/quartz/TriggerListener;Lorg/apache/openejb/quartz/Matcher;)V", true);
methodVisitor.visitIincInsn(62, 1);
methodVisitor.visitJumpInsn(GOTO, label165);
methodVisitor.visitLabel(label166);
methodVisitor.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 41);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/Properties", "keySet", "()Ljava/util/Set;", false);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/Set", "iterator", "()Ljava/util/Iterator;", true);
methodVisitor.visitVarInsn(ASTORE, 62);
Label label167 = new Label();
methodVisitor.visitLabel(label167);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"java/util/Iterator"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 62);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "hasNext", "()Z", true);
Label label168 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label168);
methodVisitor.visitVarInsn(ALOAD, 62);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "next", "()Ljava/lang/Object;", true);
methodVisitor.visitVarInsn(ASTORE, 63);
methodVisitor.visitVarInsn(ALOAD, 41);
methodVisitor.visitVarInsn(ALOAD, 63);
methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/String");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/Properties", "getProperty", "(Ljava/lang/String;)Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ASTORE, 64);
methodVisitor.visitVarInsn(ALOAD, 60);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/openejb/quartz/Scheduler", "getContext", "()Lorg/apache/openejb/quartz/SchedulerContext;", true);
methodVisitor.visitVarInsn(ALOAD, 63);
methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/String");
methodVisitor.visitVarInsn(ALOAD, 64);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/SchedulerContext", "put", "(Ljava/lang/String;Ljava/lang/String;)V", false);
methodVisitor.visitJumpInsn(GOTO, label167);
methodVisitor.visitLabel(label168);
methodVisitor.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 17);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/openejb/quartz/spi/JobStore", "setInstanceId", "(Ljava/lang/String;)V", true);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/openejb/quartz/spi/JobStore", "setInstanceName", "(Ljava/lang/String;)V", true);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/openejb/quartz/spi/ThreadPool", "getPoolSize", "()I", true);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/openejb/quartz/spi/JobStore", "setThreadPoolSize", "(I)V", true);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 42);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/core/QuartzScheduler", "getSchedulerSignaler", "()Lorg/apache/openejb/quartz/spi/SchedulerSignaler;", false);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/openejb/quartz/spi/JobStore", "initialize", "(Lorg/apache/openejb/quartz/spi/ClassLoadHelper;Lorg/apache/openejb/quartz/spi/SchedulerSignaler;)V", true);
methodVisitor.visitVarInsn(ALOAD, 58);
methodVisitor.visitVarInsn(ALOAD, 60);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/openejb/quartz/core/JobRunShellFactory", "initialize", "(Lorg/apache/openejb/quartz/Scheduler;)V", true);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/core/QuartzScheduler", "initialize", "()V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "getLog", "()Lorg/slf4j/Logger;", false);
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitLdcInsn("Quartz scheduler '");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ALOAD, 60);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/openejb/quartz/Scheduler", "getSchedulerName", "()Ljava/lang/String;", true);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitLdcInsn("' initialized from ");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "propSrc", "Ljava/lang/String;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/slf4j/Logger", "info", "(Ljava/lang/String;)V", true);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "getLog", "()Lorg/slf4j/Logger;", false);
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitLdcInsn("Quartz scheduler version: ");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/core/QuartzScheduler", "getVersion", "()Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/slf4j/Logger", "info", "(Ljava/lang/String;)V", true);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/core/QuartzScheduler", "addNoGCObject", "(Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 4);
Label label169 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label169);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/core/QuartzScheduler", "addNoGCObject", "(Ljava/lang/Object;)V", false);
methodVisitor.visitLabel(label169);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitVarInsn(ALOAD, 60);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/impl/SchedulerRepository", "bind", "(Lorg/apache/openejb/quartz/Scheduler;)V", false);
methodVisitor.visitVarInsn(ALOAD, 60);
methodVisitor.visitLabel(label82);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label83);
methodVisitor.visitFrame(Opcodes.F_FULL, 59, new Object[] {"org/apache/openejb/quartz/impl/StdSchedulerFactory", "org/apache/openejb/quartz/spi/JobStore", "org/apache/openejb/quartz/spi/ThreadPool", "org/apache/openejb/quartz/core/QuartzScheduler", "org/apache/openejb/quartz/utils/DBConnectionManager", "java/lang/String", "java/util/Properties", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.LONG, "org/apache/openejb/quartz/impl/SchedulerRepository", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", "java/lang/String", Opcodes.INTEGER, "java/lang/String", "java/util/Properties", "org/apache/openejb/quartz/spi/ClassLoadHelper", "org/apache/openejb/quartz/spi/JobFactory", "org/apache/openejb/quartz/spi/InstanceIdGenerator", "java/lang/String", "java/lang/String", "[Ljava/lang/String;", "[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/spi/SchedulerPlugin;", "[Ljava/lang/Class;", "[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/JobListener;", "[Ljava/lang/String;", "[Lorg/apache/openejb/quartz/TriggerListener;", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/apache/openejb/quartz/spi/ThreadExecutor"}, 1, new Object[] {"org/apache/openejb/quartz/SchedulerException"});
methodVisitor.visitVarInsn(ASTORE, 58);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ILOAD, 55);
methodVisitor.visitVarInsn(ILOAD, 56);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "shutdownFromInstantiateException", "(Lorg/apache/openejb/quartz/spi/ThreadPool;Lorg/apache/openejb/quartz/core/QuartzScheduler;ZZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 58);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label84);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/RuntimeException"});
methodVisitor.visitVarInsn(ASTORE, 58);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ILOAD, 55);
methodVisitor.visitVarInsn(ILOAD, 56);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "shutdownFromInstantiateException", "(Lorg/apache/openejb/quartz/spi/ThreadPool;Lorg/apache/openejb/quartz/core/QuartzScheduler;ZZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 58);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label85);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/Error"});
methodVisitor.visitVarInsn(ASTORE, 58);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ILOAD, 55);
methodVisitor.visitVarInsn(ILOAD, 56);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "shutdownFromInstantiateException", "(Lorg/apache/openejb/quartz/spi/ThreadPool;Lorg/apache/openejb/quartz/core/QuartzScheduler;ZZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 58);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitMaxs(7, 65);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PRIVATE, "shutdownFromInstantiateException", "(Lorg/apache/openejb/quartz/spi/ThreadPool;Lorg/apache/openejb/quartz/core/QuartzScheduler;ZZ)V", null, null);
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/lang/Exception");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ILOAD, 4);
Label label3 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label3);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/core/QuartzScheduler", "shutdown", "(Z)V", false);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ILOAD, 3);
methodVisitor.visitJumpInsn(IFEQ, label1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/openejb/quartz/spi/ThreadPool", "shutdown", "(Z)V", true);
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
Label label4 = new Label();
methodVisitor.visitJumpInsn(GOTO, label4);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/Exception"});
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "getLog", "()Lorg/slf4j/Logger;", false);
methodVisitor.visitLdcInsn("Got another exception while shutting down after instantiation exception");
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/slf4j/Logger", "error", "(Ljava/lang/String;Ljava/lang/Throwable;)V", true);
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(3, 6);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PROTECTED, "instantiate", "(Lorg/apache/openejb/quartz/core/QuartzSchedulerResources;Lorg/apache/openejb/quartz/core/QuartzScheduler;)Lorg/apache/openejb/quartz/Scheduler;", null, null);
methodVisitor.visitCode();
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/quartz/impl/StdScheduler");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/impl/StdScheduler", "<init>", "(Lorg/apache/openejb/quartz/core/QuartzScheduler;)V", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(3, 4);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PRIVATE, "setBeanProps", "(Ljava/lang/Object;Ljava/util/Properties;)V", null, new String[] { "java/lang/NoSuchMethodException", "java/lang/IllegalAccessException", "java/lang/reflect/InvocationTargetException", "java/beans/IntrospectionException", "org/apache/openejb/quartz/SchedulerConfigException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/lang/NumberFormatException");
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitLdcInsn("class");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/Properties", "remove", "(Ljava/lang/Object;)Ljava/lang/Object;", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Object", "getClass", "()Ljava/lang/Class;", false);
methodVisitor.visitMethodInsn(INVOKESTATIC, "java/beans/Introspector", "getBeanInfo", "(Ljava/lang/Class;)Ljava/beans/BeanInfo;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/beans/BeanInfo", "getPropertyDescriptors", "()[Ljava/beans/PropertyDescriptor;", true);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/quartz/utils/PropertiesParser");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/utils/PropertiesParser", "<init>", "(Ljava/util/Properties;)V", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/Properties", "keys", "()Ljava/util/Enumeration;", false);
methodVisitor.visitVarInsn(ASTORE, 6);
Label label3 = new Label();
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_FULL, 7, new Object[] {"org/apache/openejb/quartz/impl/StdSchedulerFactory", "java/lang/Object", "java/util/Properties", "java/beans/BeanInfo", "[Ljava/beans/PropertyDescriptor;", "org/apache/openejb/quartz/utils/PropertiesParser", "java/util/Enumeration"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/Enumeration", "hasMoreElements", "()Z", true);
Label label4 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label4);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/Enumeration", "nextElement", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/String");
methodVisitor.visitVarInsn(ASTORE, 7);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "substring", "(II)Ljava/lang/String;", false);
methodVisitor.visitFieldInsn(GETSTATIC, "java/util/Locale", "US", "Ljava/util/Locale;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "toUpperCase", "(Ljava/util/Locale;)Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ASTORE, 8);
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitLdcInsn("set");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ALOAD, 8);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "substring", "(I)Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ASTORE, 9);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 9);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "getSetMethod", "(Ljava/lang/String;[Ljava/beans/PropertyDescriptor;)Ljava/lang/reflect/Method;", false);
methodVisitor.visitVarInsn(ASTORE, 10);
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 10);
Label label5 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label5);
methodVisitor.visitTypeInsn(NEW, "java/lang/NoSuchMethodException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitLdcInsn("No setter for property '");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitLdcInsn("'");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/NoSuchMethodException", "<init>", "(Ljava/lang/String;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_FULL, 11, new Object[] {"org/apache/openejb/quartz/impl/StdSchedulerFactory", "java/lang/Object", "java/util/Properties", "java/beans/BeanInfo", "[Ljava/beans/PropertyDescriptor;", "org/apache/openejb/quartz/utils/PropertiesParser", "java/util/Enumeration", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/reflect/Method"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/reflect/Method", "getParameterTypes", "()[Ljava/lang/Class;", false);
methodVisitor.visitVarInsn(ASTORE, 11);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ARRAYLENGTH);
methodVisitor.visitInsn(ICONST_1);
Label label6 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPEQ, label6);
methodVisitor.visitTypeInsn(NEW, "java/lang/NoSuchMethodException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitLdcInsn("No 1-argument setter for property '");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitLdcInsn("'");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/NoSuchMethodException", "<init>", "(Ljava/lang/String;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label6);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"[Ljava/lang/Class;"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitVarInsn(ASTORE, 12);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getStringProperty", "(Ljava/lang/String;)Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ASTORE, 13);
methodVisitor.visitVarInsn(ALOAD, 13);
Label label7 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label7);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitLdcInsn("$@");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "startsWith", "(Ljava/lang/String;)Z", false);
methodVisitor.visitJumpInsn(IFEQ, label7);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "substring", "(I)Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ASTORE, 13);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "cfg", "Lorg/apache/openejb/quartz/utils/PropertiesParser;");
methodVisitor.visitVarInsn(ASTORE, 12);
Label label8 = new Label();
methodVisitor.visitJumpInsn(GOTO, label8);
methodVisitor.visitLabel(label7);
methodVisitor.visitFrame(Opcodes.F_APPEND,2, new Object[] {"org/apache/openejb/quartz/utils/PropertiesParser", "java/lang/String"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitVarInsn(ASTORE, 13);
methodVisitor.visitLabel(label8);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/Integer", "TYPE", "Ljava/lang/Class;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Object", "equals", "(Ljava/lang/Object;)Z", false);
Label label9 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label9);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Object");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getIntProperty", "(Ljava/lang/String;)I", false);
methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/Integer", "valueOf", "(I)Ljava/lang/Integer;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/reflect/Method", "invoke", "(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label9);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/Long", "TYPE", "Ljava/lang/Class;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Object", "equals", "(Ljava/lang/Object;)Z", false);
Label label10 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label10);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Object");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getLongProperty", "(Ljava/lang/String;)J", false);
methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/Long", "valueOf", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/reflect/Method", "invoke", "(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label10);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/Float", "TYPE", "Ljava/lang/Class;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Object", "equals", "(Ljava/lang/Object;)Z", false);
Label label11 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label11);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Object");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getFloatProperty", "(Ljava/lang/String;)F", false);
methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/Float", "valueOf", "(F)Ljava/lang/Float;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/reflect/Method", "invoke", "(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label11);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/Double", "TYPE", "Ljava/lang/Class;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Object", "equals", "(Ljava/lang/Object;)Z", false);
Label label12 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label12);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Object");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getDoubleProperty", "(Ljava/lang/String;)D", false);
methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/Double", "valueOf", "(D)Ljava/lang/Double;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/reflect/Method", "invoke", "(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label12);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/Boolean", "TYPE", "Ljava/lang/Class;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Object", "equals", "(Ljava/lang/Object;)Z", false);
Label label13 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label13);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Object");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getBooleanProperty", "(Ljava/lang/String;)Z", false);
methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/Boolean", "valueOf", "(Z)Ljava/lang/Boolean;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/reflect/Method", "invoke", "(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label13);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitLdcInsn(Type.getType("Ljava/lang/String;"));
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Object", "equals", "(Ljava/lang/Object;)Z", false);
Label label14 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label14);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Object");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getStringProperty", "(Ljava/lang/String;)Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/reflect/Method", "invoke", "(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label14);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitTypeInsn(NEW, "java/lang/NoSuchMethodException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitLdcInsn("No primitive-type setter for property '");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitLdcInsn("'");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/NoSuchMethodException", "<init>", "(Ljava/lang/String;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_CHOP,3, null, 0, null);
Label label15 = new Label();
methodVisitor.visitJumpInsn(GOTO, label15);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/NumberFormatException"});
methodVisitor.visitVarInsn(ASTORE, 11);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/quartz/SchedulerConfigException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitLdcInsn("Could not parse property '");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitLdcInsn("' into correct data type: ");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/NumberFormatException", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/SchedulerConfigException", "<init>", "(Ljava/lang/String;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label15);
methodVisitor.visitFrame(Opcodes.F_FULL, 7, new Object[] {"org/apache/openejb/quartz/impl/StdSchedulerFactory", "java/lang/Object", "java/util/Properties", "java/beans/BeanInfo", "[Ljava/beans/PropertyDescriptor;", "org/apache/openejb/quartz/utils/PropertiesParser", "java/util/Enumeration"}, 0, new Object[] {});
methodVisitor.visitJumpInsn(GOTO, label3);
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(7, 14);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PRIVATE, "getSetMethod", "(Ljava/lang/String;[Ljava/beans/PropertyDescriptor;)Ljava/lang/reflect/Method;", null, null);
methodVisitor.visitCode();
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 3);
Label label0 = new Label();
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
methodVisitor.visitVarInsn(ILOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ARRAYLENGTH);
Label label1 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPGE, label1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ILOAD, 3);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/beans/PropertyDescriptor", "getWriteMethod", "()Ljava/lang/reflect/Method;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 4);
Label label2 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label2);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/reflect/Method", "getName", "()Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
methodVisitor.visitJumpInsn(IFEQ, label2);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitIincInsn(3, 1);
methodVisitor.visitJumpInsn(GOTO, label0);
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(2, 5);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PRIVATE, "loadClass", "(Ljava/lang/String;)Ljava/lang/Class;", "(Ljava/lang/String;)Ljava/lang/Class<*>;", new String[] { "java/lang/ClassNotFoundException", "org/apache/openejb/quartz/SchedulerConfigException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/lang/ClassNotFoundException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label3, label2, label2, "java/lang/ClassNotFoundException");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "findClassloader", "()Ljava/lang/ClassLoader;", false);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitJumpInsn(IFNULL, label3);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/ClassLoader", "loadClass", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitLabel(label1);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"java/lang/ClassLoader"}, 0, null);
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/quartz/SchedulerConfigException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("Unable to find a class loader on the current thread or class.");
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/SchedulerConfigException", "<init>", "(Ljava/lang/String;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_FULL, 2, new Object[] {"org/apache/openejb/quartz/impl/StdSchedulerFactory", "java/lang/String"}, 1, new Object[] {"java/lang/ClassNotFoundException"});
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Object", "getClass", "()Ljava/lang/Class;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getClassLoader", "()Ljava/lang/ClassLoader;", false);
Label label4 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label4);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Object", "getClass", "()Ljava/lang/Class;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getClassLoader", "()Ljava/lang/ClassLoader;", false);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/ClassLoader", "loadClass", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"java/lang/ClassNotFoundException"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitMaxs(3, 3);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PRIVATE, "findClassloader", "()Ljava/lang/ClassLoader;", null, null);
methodVisitor.visitCode();
methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/Thread", "currentThread", "()Ljava/lang/Thread;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Thread", "getContextClassLoader", "()Ljava/lang/ClassLoader;", false);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Object", "getClass", "()Ljava/lang/Class;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getClassLoader", "()Ljava/lang/ClassLoader;", false);
methodVisitor.visitJumpInsn(IFNULL, label0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/Thread", "currentThread", "()Ljava/lang/Thread;", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Object", "getClass", "()Ljava/lang/Class;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getClassLoader", "()Ljava/lang/ClassLoader;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Thread", "setContextClassLoader", "(Ljava/lang/ClassLoader;)V", false);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/Thread", "currentThread", "()Ljava/lang/Thread;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Thread", "getContextClassLoader", "()Ljava/lang/ClassLoader;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(2, 1);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PRIVATE, "getSchedulerName", "()Ljava/lang/String;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "cfg", "Lorg/apache/openejb/quartz/utils/PropertiesParser;");
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.scheduler.instanceName");
methodVisitor.visitLdcInsn("QuartzScheduler");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/utils/PropertiesParser", "getStringProperty", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(3, 1);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "getScheduler", "()Lorg/apache/openejb/quartz/Scheduler;", null, new String[] { "org/apache/openejb/quartz/SchedulerException" });
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "cfg", "Lorg/apache/openejb/quartz/utils/PropertiesParser;");
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "initialize", "()V", false);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/impl/SchedulerRepository", "getInstance", "()Lorg/apache/openejb/quartz/impl/SchedulerRepository;", false);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "getSchedulerName", "()Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/impl/SchedulerRepository", "lookup", "(Ljava/lang/String;)Lorg/apache/openejb/quartz/Scheduler;", false);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
Label label1 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/openejb/quartz/Scheduler", "isShutdown", "()Z", true);
Label label2 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label2);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "getSchedulerName", "()Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/impl/SchedulerRepository", "remove", "(Ljava/lang/String;)Z", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_APPEND,2, new Object[] {"org/apache/openejb/quartz/impl/SchedulerRepository", "org/apache/openejb/quartz/Scheduler"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "instantiate", "()Lorg/apache/openejb/quartz/Scheduler;", false);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(2, 3);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC | ACC_STATIC, "getDefaultScheduler", "()Lorg/apache/openejb/quartz/Scheduler;", null, new String[] { "org/apache/openejb/quartz/SchedulerException" });
methodVisitor.visitCode();
methodVisitor.visitTypeInsn(NEW, "org/apache/openejb/quartz/impl/StdSchedulerFactory");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "<init>", "()V", false);
methodVisitor.visitVarInsn(ASTORE, 0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/impl/StdSchedulerFactory", "getScheduler", "()Lorg/apache/openejb/quartz/Scheduler;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(2, 1);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "getScheduler", "(Ljava/lang/String;)Lorg/apache/openejb/quartz/Scheduler;", null, new String[] { "org/apache/openejb/quartz/SchedulerException" });
methodVisitor.visitCode();
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/impl/SchedulerRepository", "getInstance", "()Lorg/apache/openejb/quartz/impl/SchedulerRepository;", false);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/impl/SchedulerRepository", "lookup", "(Ljava/lang/String;)Lorg/apache/openejb/quartz/Scheduler;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(2, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "getAllSchedulers", "()Ljava/util/Collection;", "()Ljava/util/Collection<Lorg/apache/openejb/quartz/Scheduler;>;", new String[] { "org/apache/openejb/quartz/SchedulerException" });
methodVisitor.visitCode();
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/impl/SchedulerRepository", "getInstance", "()Lorg/apache/openejb/quartz/impl/SchedulerRepository;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/openejb/quartz/impl/SchedulerRepository", "lookupAll", "()Ljava/util/Collection;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(1, 1);
methodVisitor.visitEnd();
}
classWriter.visitEnd();

return classWriter.toByteArray();
}
}
