package asm.org.apache.coyote;
import org.objectweb.asm.AnnotationVisitor;
import org.objectweb.asm.Attribute;
import org.objectweb.asm.ClassReader;
import org.objectweb.asm.ClassWriter;
import org.objectweb.asm.ConstantDynamic;
import org.objectweb.asm.FieldVisitor;
import org.objectweb.asm.Handle;
import org.objectweb.asm.Label;
import org.objectweb.asm.MethodVisitor;
import org.objectweb.asm.Opcodes;
import org.objectweb.asm.RecordComponentVisitor;
import org.objectweb.asm.Type;
import org.objectweb.asm.TypePath;
public class AsyncStateMachineDump implements Opcodes {

public static byte[] dump () throws Exception {

ClassWriter classWriter = new ClassWriter(0);
FieldVisitor fieldVisitor;
RecordComponentVisitor recordComponentVisitor;
MethodVisitor methodVisitor;
AnnotationVisitor annotationVisitor0;

classWriter.visit(V1_8, ACC_SUPER, "org/apache/coyote/AsyncStateMachine", null, "java/lang/Object", null);

classWriter.visitInnerClass("org/apache/coyote/AsyncStateMachine$AsyncState", "org/apache/coyote/AsyncStateMachine", "AsyncState", ACC_PRIVATE | ACC_FINAL | ACC_STATIC | ACC_ENUM);

classWriter.visitInnerClass("org/apache/tomcat/util/net/AbstractEndpoint$Handler", "org/apache/tomcat/util/net/AbstractEndpoint", "Handler", ACC_PUBLIC | ACC_STATIC | ACC_ABSTRACT | ACC_INTERFACE);

classWriter.visitInnerClass("org/apache/tomcat/util/net/AbstractEndpoint$Handler$SocketState", "org/apache/tomcat/util/net/AbstractEndpoint$Handler", "SocketState", ACC_PUBLIC | ACC_FINAL | ACC_STATIC | ACC_ENUM);

{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_FINAL | ACC_STATIC, "sm", "Lorg/apache/tomcat/util/res/StringManager;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_VOLATILE, "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_VOLATILE, "lastAsyncStart", "J", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_FINAL, "generation", "Ljava/util/concurrent/atomic/AtomicLong;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE, "asyncCtxt", "Lorg/apache/coyote/AsyncContextCallback;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_FINAL, "processor", "Lorg/apache/coyote/AbstractProcessor;", null, null);
fieldVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "<init>", "(Lorg/apache/coyote/AbstractProcessor;)V", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/Object", "<init>", "()V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine$AsyncState", "DISPATCHED", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitInsn(LCONST_0);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/coyote/AsyncStateMachine", "lastAsyncStart", "J");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitTypeInsn(NEW, "java/util/concurrent/atomic/AtomicLong");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(LCONST_0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/util/concurrent/atomic/AtomicLong", "<init>", "(J)V", false);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/coyote/AsyncStateMachine", "generation", "Ljava/util/concurrent/atomic/AtomicLong;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/coyote/AsyncStateMachine", "asyncCtxt", "Lorg/apache/coyote/AsyncContextCallback;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/coyote/AsyncStateMachine", "processor", "Lorg/apache/coyote/AbstractProcessor;");
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(5, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "isAsync", "()Z", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/coyote/AsyncStateMachine$AsyncState", "isAsync", "()Z", false);
methodVisitor.visitInsn(IRETURN);
methodVisitor.visitMaxs(1, 1);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "isAsyncDispatching", "()Z", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/coyote/AsyncStateMachine$AsyncState", "isDispatching", "()Z", false);
methodVisitor.visitInsn(IRETURN);
methodVisitor.visitMaxs(1, 1);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "isAsyncStarted", "()Z", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/coyote/AsyncStateMachine$AsyncState", "isStarted", "()Z", false);
methodVisitor.visitInsn(IRETURN);
methodVisitor.visitMaxs(1, 1);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "isAsyncTimingOut", "()Z", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine$AsyncState", "TIMING_OUT", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
Label label0 = new Label();
methodVisitor.visitJumpInsn(IF_ACMPNE, label0);
methodVisitor.visitInsn(ICONST_1);
Label label1 = new Label();
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {Opcodes.INTEGER});
methodVisitor.visitInsn(IRETURN);
methodVisitor.visitMaxs(2, 1);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "isAsyncError", "()Z", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine$AsyncState", "ERROR", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
Label label0 = new Label();
methodVisitor.visitJumpInsn(IF_ACMPNE, label0);
methodVisitor.visitInsn(ICONST_1);
Label label1 = new Label();
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {Opcodes.INTEGER});
methodVisitor.visitInsn(IRETURN);
methodVisitor.visitMaxs(2, 1);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "isCompleting", "()Z", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/coyote/AsyncStateMachine$AsyncState", "isCompleting", "()Z", false);
methodVisitor.visitInsn(IRETURN);
methodVisitor.visitMaxs(1, 1);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "getLastAsyncStart", "()J", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/coyote/AsyncStateMachine", "lastAsyncStart", "J");
methodVisitor.visitInsn(LRETURN);
methodVisitor.visitMaxs(2, 1);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "getCurrentGeneration", "()J", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/coyote/AsyncStateMachine", "generation", "Ljava/util/concurrent/atomic/AtomicLong;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/concurrent/atomic/AtomicLong", "get", "()J", false);
methodVisitor.visitInsn(LRETURN);
methodVisitor.visitMaxs(2, 1);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_SYNCHRONIZED, "asyncStart", "(Lorg/apache/coyote/AsyncContextCallback;)V", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine$AsyncState", "DISPATCHED", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
Label label0 = new Label();
methodVisitor.visitJumpInsn(IF_ACMPNE, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/coyote/AsyncStateMachine", "generation", "Ljava/util/concurrent/atomic/AtomicLong;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/concurrent/atomic/AtomicLong", "incrementAndGet", "()J", false);
methodVisitor.visitInsn(POP2);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine$AsyncState", "STARTING", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/coyote/AsyncStateMachine", "asyncCtxt", "Lorg/apache/coyote/AsyncContextCallback;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/System", "currentTimeMillis", "()J", false);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/coyote/AsyncStateMachine", "lastAsyncStart", "J");
Label label1 = new Label();
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitTypeInsn(NEW, "java/lang/IllegalStateException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine", "sm", "Lorg/apache/tomcat/util/res/StringManager;");
methodVisitor.visitLdcInsn("asyncStateMachine.invalidAsyncState");
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Object");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitLdcInsn("asyncStart()");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/tomcat/util/res/StringManager", "getString", "(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/IllegalStateException", "<init>", "(Ljava/lang/String;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(8, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_SYNCHRONIZED, "asyncOperation", "()V", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine$AsyncState", "STARTED", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
Label label0 = new Label();
methodVisitor.visitJumpInsn(IF_ACMPNE, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine$AsyncState", "READ_WRITE_OP", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
Label label1 = new Label();
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitTypeInsn(NEW, "java/lang/IllegalStateException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine", "sm", "Lorg/apache/tomcat/util/res/StringManager;");
methodVisitor.visitLdcInsn("asyncStateMachine.invalidAsyncState");
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Object");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitLdcInsn("asyncOperation()");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/tomcat/util/res/StringManager", "getString", "(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/IllegalStateException", "<init>", "(Ljava/lang/String;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(8, 1);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_SYNCHRONIZED, "asyncPostProcess", "()Lorg/apache/tomcat/util/net/AbstractEndpoint$Handler$SocketState;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine$AsyncState", "COMPLETE_PENDING", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
Label label0 = new Label();
methodVisitor.visitJumpInsn(IF_ACMPNE, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/coyote/AsyncStateMachine", "clearNonBlockingListeners", "()V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine$AsyncState", "COMPLETING", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/tomcat/util/net/AbstractEndpoint$Handler$SocketState", "ASYNC_END", "Lorg/apache/tomcat/util/net/AbstractEndpoint$Handler$SocketState;");
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine$AsyncState", "DISPATCH_PENDING", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
Label label1 = new Label();
methodVisitor.visitJumpInsn(IF_ACMPNE, label1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/coyote/AsyncStateMachine", "clearNonBlockingListeners", "()V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine$AsyncState", "DISPATCHING", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/tomcat/util/net/AbstractEndpoint$Handler$SocketState", "ASYNC_END", "Lorg/apache/tomcat/util/net/AbstractEndpoint$Handler$SocketState;");
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine$AsyncState", "STARTING", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
Label label2 = new Label();
methodVisitor.visitJumpInsn(IF_ACMPEQ, label2);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine$AsyncState", "READ_WRITE_OP", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
Label label3 = new Label();
methodVisitor.visitJumpInsn(IF_ACMPNE, label3);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine$AsyncState", "STARTED", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/tomcat/util/net/AbstractEndpoint$Handler$SocketState", "LONG", "Lorg/apache/tomcat/util/net/AbstractEndpoint$Handler$SocketState;");
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine$AsyncState", "MUST_COMPLETE", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
Label label4 = new Label();
methodVisitor.visitJumpInsn(IF_ACMPEQ, label4);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine$AsyncState", "COMPLETING", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
Label label5 = new Label();
methodVisitor.visitJumpInsn(IF_ACMPNE, label5);
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/coyote/AsyncStateMachine", "asyncCtxt", "Lorg/apache/coyote/AsyncContextCallback;");
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/coyote/AsyncContextCallback", "fireOnComplete", "()V", true);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine$AsyncState", "DISPATCHED", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/tomcat/util/net/AbstractEndpoint$Handler$SocketState", "ASYNC_END", "Lorg/apache/tomcat/util/net/AbstractEndpoint$Handler$SocketState;");
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine$AsyncState", "MUST_DISPATCH", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
Label label6 = new Label();
methodVisitor.visitJumpInsn(IF_ACMPNE, label6);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine$AsyncState", "DISPATCHING", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/tomcat/util/net/AbstractEndpoint$Handler$SocketState", "ASYNC_END", "Lorg/apache/tomcat/util/net/AbstractEndpoint$Handler$SocketState;");
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label6);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine$AsyncState", "DISPATCHING", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
Label label7 = new Label();
methodVisitor.visitJumpInsn(IF_ACMPNE, label7);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine$AsyncState", "DISPATCHED", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/tomcat/util/net/AbstractEndpoint$Handler$SocketState", "ASYNC_END", "Lorg/apache/tomcat/util/net/AbstractEndpoint$Handler$SocketState;");
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label7);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine$AsyncState", "STARTED", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
Label label8 = new Label();
methodVisitor.visitJumpInsn(IF_ACMPNE, label8);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/tomcat/util/net/AbstractEndpoint$Handler$SocketState", "LONG", "Lorg/apache/tomcat/util/net/AbstractEndpoint$Handler$SocketState;");
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label8);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitTypeInsn(NEW, "java/lang/IllegalStateException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine", "sm", "Lorg/apache/tomcat/util/res/StringManager;");
methodVisitor.visitLdcInsn("asyncStateMachine.invalidAsyncState");
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Object");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitLdcInsn("asyncPostProcess()");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/tomcat/util/res/StringManager", "getString", "(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/IllegalStateException", "<init>", "(Ljava/lang/String;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitMaxs(8, 1);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_SYNCHRONIZED, "asyncComplete", "()Z", null, null);
methodVisitor.visitCode();
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/coyote/ContainerThreadMarker", "isContainerThread", "()Z", false);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNE, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine$AsyncState", "STARTING", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitJumpInsn(IF_ACMPNE, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine$AsyncState", "COMPLETE_PENDING", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IRETURN);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/coyote/AsyncStateMachine", "clearNonBlockingListeners", "()V", false);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine$AsyncState", "STARTING", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
Label label1 = new Label();
methodVisitor.visitJumpInsn(IF_ACMPEQ, label1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine$AsyncState", "MUST_ERROR", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
Label label2 = new Label();
methodVisitor.visitJumpInsn(IF_ACMPNE, label2);
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine$AsyncState", "MUST_COMPLETE", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
Label label3 = new Label();
methodVisitor.visitJumpInsn(GOTO, label3);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine$AsyncState", "STARTED", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
Label label4 = new Label();
methodVisitor.visitJumpInsn(IF_ACMPNE, label4);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine$AsyncState", "COMPLETING", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ISTORE, 1);
methodVisitor.visitJumpInsn(GOTO, label3);
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine$AsyncState", "READ_WRITE_OP", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
Label label5 = new Label();
methodVisitor.visitJumpInsn(IF_ACMPEQ, label5);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine$AsyncState", "TIMING_OUT", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitJumpInsn(IF_ACMPEQ, label5);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine$AsyncState", "ERROR", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
Label label6 = new Label();
methodVisitor.visitJumpInsn(IF_ACMPNE, label6);
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine$AsyncState", "COMPLETING", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitJumpInsn(GOTO, label3);
methodVisitor.visitLabel(label6);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitTypeInsn(NEW, "java/lang/IllegalStateException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine", "sm", "Lorg/apache/tomcat/util/res/StringManager;");
methodVisitor.visitLdcInsn("asyncStateMachine.invalidAsyncState");
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Object");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitLdcInsn("asyncComplete()");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/tomcat/util/res/StringManager", "getString", "(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/IllegalStateException", "<init>", "(Ljava/lang/String;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ILOAD, 1);
methodVisitor.visitInsn(IRETURN);
methodVisitor.visitMaxs(8, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_SYNCHRONIZED, "asyncTimeout", "()Z", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine$AsyncState", "STARTED", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
Label label0 = new Label();
methodVisitor.visitJumpInsn(IF_ACMPNE, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine$AsyncState", "TIMING_OUT", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IRETURN);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine$AsyncState", "COMPLETING", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
Label label1 = new Label();
methodVisitor.visitJumpInsn(IF_ACMPEQ, label1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine$AsyncState", "DISPATCHING", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitJumpInsn(IF_ACMPEQ, label1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine$AsyncState", "DISPATCHED", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
Label label2 = new Label();
methodVisitor.visitJumpInsn(IF_ACMPNE, label2);
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IRETURN);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitTypeInsn(NEW, "java/lang/IllegalStateException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine", "sm", "Lorg/apache/tomcat/util/res/StringManager;");
methodVisitor.visitLdcInsn("asyncStateMachine.invalidAsyncState");
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Object");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitLdcInsn("asyncTimeout()");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/tomcat/util/res/StringManager", "getString", "(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/IllegalStateException", "<init>", "(Ljava/lang/String;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitMaxs(8, 1);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_SYNCHRONIZED, "asyncDispatch", "()Z", null, null);
methodVisitor.visitCode();
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/coyote/ContainerThreadMarker", "isContainerThread", "()Z", false);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNE, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine$AsyncState", "STARTING", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitJumpInsn(IF_ACMPNE, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine$AsyncState", "DISPATCH_PENDING", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IRETURN);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/coyote/AsyncStateMachine", "clearNonBlockingListeners", "()V", false);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine$AsyncState", "STARTING", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
Label label1 = new Label();
methodVisitor.visitJumpInsn(IF_ACMPEQ, label1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine$AsyncState", "MUST_ERROR", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
Label label2 = new Label();
methodVisitor.visitJumpInsn(IF_ACMPNE, label2);
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine$AsyncState", "MUST_DISPATCH", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
Label label3 = new Label();
methodVisitor.visitJumpInsn(GOTO, label3);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine$AsyncState", "STARTED", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
Label label4 = new Label();
methodVisitor.visitJumpInsn(IF_ACMPNE, label4);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine$AsyncState", "DISPATCHING", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ISTORE, 1);
methodVisitor.visitJumpInsn(GOTO, label3);
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine$AsyncState", "READ_WRITE_OP", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
Label label5 = new Label();
methodVisitor.visitJumpInsn(IF_ACMPEQ, label5);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine$AsyncState", "TIMING_OUT", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitJumpInsn(IF_ACMPEQ, label5);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine$AsyncState", "ERROR", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
Label label6 = new Label();
methodVisitor.visitJumpInsn(IF_ACMPNE, label6);
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine$AsyncState", "DISPATCHING", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitJumpInsn(GOTO, label3);
methodVisitor.visitLabel(label6);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitTypeInsn(NEW, "java/lang/IllegalStateException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine", "sm", "Lorg/apache/tomcat/util/res/StringManager;");
methodVisitor.visitLdcInsn("asyncStateMachine.invalidAsyncState");
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Object");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitLdcInsn("asyncDispatch()");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/tomcat/util/res/StringManager", "getString", "(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/IllegalStateException", "<init>", "(Ljava/lang/String;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ILOAD, 1);
methodVisitor.visitInsn(IRETURN);
methodVisitor.visitMaxs(8, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_SYNCHRONIZED, "asyncDispatched", "()V", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine$AsyncState", "DISPATCHING", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
Label label0 = new Label();
methodVisitor.visitJumpInsn(IF_ACMPEQ, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine$AsyncState", "MUST_DISPATCH", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
Label label1 = new Label();
methodVisitor.visitJumpInsn(IF_ACMPNE, label1);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine$AsyncState", "DISPATCHED", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
Label label2 = new Label();
methodVisitor.visitJumpInsn(GOTO, label2);
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitTypeInsn(NEW, "java/lang/IllegalStateException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine", "sm", "Lorg/apache/tomcat/util/res/StringManager;");
methodVisitor.visitLdcInsn("asyncStateMachine.invalidAsyncState");
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Object");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitLdcInsn("asyncDispatched()");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/tomcat/util/res/StringManager", "getString", "(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/IllegalStateException", "<init>", "(Ljava/lang/String;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(8, 1);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_SYNCHRONIZED, "asyncError", "()Z", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/coyote/AsyncStateMachine", "clearNonBlockingListeners", "()V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine$AsyncState", "STARTING", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
Label label0 = new Label();
methodVisitor.visitJumpInsn(IF_ACMPNE, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine$AsyncState", "MUST_ERROR", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
Label label1 = new Label();
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine$AsyncState", "ERROR", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/coyote/ContainerThreadMarker", "isContainerThread", "()Z", false);
Label label2 = new Label();
methodVisitor.visitJumpInsn(IFNE, label2);
methodVisitor.visitInsn(ICONST_1);
Label label3 = new Label();
methodVisitor.visitJumpInsn(GOTO, label3);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {Opcodes.INTEGER});
methodVisitor.visitInsn(IRETURN);
methodVisitor.visitMaxs(2, 1);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_SYNCHRONIZED, "asyncRun", "(Ljava/lang/Runnable;)V", null, null);
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, null);
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label2, label3, label2, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine$AsyncState", "STARTING", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
Label label4 = new Label();
methodVisitor.visitJumpInsn(IF_ACMPEQ, label4);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine$AsyncState", "STARTED", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitJumpInsn(IF_ACMPEQ, label4);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine$AsyncState", "READ_WRITE_OP", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
Label label5 = new Label();
methodVisitor.visitJumpInsn(IF_ACMPNE, label5);
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/Constants", "IS_SECURITY_ENABLED", "Z");
Label label6 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label6);
methodVisitor.visitTypeInsn(NEW, "org/apache/tomcat/util/security/PrivilegedGetTccl");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/tomcat/util/security/PrivilegedGetTccl", "<init>", "()V", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKESTATIC, "java/security/AccessController", "doPrivileged", "(Ljava/security/PrivilegedAction;)Ljava/lang/Object;", false);
methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/ClassLoader");
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitJumpInsn(GOTO, label0);
methodVisitor.visitLabel(label6);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/Thread", "currentThread", "()Ljava/lang/Thread;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Thread", "getContextClassLoader", "()Ljava/lang/ClassLoader;", false);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"java/lang/ClassLoader"}, 0, null);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/Constants", "IS_SECURITY_ENABLED", "Z");
Label label7 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label7);
methodVisitor.visitTypeInsn(NEW, "org/apache/tomcat/util/security/PrivilegedSetTccl");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Object", "getClass", "()Ljava/lang/Class;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getClassLoader", "()Ljava/lang/ClassLoader;", false);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/tomcat/util/security/PrivilegedSetTccl", "<init>", "(Ljava/lang/ClassLoader;)V", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKESTATIC, "java/security/AccessController", "doPrivileged", "(Ljava/security/PrivilegedAction;)Ljava/lang/Object;", false);
methodVisitor.visitInsn(POP);
Label label8 = new Label();
methodVisitor.visitJumpInsn(GOTO, label8);
methodVisitor.visitLabel(label7);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/Thread", "currentThread", "()Ljava/lang/Thread;", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Object", "getClass", "()Ljava/lang/Class;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getClassLoader", "()Ljava/lang/ClassLoader;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Thread", "setContextClassLoader", "(Ljava/lang/ClassLoader;)V", false);
methodVisitor.visitLabel(label8);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/coyote/AsyncStateMachine", "processor", "Lorg/apache/coyote/AbstractProcessor;");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/coyote/AbstractProcessor", "execute", "(Ljava/lang/Runnable;)V", false);
methodVisitor.visitLabel(label1);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/Constants", "IS_SECURITY_ENABLED", "Z");
Label label9 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label9);
methodVisitor.visitTypeInsn(NEW, "org/apache/tomcat/util/security/PrivilegedSetTccl");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/tomcat/util/security/PrivilegedSetTccl", "<init>", "(Ljava/lang/ClassLoader;)V", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKESTATIC, "java/security/AccessController", "doPrivileged", "(Ljava/security/PrivilegedAction;)Ljava/lang/Object;", false);
methodVisitor.visitInsn(POP);
Label label10 = new Label();
methodVisitor.visitJumpInsn(GOTO, label10);
methodVisitor.visitLabel(label9);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/Thread", "currentThread", "()Ljava/lang/Thread;", false);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Thread", "setContextClassLoader", "(Ljava/lang/ClassLoader;)V", false);
methodVisitor.visitJumpInsn(GOTO, label10);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/Throwable"});
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitLabel(label3);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/Constants", "IS_SECURITY_ENABLED", "Z");
Label label11 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label11);
methodVisitor.visitTypeInsn(NEW, "org/apache/tomcat/util/security/PrivilegedSetTccl");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/tomcat/util/security/PrivilegedSetTccl", "<init>", "(Ljava/lang/ClassLoader;)V", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKESTATIC, "java/security/AccessController", "doPrivileged", "(Ljava/security/PrivilegedAction;)Ljava/lang/Object;", false);
methodVisitor.visitInsn(POP);
Label label12 = new Label();
methodVisitor.visitJumpInsn(GOTO, label12);
methodVisitor.visitLabel(label11);
methodVisitor.visitFrame(Opcodes.F_APPEND,2, new Object[] {Opcodes.TOP, "java/lang/Throwable"}, 0, null);
methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/Thread", "currentThread", "()Ljava/lang/Thread;", false);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Thread", "setContextClassLoader", "(Ljava/lang/ClassLoader;)V", false);
methodVisitor.visitLabel(label12);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label10);
methodVisitor.visitFrame(Opcodes.F_CHOP,3, null, 0, null);
Label label13 = new Label();
methodVisitor.visitJumpInsn(GOTO, label13);
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitTypeInsn(NEW, "java/lang/IllegalStateException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine", "sm", "Lorg/apache/tomcat/util/res/StringManager;");
methodVisitor.visitLdcInsn("asyncStateMachine.invalidAsyncState");
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Object");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitLdcInsn("asyncRun()");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/tomcat/util/res/StringManager", "getString", "(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/IllegalStateException", "<init>", "(Ljava/lang/String;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label13);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(8, 6);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_SYNCHRONIZED, "isAvailable", "()Z", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/coyote/AsyncStateMachine", "asyncCtxt", "Lorg/apache/coyote/AsyncContextCallback;");
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IRETURN);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/coyote/AsyncStateMachine", "asyncCtxt", "Lorg/apache/coyote/AsyncContextCallback;");
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/coyote/AsyncContextCallback", "isAvailable", "()Z", true);
methodVisitor.visitInsn(IRETURN);
methodVisitor.visitMaxs(1, 1);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_SYNCHRONIZED, "recycle", "()V", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/coyote/AsyncStateMachine", "lastAsyncStart", "J");
methodVisitor.visitInsn(LCONST_0);
methodVisitor.visitInsn(LCMP);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNE, label0);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Object", "notifyAll", "()V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/coyote/AsyncStateMachine", "asyncCtxt", "Lorg/apache/coyote/AsyncContextCallback;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/coyote/AsyncStateMachine$AsyncState", "DISPATCHED", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/coyote/AsyncStateMachine", "state", "Lorg/apache/coyote/AsyncStateMachine$AsyncState;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitInsn(LCONST_0);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/coyote/AsyncStateMachine", "lastAsyncStart", "J");
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(4, 1);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PRIVATE, "clearNonBlockingListeners", "()V", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/coyote/AsyncStateMachine", "processor", "Lorg/apache/coyote/AbstractProcessor;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/coyote/AbstractProcessor", "getRequest", "()Lorg/apache/coyote/Request;", false);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/coyote/Request", "listener", "Ljakarta/servlet/ReadListener;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/coyote/AsyncStateMachine", "processor", "Lorg/apache/coyote/AbstractProcessor;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/coyote/AbstractProcessor", "getRequest", "()Lorg/apache/coyote/Request;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/coyote/Request", "getResponse", "()Lorg/apache/coyote/Response;", false);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/coyote/Response", "listener", "Ljakarta/servlet/WriteListener;");
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(2, 1);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_STATIC, "<clinit>", "()V", null, null);
methodVisitor.visitCode();
methodVisitor.visitLdcInsn(Type.getType("Lorg/apache/coyote/AsyncStateMachine;"));
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/tomcat/util/res/StringManager", "getManager", "(Ljava/lang/Class;)Lorg/apache/tomcat/util/res/StringManager;", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/coyote/AsyncStateMachine", "sm", "Lorg/apache/tomcat/util/res/StringManager;");
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(1, 0);
methodVisitor.visitEnd();
}
classWriter.visitEnd();

return classWriter.toByteArray();
}
}
