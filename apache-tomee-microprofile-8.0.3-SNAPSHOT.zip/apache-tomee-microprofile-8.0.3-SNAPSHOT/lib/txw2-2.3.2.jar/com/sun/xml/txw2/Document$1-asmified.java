package asm.com.sun.xml.txw2;
import org.objectweb.asm.AnnotationVisitor;
import org.objectweb.asm.Attribute;
import org.objectweb.asm.ClassReader;
import org.objectweb.asm.ClassWriter;
import org.objectweb.asm.ConstantDynamic;
import org.objectweb.asm.FieldVisitor;
import org.objectweb.asm.Handle;
import org.objectweb.asm.Label;
import org.objectweb.asm.MethodVisitor;
import org.objectweb.asm.Opcodes;
import org.objectweb.asm.RecordComponentVisitor;
import org.objectweb.asm.Type;
import org.objectweb.asm.TypePath;
public class Document$1Dump implements Opcodes {

public static byte[] dump () throws Exception {

ClassWriter classWriter = new ClassWriter(0);
FieldVisitor fieldVisitor;
RecordComponentVisitor recordComponentVisitor;
MethodVisitor methodVisitor;
AnnotationVisitor annotationVisitor0;

classWriter.visit(V1_7, ACC_SUPER, "com/sun/xml/txw2/Document$1", null, "java/lang/Object", new String[] { "com/sun/xml/txw2/ContentVisitor" });

classWriter.visitOuterClass("com/sun/xml/txw2/Document", null, null);

classWriter.visitInnerClass("com/sun/xml/txw2/Document$1", null, null, 0);

{
fieldVisitor = classWriter.visitField(ACC_FINAL | ACC_STATIC | ACC_SYNTHETIC, "$assertionsDisabled", "Z", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_FINAL | ACC_SYNTHETIC, "this$0", "Lcom/sun/xml/txw2/Document;", null, null);
fieldVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "<init>", "(Lcom/sun/xml/txw2/Document;)V", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(PUTFIELD, "com/sun/xml/txw2/Document$1", "this$0", "Lcom/sun/xml/txw2/Document;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/Object", "<init>", "()V", false);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(2, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "onStartDocument", "()V", null, null);
methodVisitor.visitCode();
methodVisitor.visitTypeInsn(NEW, "java/lang/IllegalStateException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/IllegalStateException", "<init>", "()V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitMaxs(2, 1);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "onEndDocument", "()V", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/xml/txw2/Document$1", "this$0", "Lcom/sun/xml/txw2/Document;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "com/sun/xml/txw2/Document", "access$000", "(Lcom/sun/xml/txw2/Document;)Lcom/sun/xml/txw2/output/XmlSerializer;", false);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/sun/xml/txw2/output/XmlSerializer", "endDocument", "()V", true);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(1, 1);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "onEndTag", "()V", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/xml/txw2/Document$1", "this$0", "Lcom/sun/xml/txw2/Document;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "com/sun/xml/txw2/Document", "access$000", "(Lcom/sun/xml/txw2/Document;)Lcom/sun/xml/txw2/output/XmlSerializer;", false);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/sun/xml/txw2/output/XmlSerializer", "endTag", "()V", true);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/xml/txw2/Document$1", "this$0", "Lcom/sun/xml/txw2/Document;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "com/sun/xml/txw2/Document", "access$100", "(Lcom/sun/xml/txw2/Document;)Lcom/sun/xml/txw2/NamespaceSupport;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/sun/xml/txw2/NamespaceSupport", "popContext", "()V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/xml/txw2/Document$1", "this$0", "Lcom/sun/xml/txw2/Document;");
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitMethodInsn(INVOKESTATIC, "com/sun/xml/txw2/Document", "access$202", "(Lcom/sun/xml/txw2/Document;Lcom/sun/xml/txw2/NamespaceDecl;)Lcom/sun/xml/txw2/NamespaceDecl;", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(2, 1);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "onPcdata", "(Ljava/lang/StringBuilder;)V", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/xml/txw2/Document$1", "this$0", "Lcom/sun/xml/txw2/Document;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "com/sun/xml/txw2/Document", "access$200", "(Lcom/sun/xml/txw2/Document;)Lcom/sun/xml/txw2/NamespaceDecl;", false);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/xml/txw2/Document$1", "this$0", "Lcom/sun/xml/txw2/Document;");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKESTATIC, "com/sun/xml/txw2/Document", "access$300", "(Lcom/sun/xml/txw2/Document;Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/xml/txw2/Document$1", "this$0", "Lcom/sun/xml/txw2/Document;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "com/sun/xml/txw2/Document", "access$000", "(Lcom/sun/xml/txw2/Document;)Lcom/sun/xml/txw2/output/XmlSerializer;", false);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/sun/xml/txw2/output/XmlSerializer", "text", "(Ljava/lang/StringBuilder;)V", true);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(2, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "onCdata", "(Ljava/lang/StringBuilder;)V", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/xml/txw2/Document$1", "this$0", "Lcom/sun/xml/txw2/Document;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "com/sun/xml/txw2/Document", "access$200", "(Lcom/sun/xml/txw2/Document;)Lcom/sun/xml/txw2/NamespaceDecl;", false);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/xml/txw2/Document$1", "this$0", "Lcom/sun/xml/txw2/Document;");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKESTATIC, "com/sun/xml/txw2/Document", "access$300", "(Lcom/sun/xml/txw2/Document;Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/xml/txw2/Document$1", "this$0", "Lcom/sun/xml/txw2/Document;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "com/sun/xml/txw2/Document", "access$000", "(Lcom/sun/xml/txw2/Document;)Lcom/sun/xml/txw2/output/XmlSerializer;", false);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/sun/xml/txw2/output/XmlSerializer", "cdata", "(Ljava/lang/StringBuilder;)V", true);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(2, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "onComment", "(Ljava/lang/StringBuilder;)V", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/xml/txw2/Document$1", "this$0", "Lcom/sun/xml/txw2/Document;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "com/sun/xml/txw2/Document", "access$200", "(Lcom/sun/xml/txw2/Document;)Lcom/sun/xml/txw2/NamespaceDecl;", false);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/xml/txw2/Document$1", "this$0", "Lcom/sun/xml/txw2/Document;");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKESTATIC, "com/sun/xml/txw2/Document", "access$300", "(Lcom/sun/xml/txw2/Document;Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/xml/txw2/Document$1", "this$0", "Lcom/sun/xml/txw2/Document;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "com/sun/xml/txw2/Document", "access$000", "(Lcom/sun/xml/txw2/Document;)Lcom/sun/xml/txw2/output/XmlSerializer;", false);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/sun/xml/txw2/output/XmlSerializer", "comment", "(Ljava/lang/StringBuilder;)V", true);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(2, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "onStartTag", "(Ljava/lang/String;Ljava/lang/String;Lcom/sun/xml/txw2/Attribute;Lcom/sun/xml/txw2/NamespaceDecl;)V", null, null);
methodVisitor.visitCode();
methodVisitor.visitFieldInsn(GETSTATIC, "com/sun/xml/txw2/Document$1", "$assertionsDisabled", "Z");
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNE, label0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitJumpInsn(IFNONNULL, label0);
methodVisitor.visitTypeInsn(NEW, "java/lang/AssertionError");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/AssertionError", "<init>", "()V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitFieldInsn(GETSTATIC, "com/sun/xml/txw2/Document$1", "$assertionsDisabled", "Z");
Label label1 = new Label();
methodVisitor.visitJumpInsn(IFNE, label1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitJumpInsn(IFNONNULL, label1);
methodVisitor.visitTypeInsn(NEW, "java/lang/AssertionError");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/AssertionError", "<init>", "()V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/xml/txw2/Document$1", "this$0", "Lcom/sun/xml/txw2/Document;");
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKESTATIC, "com/sun/xml/txw2/Document", "access$202", "(Lcom/sun/xml/txw2/Document;Lcom/sun/xml/txw2/NamespaceDecl;)Lcom/sun/xml/txw2/NamespaceDecl;", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/xml/txw2/Document$1", "this$0", "Lcom/sun/xml/txw2/Document;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "com/sun/xml/txw2/Document", "access$400", "(Lcom/sun/xml/txw2/Document;)Z", false);
Label label2 = new Label();
methodVisitor.visitJumpInsn(IFNE, label2);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/xml/txw2/Document$1", "this$0", "Lcom/sun/xml/txw2/Document;");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitMethodInsn(INVOKESTATIC, "com/sun/xml/txw2/Document", "access$402", "(Lcom/sun/xml/txw2/Document;Z)Z", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/xml/txw2/Document$1", "this$0", "Lcom/sun/xml/txw2/Document;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "com/sun/xml/txw2/Document", "access$000", "(Lcom/sun/xml/txw2/Document;)Lcom/sun/xml/txw2/output/XmlSerializer;", false);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/sun/xml/txw2/output/XmlSerializer", "startDocument", "()V", true);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/xml/txw2/Document$1", "this$0", "Lcom/sun/xml/txw2/Document;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "com/sun/xml/txw2/Document", "access$100", "(Lcom/sun/xml/txw2/Document;)Lcom/sun/xml/txw2/NamespaceSupport;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/sun/xml/txw2/NamespaceSupport", "pushContext", "()V", false);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitVarInsn(ASTORE, 5);
Label label3 = new Label();
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"com/sun/xml/txw2/NamespaceDecl"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 5);
Label label4 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label4);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitFieldInsn(PUTFIELD, "com/sun/xml/txw2/NamespaceDecl", "declared", "Z");
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/xml/txw2/NamespaceDecl", "prefix", "Ljava/lang/String;");
Label label5 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label5);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/xml/txw2/Document$1", "this$0", "Lcom/sun/xml/txw2/Document;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "com/sun/xml/txw2/Document", "access$100", "(Lcom/sun/xml/txw2/Document;)Lcom/sun/xml/txw2/NamespaceSupport;", false);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/xml/txw2/NamespaceDecl", "prefix", "Ljava/lang/String;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/sun/xml/txw2/NamespaceSupport", "getURI", "(Ljava/lang/String;)Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 6);
Label label6 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label6);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/xml/txw2/NamespaceDecl", "uri", "Ljava/lang/String;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
methodVisitor.visitJumpInsn(IFEQ, label6);
methodVisitor.visitJumpInsn(GOTO, label5);
methodVisitor.visitLabel(label6);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"java/lang/String"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/xml/txw2/Document$1", "this$0", "Lcom/sun/xml/txw2/Document;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "com/sun/xml/txw2/Document", "access$100", "(Lcom/sun/xml/txw2/Document;)Lcom/sun/xml/txw2/NamespaceSupport;", false);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/xml/txw2/NamespaceDecl", "prefix", "Ljava/lang/String;");
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/xml/txw2/NamespaceDecl", "uri", "Ljava/lang/String;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/sun/xml/txw2/NamespaceSupport", "declarePrefix", "(Ljava/lang/String;Ljava/lang/String;)Z", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitFieldInsn(PUTFIELD, "com/sun/xml/txw2/NamespaceDecl", "declared", "Z");
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/xml/txw2/NamespaceDecl", "next", "Lcom/sun/xml/txw2/NamespaceDecl;");
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitJumpInsn(GOTO, label3);
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitVarInsn(ASTORE, 5);
Label label7 = new Label();
methodVisitor.visitLabel(label7);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"com/sun/xml/txw2/NamespaceDecl"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 5);
Label label8 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label8);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/xml/txw2/NamespaceDecl", "prefix", "Ljava/lang/String;");
Label label9 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label9);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/xml/txw2/Document$1", "this$0", "Lcom/sun/xml/txw2/Document;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "com/sun/xml/txw2/Document", "access$100", "(Lcom/sun/xml/txw2/Document;)Lcom/sun/xml/txw2/NamespaceSupport;", false);
methodVisitor.visitLdcInsn("");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/sun/xml/txw2/NamespaceSupport", "getURI", "(Ljava/lang/String;)Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/xml/txw2/NamespaceDecl", "uri", "Ljava/lang/String;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
Label label10 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label10);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitLdcInsn("");
methodVisitor.visitFieldInsn(PUTFIELD, "com/sun/xml/txw2/NamespaceDecl", "prefix", "Ljava/lang/String;");
methodVisitor.visitJumpInsn(GOTO, label9);
methodVisitor.visitLabel(label10);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/xml/txw2/Document$1", "this$0", "Lcom/sun/xml/txw2/Document;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "com/sun/xml/txw2/Document", "access$100", "(Lcom/sun/xml/txw2/Document;)Lcom/sun/xml/txw2/NamespaceSupport;", false);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/xml/txw2/NamespaceDecl", "uri", "Ljava/lang/String;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/sun/xml/txw2/NamespaceSupport", "getPrefix", "(Ljava/lang/String;)Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 6);
Label label11 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label11);
Label label12 = new Label();
methodVisitor.visitLabel(label12);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"java/lang/String"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/xml/txw2/Document$1", "this$0", "Lcom/sun/xml/txw2/Document;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "com/sun/xml/txw2/Document", "access$100", "(Lcom/sun/xml/txw2/Document;)Lcom/sun/xml/txw2/NamespaceSupport;", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/xml/txw2/Document$1", "this$0", "Lcom/sun/xml/txw2/Document;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "com/sun/xml/txw2/Document", "access$500", "(Lcom/sun/xml/txw2/Document;)Ljava/lang/String;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/sun/xml/txw2/NamespaceSupport", "getURI", "(Ljava/lang/String;)Ljava/lang/String;", false);
Label label13 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label13);
methodVisitor.visitJumpInsn(GOTO, label12);
methodVisitor.visitLabel(label13);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitFieldInsn(PUTFIELD, "com/sun/xml/txw2/NamespaceDecl", "declared", "Z");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/xml/txw2/Document$1", "this$0", "Lcom/sun/xml/txw2/Document;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "com/sun/xml/txw2/Document", "access$100", "(Lcom/sun/xml/txw2/Document;)Lcom/sun/xml/txw2/NamespaceSupport;", false);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/xml/txw2/NamespaceDecl", "uri", "Ljava/lang/String;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/sun/xml/txw2/NamespaceSupport", "declarePrefix", "(Ljava/lang/String;Ljava/lang/String;)Z", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitLabel(label11);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitFieldInsn(PUTFIELD, "com/sun/xml/txw2/NamespaceDecl", "prefix", "Ljava/lang/String;");
methodVisitor.visitLabel(label9);
methodVisitor.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/xml/txw2/NamespaceDecl", "next", "Lcom/sun/xml/txw2/NamespaceDecl;");
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitJumpInsn(GOTO, label7);
methodVisitor.visitLabel(label8);
methodVisitor.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
methodVisitor.visitFieldInsn(GETSTATIC, "com/sun/xml/txw2/Document$1", "$assertionsDisabled", "Z");
Label label14 = new Label();
methodVisitor.visitJumpInsn(IFNE, label14);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/xml/txw2/NamespaceDecl", "uri", "Ljava/lang/String;");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
methodVisitor.visitJumpInsn(IFNE, label14);
methodVisitor.visitTypeInsn(NEW, "java/lang/AssertionError");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/AssertionError", "<init>", "()V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label14);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitFieldInsn(GETSTATIC, "com/sun/xml/txw2/Document$1", "$assertionsDisabled", "Z");
Label label15 = new Label();
methodVisitor.visitJumpInsn(IFNE, label15);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/xml/txw2/NamespaceDecl", "prefix", "Ljava/lang/String;");
methodVisitor.visitJumpInsn(IFNONNULL, label15);
methodVisitor.visitTypeInsn(NEW, "java/lang/AssertionError");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("a prefix must have been all allocated");
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/AssertionError", "<init>", "(Ljava/lang/Object;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label15);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/xml/txw2/Document$1", "this$0", "Lcom/sun/xml/txw2/Document;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "com/sun/xml/txw2/Document", "access$000", "(Lcom/sun/xml/txw2/Document;)Lcom/sun/xml/txw2/output/XmlSerializer;", false);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/xml/txw2/NamespaceDecl", "prefix", "Ljava/lang/String;");
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/sun/xml/txw2/output/XmlSerializer", "beginStartTag", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", true);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitVarInsn(ASTORE, 5);
Label label16 = new Label();
methodVisitor.visitLabel(label16);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"com/sun/xml/txw2/NamespaceDecl"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 5);
Label label17 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label17);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/xml/txw2/NamespaceDecl", "declared", "Z");
Label label18 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label18);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/xml/txw2/Document$1", "this$0", "Lcom/sun/xml/txw2/Document;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "com/sun/xml/txw2/Document", "access$000", "(Lcom/sun/xml/txw2/Document;)Lcom/sun/xml/txw2/output/XmlSerializer;", false);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/xml/txw2/NamespaceDecl", "prefix", "Ljava/lang/String;");
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/xml/txw2/NamespaceDecl", "uri", "Ljava/lang/String;");
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/sun/xml/txw2/output/XmlSerializer", "writeXmlns", "(Ljava/lang/String;Ljava/lang/String;)V", true);
methodVisitor.visitLabel(label18);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/xml/txw2/NamespaceDecl", "next", "Lcom/sun/xml/txw2/NamespaceDecl;");
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitJumpInsn(GOTO, label16);
methodVisitor.visitLabel(label17);
methodVisitor.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ASTORE, 5);
Label label19 = new Label();
methodVisitor.visitLabel(label19);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"com/sun/xml/txw2/Attribute"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 5);
Label label20 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label20);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/xml/txw2/Attribute", "nsUri", "Ljava/lang/String;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "length", "()I", false);
Label label21 = new Label();
methodVisitor.visitJumpInsn(IFNE, label21);
methodVisitor.visitLdcInsn("");
methodVisitor.visitVarInsn(ASTORE, 6);
Label label22 = new Label();
methodVisitor.visitJumpInsn(GOTO, label22);
methodVisitor.visitLabel(label21);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/xml/txw2/Document$1", "this$0", "Lcom/sun/xml/txw2/Document;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "com/sun/xml/txw2/Document", "access$100", "(Lcom/sun/xml/txw2/Document;)Lcom/sun/xml/txw2/NamespaceSupport;", false);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/xml/txw2/Attribute", "nsUri", "Ljava/lang/String;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/sun/xml/txw2/NamespaceSupport", "getPrefix", "(Ljava/lang/String;)Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitLabel(label22);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"java/lang/String"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/xml/txw2/Document$1", "this$0", "Lcom/sun/xml/txw2/Document;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "com/sun/xml/txw2/Document", "access$000", "(Lcom/sun/xml/txw2/Document;)Lcom/sun/xml/txw2/output/XmlSerializer;", false);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/xml/txw2/Attribute", "nsUri", "Ljava/lang/String;");
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/xml/txw2/Attribute", "localName", "Ljava/lang/String;");
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/xml/txw2/Document$1", "this$0", "Lcom/sun/xml/txw2/Document;");
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/xml/txw2/Attribute", "value", "Ljava/lang/StringBuilder;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "com/sun/xml/txw2/Document", "access$300", "(Lcom/sun/xml/txw2/Document;Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/sun/xml/txw2/output/XmlSerializer", "writeAttribute", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/StringBuilder;)V", true);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/xml/txw2/Attribute", "next", "Lcom/sun/xml/txw2/Attribute;");
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitJumpInsn(GOTO, label19);
methodVisitor.visitLabel(label20);
methodVisitor.visitFrame(Opcodes.F_CHOP,2, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/xml/txw2/Document$1", "this$0", "Lcom/sun/xml/txw2/Document;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "com/sun/xml/txw2/Document", "access$000", "(Lcom/sun/xml/txw2/Document;)Lcom/sun/xml/txw2/output/XmlSerializer;", false);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitFieldInsn(GETFIELD, "com/sun/xml/txw2/NamespaceDecl", "prefix", "Ljava/lang/String;");
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/sun/xml/txw2/output/XmlSerializer", "endStartTag", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", true);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(6, 7);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_STATIC, "<clinit>", "()V", null, null);
methodVisitor.visitCode();
methodVisitor.visitLdcInsn(Type.getType("Lcom/sun/xml/txw2/Document;"));
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "desiredAssertionStatus", "()Z", false);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNE, label0);
methodVisitor.visitInsn(ICONST_1);
Label label1 = new Label();
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {Opcodes.INTEGER});
methodVisitor.visitFieldInsn(PUTSTATIC, "com/sun/xml/txw2/Document$1", "$assertionsDisabled", "Z");
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(1, 0);
methodVisitor.visitEnd();
}
classWriter.visitEnd();

return classWriter.toByteArray();
}
}
