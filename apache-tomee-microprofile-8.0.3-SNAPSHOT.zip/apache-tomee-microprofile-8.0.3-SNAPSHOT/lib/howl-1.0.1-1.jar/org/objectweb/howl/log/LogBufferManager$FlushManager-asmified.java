package asm.org.objectweb.howl.log;
import org.objectweb.asm.AnnotationVisitor;
import org.objectweb.asm.Attribute;
import org.objectweb.asm.ClassReader;
import org.objectweb.asm.ClassWriter;
import org.objectweb.asm.ConstantDynamic;
import org.objectweb.asm.FieldVisitor;
import org.objectweb.asm.Handle;
import org.objectweb.asm.Label;
import org.objectweb.asm.MethodVisitor;
import org.objectweb.asm.Opcodes;
import org.objectweb.asm.RecordComponentVisitor;
import org.objectweb.asm.Type;
import org.objectweb.asm.TypePath;
public class LogBufferManager$FlushManagerDump implements Opcodes {

public static byte[] dump () throws Exception {

ClassWriter classWriter = new ClassWriter(0);
FieldVisitor fieldVisitor;
RecordComponentVisitor recordComponentVisitor;
MethodVisitor methodVisitor;
AnnotationVisitor annotationVisitor0;

classWriter.visit(V1_4, ACC_SUPER, "org/objectweb/howl/log/LogBufferManager$FlushManager", null, "java/lang/Thread", null);

classWriter.visitInnerClass("org/objectweb/howl/log/LogBufferManager$FlushManager", "org/objectweb/howl/log/LogBufferManager", "FlushManager", 0);

{
fieldVisitor = classWriter.visitField(0, "isClosed", "Z", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_FINAL | ACC_SYNTHETIC, "this$0", "Lorg/objectweb/howl/log/LogBufferManager;", null, null);
fieldVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "<init>", "(Lorg/objectweb/howl/log/LogBufferManager;Ljava/lang/String;)V", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(PUTFIELD, "org/objectweb/howl/log/LogBufferManager$FlushManager", "this$0", "Lorg/objectweb/howl/log/LogBufferManager;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/Thread", "<init>", "(Ljava/lang/String;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitFieldInsn(PUTFIELD, "org/objectweb/howl/log/LogBufferManager$FlushManager", "isClosed", "Z");
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(2, 3);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "run", "()V", null, null);
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/lang/ClassNotFoundException");
Label label3 = new Label();
Label label4 = new Label();
Label label5 = new Label();
methodVisitor.visitTryCatchBlock(label3, label4, label5, null);
Label label6 = new Label();
methodVisitor.visitTryCatchBlock(label5, label6, label5, null);
Label label7 = new Label();
Label label8 = new Label();
Label label9 = new Label();
methodVisitor.visitTryCatchBlock(label7, label8, label9, null);
Label label10 = new Label();
methodVisitor.visitTryCatchBlock(label9, label10, label9, null);
Label label11 = new Label();
Label label12 = new Label();
Label label13 = new Label();
methodVisitor.visitTryCatchBlock(label11, label12, label13, null);
Label label14 = new Label();
methodVisitor.visitTryCatchBlock(label13, label14, label13, null);
Label label15 = new Label();
Label label16 = new Label();
Label label17 = new Label();
methodVisitor.visitTryCatchBlock(label15, label16, label17, "java/lang/InterruptedException");
Label label18 = new Label();
Label label19 = new Label();
methodVisitor.visitTryCatchBlock(label18, label19, label17, "java/lang/InterruptedException");
Label label20 = new Label();
methodVisitor.visitTryCatchBlock(label15, label16, label20, "java/io/IOException");
methodVisitor.visitTryCatchBlock(label18, label19, label20, "java/io/IOException");
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/objectweb/howl/log/LogBufferManager$FlushManager", "this$0", "Lorg/objectweb/howl/log/LogBufferManager;");
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/objectweb/howl/log/LogBufferManager$FlushManager", "this$0", "Lorg/objectweb/howl/log/LogBufferManager;");
methodVisitor.visitFieldInsn(GETFIELD, "org/objectweb/howl/log/LogBufferManager", "config", "Lorg/objectweb/howl/log/Configuration;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/objectweb/howl/log/Configuration", "getFlushSleepTime", "()I", false);
methodVisitor.visitVarInsn(ISTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/objectweb/howl/log/LogBufferManager", "getWaitForBuffer", "()J", false);
methodVisitor.visitVarInsn(LSTORE, 4);
Label label21 = new Label();
methodVisitor.visitLabel(label21);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/objectweb/howl/log/LogBufferManager$FlushManager", "interrupted", "()Z", false);
methodVisitor.visitJumpInsn(IFEQ, label15);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitLabel(label15);
methodVisitor.visitVarInsn(ILOAD, 3);
methodVisitor.visitInsn(I2L);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/objectweb/howl/log/LogBufferManager$FlushManager", "sleep", "(J)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/objectweb/howl/log/LogBufferManager$FlushManager", "isClosed", "Z");
methodVisitor.visitJumpInsn(IFEQ, label18);
methodVisitor.visitLabel(label16);
methodVisitor.visitJumpInsn(GOTO, label21);
methodVisitor.visitLabel(label18);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/objectweb/howl/log/LogBufferManager", "getWaitForBuffer", "()J", false);
methodVisitor.visitVarInsn(LLOAD, 4);
methodVisitor.visitInsn(LSUB);
methodVisitor.visitVarInsn(LSTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/objectweb/howl/log/LogBufferManager$FlushManager", "this$0", "Lorg/objectweb/howl/log/LogBufferManager;");
methodVisitor.visitFieldInsn(GETFIELD, "org/objectweb/howl/log/LogBufferManager", "config", "Lorg/objectweb/howl/log/Configuration;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/objectweb/howl/log/Configuration", "getMaxBuffers", "()I", false);
methodVisitor.visitVarInsn(ISTORE, 8);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/objectweb/howl/log/LogBufferManager$FlushManager", "this$0", "Lorg/objectweb/howl/log/LogBufferManager;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/objectweb/howl/log/LogBufferManager", "access$000", "(Lorg/objectweb/howl/log/LogBufferManager;)[Lorg/objectweb/howl/log/LogBuffer;", false);
methodVisitor.visitInsn(ARRAYLENGTH);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(IDIV);
methodVisitor.visitVarInsn(ISTORE, 9);
methodVisitor.visitVarInsn(ILOAD, 8);
Label label22 = new Label();
methodVisitor.visitJumpInsn(IFLE, label22);
methodVisitor.visitVarInsn(ILOAD, 8);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/objectweb/howl/log/LogBufferManager$FlushManager", "this$0", "Lorg/objectweb/howl/log/LogBufferManager;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/objectweb/howl/log/LogBufferManager", "access$000", "(Lorg/objectweb/howl/log/LogBufferManager;)[Lorg/objectweb/howl/log/LogBuffer;", false);
methodVisitor.visitInsn(ARRAYLENGTH);
methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/Math", "max", "(II)I", false);
methodVisitor.visitVarInsn(ISTORE, 8);
methodVisitor.visitVarInsn(ILOAD, 9);
methodVisitor.visitVarInsn(ILOAD, 8);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/objectweb/howl/log/LogBufferManager$FlushManager", "this$0", "Lorg/objectweb/howl/log/LogBufferManager;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/objectweb/howl/log/LogBufferManager", "access$000", "(Lorg/objectweb/howl/log/LogBufferManager;)[Lorg/objectweb/howl/log/LogBuffer;", false);
methodVisitor.visitInsn(ARRAYLENGTH);
methodVisitor.visitInsn(ISUB);
methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/Math", "min", "(II)I", false);
methodVisitor.visitVarInsn(ISTORE, 9);
methodVisitor.visitLabel(label22);
methodVisitor.visitVarInsn(ILOAD, 9);
Label label23 = new Label();
methodVisitor.visitJumpInsn(IFLE, label23);
methodVisitor.visitVarInsn(LLOAD, 6);
methodVisitor.visitVarInsn(ILOAD, 9);
methodVisitor.visitInsn(I2L);
methodVisitor.visitInsn(LCMP);
methodVisitor.visitJumpInsn(IFLE, label23);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/objectweb/howl/log/LogBufferManager$FlushManager", "this$0", "Lorg/objectweb/howl/log/LogBufferManager;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/objectweb/howl/log/LogBufferManager", "access$000", "(Lorg/objectweb/howl/log/LogBufferManager;)[Lorg/objectweb/howl/log/LogBuffer;", false);
methodVisitor.visitInsn(ARRAYLENGTH);
methodVisitor.visitVarInsn(ILOAD, 9);
methodVisitor.visitInsn(IADD);
methodVisitor.visitTypeInsn(ANEWARRAY, "org/objectweb/howl/log/LogBuffer");
methodVisitor.visitVarInsn(ASTORE, 10);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitInsn(ARRAYLENGTH);
methodVisitor.visitTypeInsn(ANEWARRAY, "org/objectweb/howl/log/LogBuffer");
methodVisitor.visitVarInsn(ASTORE, 11);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/objectweb/howl/log/LogBufferManager$FlushManager", "this$0", "Lorg/objectweb/howl/log/LogBufferManager;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/objectweb/howl/log/LogBufferManager", "access$104", "(Lorg/objectweb/howl/log/LogBufferManager;)I", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ISTORE, 12);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/objectweb/howl/log/LogBufferManager$FlushManager", "this$0", "Lorg/objectweb/howl/log/LogBufferManager;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/objectweb/howl/log/LogBufferManager", "access$000", "(Lorg/objectweb/howl/log/LogBufferManager;)[Lorg/objectweb/howl/log/LogBuffer;", false);
methodVisitor.visitInsn(ARRAYLENGTH);
methodVisitor.visitVarInsn(ISTORE, 13);
Label label24 = new Label();
methodVisitor.visitLabel(label24);
methodVisitor.visitVarInsn(ILOAD, 13);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitInsn(ARRAYLENGTH);
Label label25 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPGE, label25);
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitVarInsn(ILOAD, 13);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/objectweb/howl/log/LogBufferManager$FlushManager", "this$0", "Lorg/objectweb/howl/log/LogBufferManager;");
methodVisitor.visitVarInsn(ILOAD, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/objectweb/howl/log/LogBufferManager", "getLogBuffer", "(I)Lorg/objectweb/howl/log/LogBuffer;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitVarInsn(ILOAD, 13);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitVarInsn(ILOAD, 13);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLabel(label1);
Label label26 = new Label();
methodVisitor.visitJumpInsn(GOTO, label26);
methodVisitor.visitLabel(label2);
methodVisitor.visitVarInsn(ASTORE, 14);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 12);
methodVisitor.visitJumpInsn(GOTO, label25);
methodVisitor.visitLabel(label26);
methodVisitor.visitIincInsn(13, 1);
methodVisitor.visitJumpInsn(GOTO, label24);
methodVisitor.visitLabel(label25);
methodVisitor.visitVarInsn(ILOAD, 12);
methodVisitor.visitJumpInsn(IFEQ, label23);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitInsn(ARRAYLENGTH);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IADD);
methodVisitor.visitTypeInsn(ANEWARRAY, "org/objectweb/howl/log/LogBuffer");
methodVisitor.visitVarInsn(ASTORE, 13);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/objectweb/howl/log/LogBufferManager$FlushManager", "this$0", "Lorg/objectweb/howl/log/LogBufferManager;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/objectweb/howl/log/LogBufferManager", "access$1500", "(Lorg/objectweb/howl/log/LogBufferManager;)Ljava/lang/Object;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ASTORE, 14);
methodVisitor.visitInsn(MONITORENTER);
methodVisitor.visitLabel(label7);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 15);
Label label27 = new Label();
methodVisitor.visitLabel(label27);
methodVisitor.visitVarInsn(ILOAD, 15);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/objectweb/howl/log/LogBufferManager$FlushManager", "this$0", "Lorg/objectweb/howl/log/LogBufferManager;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/objectweb/howl/log/LogBufferManager", "access$1600", "(Lorg/objectweb/howl/log/LogBufferManager;)[Lorg/objectweb/howl/log/LogBuffer;", false);
methodVisitor.visitInsn(ARRAYLENGTH);
Label label28 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPGE, label28);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitVarInsn(ILOAD, 15);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/objectweb/howl/log/LogBufferManager$FlushManager", "this$0", "Lorg/objectweb/howl/log/LogBufferManager;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/objectweb/howl/log/LogBufferManager", "access$1600", "(Lorg/objectweb/howl/log/LogBufferManager;)[Lorg/objectweb/howl/log/LogBuffer;", false);
methodVisitor.visitVarInsn(ILOAD, 15);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitIincInsn(15, 1);
methodVisitor.visitJumpInsn(GOTO, label27);
methodVisitor.visitLabel(label28);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/objectweb/howl/log/LogBufferManager$FlushManager", "this$0", "Lorg/objectweb/howl/log/LogBufferManager;");
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/objectweb/howl/log/LogBufferManager", "access$1602", "(Lorg/objectweb/howl/log/LogBufferManager;[Lorg/objectweb/howl/log/LogBuffer;)[Lorg/objectweb/howl/log/LogBuffer;", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 15);
Label label29 = new Label();
methodVisitor.visitLabel(label29);
methodVisitor.visitVarInsn(ILOAD, 15);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/objectweb/howl/log/LogBufferManager$FlushManager", "this$0", "Lorg/objectweb/howl/log/LogBufferManager;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/objectweb/howl/log/LogBufferManager", "access$000", "(Lorg/objectweb/howl/log/LogBufferManager;)[Lorg/objectweb/howl/log/LogBuffer;", false);
methodVisitor.visitInsn(ARRAYLENGTH);
Label label30 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPGE, label30);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitVarInsn(ILOAD, 15);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/objectweb/howl/log/LogBufferManager$FlushManager", "this$0", "Lorg/objectweb/howl/log/LogBufferManager;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/objectweb/howl/log/LogBufferManager", "access$000", "(Lorg/objectweb/howl/log/LogBufferManager;)[Lorg/objectweb/howl/log/LogBuffer;", false);
methodVisitor.visitVarInsn(ILOAD, 15);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitIincInsn(15, 1);
methodVisitor.visitJumpInsn(GOTO, label29);
methodVisitor.visitLabel(label30);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/objectweb/howl/log/LogBufferManager$FlushManager", "this$0", "Lorg/objectweb/howl/log/LogBufferManager;");
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/objectweb/howl/log/LogBufferManager", "access$002", "(Lorg/objectweb/howl/log/LogBufferManager;[Lorg/objectweb/howl/log/LogBuffer;)[Lorg/objectweb/howl/log/LogBuffer;", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/objectweb/howl/log/LogBufferManager$FlushManager", "this$0", "Lorg/objectweb/howl/log/LogBufferManager;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/objectweb/howl/log/LogBufferManager", "access$1700", "(Lorg/objectweb/howl/log/LogBufferManager;)Ljava/lang/Object;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ASTORE, 15);
methodVisitor.visitInsn(MONITORENTER);
methodVisitor.visitLabel(label3);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 16);
Label label31 = new Label();
methodVisitor.visitLabel(label31);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/objectweb/howl/log/LogBufferManager$FlushManager", "this$0", "Lorg/objectweb/howl/log/LogBufferManager;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/objectweb/howl/log/LogBufferManager", "access$1800", "(Lorg/objectweb/howl/log/LogBufferManager;)I", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/objectweb/howl/log/LogBufferManager$FlushManager", "this$0", "Lorg/objectweb/howl/log/LogBufferManager;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/objectweb/howl/log/LogBufferManager", "access$1900", "(Lorg/objectweb/howl/log/LogBufferManager;)I", false);
Label label32 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPEQ, label32);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitVarInsn(ILOAD, 16);
methodVisitor.visitIincInsn(16, 1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/objectweb/howl/log/LogBufferManager$FlushManager", "this$0", "Lorg/objectweb/howl/log/LogBufferManager;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/objectweb/howl/log/LogBufferManager", "access$2000", "(Lorg/objectweb/howl/log/LogBufferManager;)[Lorg/objectweb/howl/log/LogBuffer;", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/objectweb/howl/log/LogBufferManager$FlushManager", "this$0", "Lorg/objectweb/howl/log/LogBufferManager;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/objectweb/howl/log/LogBufferManager", "access$1808", "(Lorg/objectweb/howl/log/LogBufferManager;)I", false);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/objectweb/howl/log/LogBufferManager$FlushManager", "this$0", "Lorg/objectweb/howl/log/LogBufferManager;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/objectweb/howl/log/LogBufferManager$FlushManager", "this$0", "Lorg/objectweb/howl/log/LogBufferManager;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/objectweb/howl/log/LogBufferManager", "access$2000", "(Lorg/objectweb/howl/log/LogBufferManager;)[Lorg/objectweb/howl/log/LogBuffer;", false);
methodVisitor.visitInsn(ARRAYLENGTH);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/objectweb/howl/log/LogBufferManager", "access$1844", "(Lorg/objectweb/howl/log/LogBufferManager;I)I", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitJumpInsn(GOTO, label31);
methodVisitor.visitLabel(label32);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/objectweb/howl/log/LogBufferManager$FlushManager", "this$0", "Lorg/objectweb/howl/log/LogBufferManager;");
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/objectweb/howl/log/LogBufferManager", "access$2002", "(Lorg/objectweb/howl/log/LogBufferManager;[Lorg/objectweb/howl/log/LogBuffer;)[Lorg/objectweb/howl/log/LogBuffer;", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/objectweb/howl/log/LogBufferManager$FlushManager", "this$0", "Lorg/objectweb/howl/log/LogBufferManager;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/objectweb/howl/log/LogBufferManager", "access$1802", "(Lorg/objectweb/howl/log/LogBufferManager;I)I", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/objectweb/howl/log/LogBufferManager$FlushManager", "this$0", "Lorg/objectweb/howl/log/LogBufferManager;");
methodVisitor.visitVarInsn(ILOAD, 16);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/objectweb/howl/log/LogBufferManager$FlushManager", "this$0", "Lorg/objectweb/howl/log/LogBufferManager;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/objectweb/howl/log/LogBufferManager", "access$2000", "(Lorg/objectweb/howl/log/LogBufferManager;)[Lorg/objectweb/howl/log/LogBuffer;", false);
methodVisitor.visitInsn(ARRAYLENGTH);
methodVisitor.visitInsn(IREM);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/objectweb/howl/log/LogBufferManager", "access$1902", "(Lorg/objectweb/howl/log/LogBufferManager;I)I", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitInsn(MONITOREXIT);
methodVisitor.visitLabel(label4);
Label label33 = new Label();
methodVisitor.visitJumpInsn(GOTO, label33);
methodVisitor.visitLabel(label5);
methodVisitor.visitVarInsn(ASTORE, 17);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitInsn(MONITOREXIT);
methodVisitor.visitLabel(label6);
methodVisitor.visitVarInsn(ALOAD, 17);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label33);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitInsn(MONITOREXIT);
methodVisitor.visitLabel(label8);
methodVisitor.visitJumpInsn(GOTO, label23);
methodVisitor.visitLabel(label9);
methodVisitor.visitVarInsn(ASTORE, 18);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitInsn(MONITOREXIT);
methodVisitor.visitLabel(label10);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label23);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/objectweb/howl/log/LogBufferManager", "getWaitForBuffer", "()J", false);
methodVisitor.visitVarInsn(LSTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/objectweb/howl/log/LogBufferManager$FlushManager", "this$0", "Lorg/objectweb/howl/log/LogBufferManager;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/objectweb/howl/log/LogBufferManager", "access$1500", "(Lorg/objectweb/howl/log/LogBufferManager;)Ljava/lang/Object;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ASTORE, 10);
methodVisitor.visitInsn(MONITORENTER);
methodVisitor.visitLabel(label11);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/objectweb/howl/log/LogBufferManager$FlushManager", "this$0", "Lorg/objectweb/howl/log/LogBufferManager;");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/objectweb/howl/log/LogBufferManager", "access$2100", "(Lorg/objectweb/howl/log/LogBufferManager;)Lorg/objectweb/howl/log/LogBuffer;", false);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
Label label34 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label34);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/objectweb/howl/log/LogBuffer", "shouldForce", "()Z", false);
methodVisitor.visitJumpInsn(IFEQ, label34);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/objectweb/howl/log/LogBufferManager$FlushManager", "this$0", "Lorg/objectweb/howl/log/LogBufferManager;");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/objectweb/howl/log/LogBufferManager", "fqAdd", "(Lorg/objectweb/howl/log/LogBuffer;)V", false);
Label label35 = new Label();
methodVisitor.visitJumpInsn(GOTO, label35);
methodVisitor.visitLabel(label34);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitLabel(label35);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitInsn(MONITOREXIT);
methodVisitor.visitLabel(label12);
Label label36 = new Label();
methodVisitor.visitJumpInsn(GOTO, label36);
methodVisitor.visitLabel(label13);
methodVisitor.visitVarInsn(ASTORE, 19);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitInsn(MONITOREXIT);
methodVisitor.visitLabel(label14);
methodVisitor.visitVarInsn(ALOAD, 19);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label36);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitJumpInsn(IFNULL, label19);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(GETFIELD, "org/objectweb/howl/log/LogBufferManager", "forceOnTimeout", "J");
methodVisitor.visitInsn(LCONST_1);
methodVisitor.visitInsn(LADD);
methodVisitor.visitFieldInsn(PUTFIELD, "org/objectweb/howl/log/LogBufferManager", "forceOnTimeout", "J");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/objectweb/howl/log/LogBufferManager$FlushManager", "this$0", "Lorg/objectweb/howl/log/LogBufferManager;");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/objectweb/howl/log/LogBufferManager", "access$2200", "(Lorg/objectweb/howl/log/LogBufferManager;Z)V", false);
methodVisitor.visitLabel(label19);
methodVisitor.visitJumpInsn(GOTO, label21);
methodVisitor.visitLabel(label17);
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitLabel(label20);
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/System", "err", "Ljava/io/PrintStream;");
methodVisitor.visitLdcInsn("FlushManager: IOException in force(true)");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/PrintStream", "println", "(Ljava/lang/String;)V", false);
methodVisitor.visitJumpInsn(GOTO, label21);
methodVisitor.visitMaxs(5, 20);
methodVisitor.visitEnd();
}
classWriter.visitEnd();

return classWriter.toByteArray();
}
}
