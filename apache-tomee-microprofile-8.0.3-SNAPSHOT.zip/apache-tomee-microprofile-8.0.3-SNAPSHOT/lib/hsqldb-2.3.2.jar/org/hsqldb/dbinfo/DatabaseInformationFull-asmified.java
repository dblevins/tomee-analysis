package asm.org.hsqldb.dbinfo;
import org.objectweb.asm.AnnotationVisitor;
import org.objectweb.asm.Attribute;
import org.objectweb.asm.ClassReader;
import org.objectweb.asm.ClassWriter;
import org.objectweb.asm.ConstantDynamic;
import org.objectweb.asm.FieldVisitor;
import org.objectweb.asm.Handle;
import org.objectweb.asm.Label;
import org.objectweb.asm.MethodVisitor;
import org.objectweb.asm.Opcodes;
import org.objectweb.asm.RecordComponentVisitor;
import org.objectweb.asm.Type;
import org.objectweb.asm.TypePath;
public class DatabaseInformationFullDump implements Opcodes {

public static byte[] dump () throws Exception {

ClassWriter classWriter = new ClassWriter(0);
FieldVisitor fieldVisitor;
RecordComponentVisitor recordComponentVisitor;
MethodVisitor methodVisitor;
AnnotationVisitor annotationVisitor0;

classWriter.visit(V1_6, ACC_FINAL | ACC_SUPER, "org/hsqldb/dbinfo/DatabaseInformationFull", null, "org/hsqldb/dbinfo/DatabaseInformationMain", null);

classWriter.visitInnerClass("org/hsqldb/HsqlNameManager$HsqlName", "org/hsqldb/HsqlNameManager", "HsqlName", ACC_PUBLIC | ACC_FINAL | ACC_STATIC);

classWriter.visitInnerClass("org/hsqldb/dbinfo/DatabaseInformationFull$1", null, null, ACC_STATIC);

{
fieldVisitor = classWriter.visitField(ACC_FINAL | ACC_STATIC, "statementMap", "Lorg/hsqldb/lib/HashMappedList;", null, null);
fieldVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "<init>", "(Lorg/hsqldb/Database;)V", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/hsqldb/dbinfo/DatabaseInformationMain", "<init>", "(Lorg/hsqldb/Database;)V", false);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(2, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PROTECTED, "generateTable", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;I)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ILOAD, 3);
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
Label label3 = new Label();
Label label4 = new Label();
Label label5 = new Label();
Label label6 = new Label();
Label label7 = new Label();
Label label8 = new Label();
Label label9 = new Label();
Label label10 = new Label();
Label label11 = new Label();
Label label12 = new Label();
Label label13 = new Label();
Label label14 = new Label();
Label label15 = new Label();
Label label16 = new Label();
Label label17 = new Label();
Label label18 = new Label();
Label label19 = new Label();
Label label20 = new Label();
Label label21 = new Label();
Label label22 = new Label();
Label label23 = new Label();
Label label24 = new Label();
Label label25 = new Label();
Label label26 = new Label();
Label label27 = new Label();
Label label28 = new Label();
Label label29 = new Label();
Label label30 = new Label();
Label label31 = new Label();
Label label32 = new Label();
Label label33 = new Label();
Label label34 = new Label();
Label label35 = new Label();
Label label36 = new Label();
Label label37 = new Label();
Label label38 = new Label();
Label label39 = new Label();
Label label40 = new Label();
Label label41 = new Label();
Label label42 = new Label();
Label label43 = new Label();
Label label44 = new Label();
Label label45 = new Label();
Label label46 = new Label();
Label label47 = new Label();
Label label48 = new Label();
Label label49 = new Label();
Label label50 = new Label();
Label label51 = new Label();
Label label52 = new Label();
Label label53 = new Label();
Label label54 = new Label();
Label label55 = new Label();
Label label56 = new Label();
Label label57 = new Label();
Label label58 = new Label();
Label label59 = new Label();
Label label60 = new Label();
Label label61 = new Label();
Label label62 = new Label();
Label label63 = new Label();
Label label64 = new Label();
Label label65 = new Label();
Label label66 = new Label();
Label label67 = new Label();
Label label68 = new Label();
Label label69 = new Label();
Label label70 = new Label();
Label label71 = new Label();
Label label72 = new Label();
Label label73 = new Label();
Label label74 = new Label();
methodVisitor.visitTableSwitchInsn(15, 94, label3, new Label[] { label0, label1, label2, label3, label4, label5, label6, label7, label8, label9, label10, label11, label12, label13, label14, label15, label16, label17, label18, label3, label19, label20, label21, label22, label23, label24, label25, label26, label27, label3, label28, label29, label30, label31, label32, label33, label34, label35, label36, label37, label38, label39, label3, label40, label41, label42, label43, label44, label45, label46, label47, label48, label49, label50, label51, label52, label53, label54, label55, label56, label57, label58, label59, label3, label60, label61, label62, label63, label64, label65, label66, label67, label3, label68, label69, label70, label71, label72, label73, label74 });
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "SYSTEM_CACHEINFO", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "SYSTEM_COLUMN_SEQUENCE_USAGE", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "SYSTEM_COMMENTS", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "SYSTEM_SESSIONINFO", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "SYSTEM_PROPERTIES", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label6);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "SYSTEM_SESSIONS", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label7);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "SYSTEM_TEXTTABLES", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label8);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "SYSTEM_TABLESTATS", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label9);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "ADMINISTRABLE_ROLE_AUTHORIZATIONS", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label10);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "APPLICABLE_ROLES", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label11);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "ASSERTIONS", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label12);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "AUTHORIZATIONS", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label13);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_SETS", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label14);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHECK_CONSTRAINT_ROUTINE_USAGE", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label15);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHECK_CONSTRAINTS", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label16);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "COLLATIONS", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label17);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "COLUMN_COLUMN_USAGE", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label18);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "COLUMN_DOMAIN_USAGE", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label19);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "COLUMN_UDT_USAGE", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label21);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "CONSTRAINT_COLUMN_USAGE", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label22);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "CONSTRAINT_TABLE_USAGE", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label20);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "COLUMNS", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label23);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "DATA_TYPE_PRIVILEGES", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label24);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "DOMAIN_CONSTRAINTS", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label25);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "DOMAINS", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label26);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "ELEMENT_TYPES", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label27);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "ENABLED_ROLES", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label28);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "JAR_JAR_USAGE", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label29);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "JARS", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label30);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "KEY_COLUMN_USAGE", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label31);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "METHOD_SPECIFICATIONS", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label32);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "MODULE_COLUMN_USAGE", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label33);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "MODULE_PRIVILEGES", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label34);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "MODULE_TABLE_USAGE", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label35);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "MODULES", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label36);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "PARAMETERS", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label37);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "REFERENTIAL_CONSTRAINTS", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label38);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "ROLE_AUTHORIZATION_DESCRIPTORS", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label39);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "ROLE_COLUMN_GRANTS", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label40);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "ROLE_ROUTINE_GRANTS", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label41);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "ROLE_TABLE_GRANTS", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label43);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "ROLE_USAGE_GRANTS", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label42);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "ROLE_UDT_GRANTS", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label44);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "ROUTINE_COLUMN_USAGE", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label45);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "ROUTINE_JAR_USAGE", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label46);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "ROUTINE_PRIVILEGES", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label47);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "ROUTINE_ROUTINE_USAGE", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label48);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "ROUTINE_SEQUENCE_USAGE", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label49);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "ROUTINE_TABLE_USAGE", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label50);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "ROUTINES", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label51);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "SCHEMATA", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label52);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "SEQUENCES", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label53);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_FEATURES", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label54);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IMPLEMENTATION_INFO", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label55);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_PACKAGES", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label56);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_PARTS", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label57);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_SIZING", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label58);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_SIZING_PROFILES", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label59);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "TABLE_CONSTRAINTS", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label60);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "TABLES", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label61);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "TRANSLATIONS", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label66);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "TRIGGERED_UPDATE_COLUMNS", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label62);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "TRIGGER_COLUMN_USAGE", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label63);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "TRIGGER_ROUTINE_USAGE", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label64);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "TRIGGER_SEQUENCE_USAGE", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label65);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "TRIGGER_TABLE_USAGE", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label67);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "TRIGGERS", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label68);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "UDT_PRIVILEGES", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label69);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "USAGE_PRIVILEGES", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label70);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "USER_DEFINED_TYPES", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label71);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "VIEW_COLUMN_USAGE", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label72);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "VIEW_ROUTINE_USAGE", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label73);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "VIEW_TABLE_USAGE", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label74);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "VIEWS", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ILOAD, 3);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/hsqldb/dbinfo/DatabaseInformationMain", "generateTable", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;I)Lorg/hsqldb/Table;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(4, 4);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "SYSTEM_CACHEINFO", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 15);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 15);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CACHE_FILE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("MAX_CACHE_COUNT");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("MAX_CACHE_BYTES");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CACHE_SIZE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CACHE_BYTES");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("FILE_LOST_BYTES");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("FILE_FREE_POS");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 15);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ASTORE, 11);
methodVisitor.visitTypeInsn(NEW, "org/hsqldb/lib/HashSet");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/hsqldb/lib/HashSet", "<init>", "()V", false);
methodVisitor.visitVarInsn(ASTORE, 13);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Database", "schemaManager", "Lorg/hsqldb/SchemaManager;");
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/SchemaManager", "databaseObjectIterator", "(I)Lorg/hsqldb/lib/Iterator;", false);
methodVisitor.visitVarInsn(ASTORE, 15);
Label label1 = new Label();
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_FULL, 16, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/persist/DataFileCache", Opcodes.TOP, "org/hsqldb/lib/HashSet", Opcodes.TOP, "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "hasNext", "()Z", true);
Label label2 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label2);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "next", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/Table");
methodVisitor.visitVarInsn(ASTORE, 16);
methodVisitor.visitVarInsn(ALOAD, 16);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getRowStore", "(Lorg/hsqldb/Session;)Lorg/hsqldb/persist/PersistentStore;", false);
methodVisitor.visitVarInsn(ASTORE, 17);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getGrantee", "()Lorg/hsqldb/rights/Grantee;", false);
methodVisitor.visitVarInsn(ALOAD, 16);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "isFullyAccessibleByRole", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Z", false);
Label label3 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label3);
methodVisitor.visitVarInsn(ALOAD, 17);
Label label4 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label4);
methodVisitor.visitVarInsn(ALOAD, 17);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/persist/PersistentStore", "getCache", "()Lorg/hsqldb/persist/DataFileCache;", true);
methodVisitor.visitVarInsn(ASTORE, 11);
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_APPEND,2, new Object[] {"org/hsqldb/Table", "org/hsqldb/persist/PersistentStore"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitJumpInsn(IFNULL, label3);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/HashSet", "add", "(Ljava/lang/Object;)Z", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/HashSet", "iterator", "()Lorg/hsqldb/lib/Iterator;", false);
methodVisitor.visitVarInsn(ASTORE, 14);
Label label5 = new Label();
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_FULL, 16, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/persist/DataFileCache", Opcodes.TOP, "org/hsqldb/lib/HashSet", "org/hsqldb/lib/Iterator", "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "hasNext", "()Z", true);
Label label6 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label6);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "next", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/persist/DataFileCache");
methodVisitor.visitVarInsn(ASTORE, 11);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 12);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/lib/FileUtil", "getFileUtil", "()Lorg/hsqldb/lib/FileUtil;", false);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/persist/DataFileCache", "getFileName", "()Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/FileUtil", "canonicalOrAbsolutePath", "(Ljava/lang/String;)Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/persist/DataFileCache", "capacity", "()I", false);
methodVisitor.visitInsn(I2L);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/persist/DataFileCache", "bytesCapacity", "()J", false);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/persist/DataFileCache", "getCachedObjectCount", "()I", false);
methodVisitor.visitInsn(I2L);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/persist/DataFileCache", "getTotalCachedBlockSize", "()J", false);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/persist/DataFileCache", "getLostBlockSize", "()J", false);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/persist/DataFileCache", "getFileFreePos", "()J", false);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitJumpInsn(GOTO, label5);
methodVisitor.visitLabel(label6);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 18);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "SYSTEM_COLUMN_SEQUENCE_USAGE", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 16);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 16);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TABLE_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TABLE_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TABLE_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("COLUMN_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SEQUENCE_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SEQUENCE_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SEQUENCE_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 16);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "allTables", "()Lorg/hsqldb/lib/Iterator;", false);
methodVisitor.visitVarInsn(ASTORE, 12);
Label label1 = new Label();
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_FULL, 13, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "hasNext", "()Z", true);
Label label2 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label2);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "next", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/Table");
methodVisitor.visitVarInsn(ASTORE, 13);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "hasIdentityColumn", "()Z", false);
Label label3 = new Label();
methodVisitor.visitJumpInsn(IFNE, label3);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getGrantee", "()Lorg/hsqldb/rights/Grantee;", false);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "getColumnsForAllPrivileges", "(Lorg/hsqldb/SchemaObject;)Lorg/hsqldb/lib/OrderedHashSet;", false);
methodVisitor.visitVarInsn(ASTORE, 15);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/OrderedHashSet", "isEmpty", "()Z", false);
Label label4 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label4);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_APPEND,2, new Object[] {Opcodes.TOP, "org/hsqldb/lib/OrderedHashSet"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getColumnCount", "()I", false);
methodVisitor.visitVarInsn(ISTORE, 11);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 17);
Label label5 = new Label();
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_FULL, 18, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.INTEGER, "org/hsqldb/lib/Iterator", "org/hsqldb/Table", Opcodes.TOP, "org/hsqldb/lib/OrderedHashSet", Opcodes.TOP, Opcodes.INTEGER}, 0, new Object[] {});
methodVisitor.visitVarInsn(ILOAD, 17);
methodVisitor.visitVarInsn(ILOAD, 11);
Label label6 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPGE, label6);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitVarInsn(ILOAD, 17);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getColumn", "(I)Lorg/hsqldb/ColumnSchema;", false);
methodVisitor.visitVarInsn(ASTORE, 18);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/ColumnSchema", "isIdentity", "()Z", false);
Label label7 = new Label();
methodVisitor.visitJumpInsn(IFNE, label7);
Label label8 = new Label();
methodVisitor.visitJumpInsn(GOTO, label8);
methodVisitor.visitLabel(label7);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/ColumnSchema"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/ColumnSchema", "getIdentitySequence", "()Lorg/hsqldb/NumberSequence;", false);
methodVisitor.visitVarInsn(ASTORE, 16);
methodVisitor.visitVarInsn(ALOAD, 16);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/NumberSequence", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
Label label9 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label9);
methodVisitor.visitJumpInsn(GOTO, label8);
methodVisitor.visitLabel(label9);
methodVisitor.visitFrame(Opcodes.F_FULL, 19, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.INTEGER, "org/hsqldb/lib/Iterator", "org/hsqldb/Table", Opcodes.TOP, "org/hsqldb/lib/OrderedHashSet", "org/hsqldb/NumberSequence", Opcodes.INTEGER, "org/hsqldb/ColumnSchema"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/ColumnSchema", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/OrderedHashSet", "contains", "(Ljava/lang/Object;)Z", false);
Label label10 = new Label();
methodVisitor.visitJumpInsn(IFNE, label10);
methodVisitor.visitJumpInsn(GOTO, label8);
methodVisitor.visitLabel(label10);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 14);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/ColumnSchema", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitVarInsn(ALOAD, 16);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/NumberSequence", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitVarInsn(ALOAD, 16);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/NumberSequence", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitLabel(label8);
methodVisitor.visitFrame(Opcodes.F_FULL, 18, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.INTEGER, "org/hsqldb/lib/Iterator", "org/hsqldb/Table", Opcodes.TOP, "org/hsqldb/lib/OrderedHashSet", Opcodes.TOP, Opcodes.INTEGER}, 0, new Object[] {});
methodVisitor.visitIincInsn(17, 1);
methodVisitor.visitJumpInsn(GOTO, label5);
methodVisitor.visitLabel(label6);
methodVisitor.visitFrame(Opcodes.F_CHOP,2, null, 0, null);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_FULL, 13, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 19);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "SYSTEM_COMMENTS", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 17);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 17);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("OBJECT_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("OBJECT_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("OBJECT_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("OBJECT_TYPE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("COLUMN_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("COMMENT");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 17);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitTypeInsn(NEW, "org/hsqldb/dbinfo/DITableInfo");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/hsqldb/dbinfo/DITableInfo", "<init>", "()V", false);
methodVisitor.visitVarInsn(ASTORE, 12);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "allTables", "()Lorg/hsqldb/lib/Iterator;", false);
methodVisitor.visitVarInsn(ASTORE, 10);
Label label1 = new Label();
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_FULL, 13, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", Opcodes.TOP, "org/hsqldb/dbinfo/DITableInfo"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "hasNext", "()Z", true);
Label label2 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label2);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "next", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/Table");
methodVisitor.visitVarInsn(ASTORE, 13);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getGrantee", "()Lorg/hsqldb/rights/Grantee;", false);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "isAccessible", "(Lorg/hsqldb/SchemaObject;)Z", false);
Label label3 = new Label();
methodVisitor.visitJumpInsn(IFNE, label3);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DITableInfo", "setTable", "(Lorg/hsqldb/Table;)V", false);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getColumnCount", "()I", false);
methodVisitor.visitVarInsn(ISTORE, 14);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 15);
Label label4 = new Label();
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_APPEND,2, new Object[] {Opcodes.INTEGER, Opcodes.INTEGER}, 0, null);
methodVisitor.visitVarInsn(ILOAD, 15);
methodVisitor.visitVarInsn(ILOAD, 14);
Label label5 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPGE, label5);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitVarInsn(ILOAD, 15);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getColumn", "(I)Lorg/hsqldb/ColumnSchema;", false);
methodVisitor.visitVarInsn(ASTORE, 16);
methodVisitor.visitVarInsn(ALOAD, 16);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/ColumnSchema", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "comment", "Ljava/lang/String;");
Label label6 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label6);
Label label7 = new Label();
methodVisitor.visitJumpInsn(GOTO, label7);
methodVisitor.visitLabel(label6);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/ColumnSchema"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 11);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitLdcInsn("COLUMN");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitVarInsn(ALOAD, 16);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/ColumnSchema", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitVarInsn(ALOAD, 16);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/ColumnSchema", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "comment", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitLabel(label7);
methodVisitor.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
methodVisitor.visitIincInsn(15, 1);
methodVisitor.visitJumpInsn(GOTO, label4);
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getTableType", "()I", false);
methodVisitor.visitInsn(ICONST_1);
Label label8 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPEQ, label8);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "comment", "Ljava/lang/String;");
methodVisitor.visitJumpInsn(IFNONNULL, label8);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label8);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 11);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "isView", "()Z", false);
Label label9 = new Label();
methodVisitor.visitJumpInsn(IFNE, label9);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getTableType", "()I", false);
methodVisitor.visitInsn(ICONST_1);
Label label10 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPNE, label10);
methodVisitor.visitLabel(label9);
methodVisitor.visitFrame(Opcodes.F_FULL, 15, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "[Ljava/lang/Object;", "org/hsqldb/dbinfo/DITableInfo", "org/hsqldb/Table", Opcodes.INTEGER}, 2, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER});
methodVisitor.visitLdcInsn("VIEW");
Label label11 = new Label();
methodVisitor.visitJumpInsn(GOTO, label11);
methodVisitor.visitLabel(label10);
methodVisitor.visitFrame(Opcodes.F_FULL, 15, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "[Ljava/lang/Object;", "org/hsqldb/dbinfo/DITableInfo", "org/hsqldb/Table", Opcodes.INTEGER}, 2, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER});
methodVisitor.visitLdcInsn("TABLE");
methodVisitor.visitLabel(label11);
methodVisitor.visitFrame(Opcodes.F_FULL, 15, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "[Ljava/lang/Object;", "org/hsqldb/dbinfo/DITableInfo", "org/hsqldb/Table", Opcodes.INTEGER}, 3, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER, "java/lang/String"});
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DITableInfo", "getRemark", "()Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_FULL, 13, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", Opcodes.TOP, "org/hsqldb/dbinfo/DITableInfo"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Database", "schemaManager", "Lorg/hsqldb/SchemaManager;");
methodVisitor.visitIntInsn(BIPUSH, 18);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/SchemaManager", "databaseObjectIterator", "(I)Lorg/hsqldb/lib/Iterator;", false);
methodVisitor.visitVarInsn(ASTORE, 10);
Label label12 = new Label();
methodVisitor.visitLabel(label12);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "hasNext", "()Z", true);
Label label13 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label13);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "next", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/SchemaObject");
methodVisitor.visitVarInsn(ASTORE, 13);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getGrantee", "()Lorg/hsqldb/rights/Grantee;", false);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "isAccessible", "(Lorg/hsqldb/SchemaObject;)Z", false);
Label label14 = new Label();
methodVisitor.visitJumpInsn(IFNE, label14);
methodVisitor.visitJumpInsn(GOTO, label12);
methodVisitor.visitLabel(label14);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/SchemaObject"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/SchemaObject", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", true);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "comment", "Ljava/lang/String;");
Label label15 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label15);
methodVisitor.visitJumpInsn(GOTO, label12);
methodVisitor.visitLabel(label15);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 11);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/SchemaObject", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", true);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/SchemaObject", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", true);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitLdcInsn("ROUTINE");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/SchemaObject", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", true);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "comment", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitJumpInsn(GOTO, label12);
methodVisitor.visitLabel(label13);
methodVisitor.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 17);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "SYSTEM_PROPERTIES", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 19);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 19);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("PROPERTY_SCOPE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("PROPERTY_NAMESPACE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("PROPERTY_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("PROPERTY_VALUE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("PROPERTY_CLASS");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 19);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitLdcInsn("SESSION");
methodVisitor.visitVarInsn(ASTORE, 9);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getProperties", "()Lorg/hsqldb/persist/HsqlDatabaseProperties;", false);
methodVisitor.visitVarInsn(ASTORE, 12);
methodVisitor.visitLdcInsn("database.properties");
methodVisitor.visitVarInsn(ASTORE, 10);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/persist/HsqlDatabaseProperties", "getUserDefinedPropertyData", "()Lorg/hsqldb/lib/Set;", false);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Set", "iterator", "()Lorg/hsqldb/lib/Iterator;", true);
methodVisitor.visitVarInsn(ASTORE, 13);
Label label1 = new Label();
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_FULL, 14, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "java/lang/String", "java/lang/String", Opcodes.TOP, "org/hsqldb/persist/HsqlDatabaseProperties", "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "hasNext", "()Z", true);
Label label2 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label2);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "next", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "[Ljava/lang/Object;");
methodVisitor.visitTypeInsn(CHECKCAST, "[Ljava/lang/Object;");
methodVisitor.visitVarInsn(ASTORE, 14);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 11);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 9);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Database", "logger", "Lorg/hsqldb/persist/Logger;");
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/String");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/persist/Logger", "getValueStringForProperty", "(Ljava/lang/String;)Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(AALOAD);
Label label3 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label3);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/String");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/persist/HsqlDatabaseProperties", "getPropertyString", "(Ljava/lang/String;)Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_FULL, 15, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "java/lang/String", "java/lang/String", "[Ljava/lang/Object;", "org/hsqldb/persist/HsqlDatabaseProperties", "org/hsqldb/lib/Iterator", "[Ljava/lang/Object;"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_FULL, 14, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "java/lang/String", "java/lang/String", Opcodes.TOP, "org/hsqldb/persist/HsqlDatabaseProperties", "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 15);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "SYSTEM_SESSIONINFO", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("KEY");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("VALUE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitLdcInsn("SESSION ID");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getId", "()J", false);
methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/String", "valueOf", "(J)Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitLdcInsn("AUTOCOMMIT");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "isAutoCommit", "()Z", false);
Label label1 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label1);
methodVisitor.visitLdcInsn("TRUE");
Label label2 = new Label();
methodVisitor.visitJumpInsn(GOTO, label2);
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_FULL, 5, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", "[Ljava/lang/Object;"}, 2, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER});
methodVisitor.visitLdcInsn("FALSE");
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_FULL, 5, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", "[Ljava/lang/Object;"}, 3, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER, "java/lang/String"});
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitLdcInsn("USER");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getUsername", "()Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitLdcInsn("SESSION READONLY");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "isReadOnlyDefault", "()Z", false);
Label label3 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label3);
methodVisitor.visitLdcInsn("TRUE");
Label label4 = new Label();
methodVisitor.visitJumpInsn(GOTO, label4);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_FULL, 5, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", "[Ljava/lang/Object;"}, 2, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER});
methodVisitor.visitLdcInsn("FALSE");
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_FULL, 5, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", "[Ljava/lang/Object;"}, 3, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER, "java/lang/String"});
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitLdcInsn("DATABASE READONLY");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "isReadOnly", "()Z", false);
Label label5 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label5);
methodVisitor.visitLdcInsn("TRUE");
Label label6 = new Label();
methodVisitor.visitJumpInsn(GOTO, label6);
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_FULL, 5, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", "[Ljava/lang/Object;"}, 2, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER});
methodVisitor.visitLdcInsn("FALSE");
methodVisitor.visitLabel(label6);
methodVisitor.visitFrame(Opcodes.F_FULL, 5, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", "[Ljava/lang/Object;"}, 3, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER, "java/lang/String"});
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitLdcInsn("DATABASE");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getURI", "()Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitLdcInsn("IDENTITY");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getLastIdentity", "()Ljava/lang/Number;", false);
methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/String", "valueOf", "(Ljava/lang/Object;)Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitLdcInsn("CURRENT SCHEMA");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getSchemaName", "(Ljava/lang/String;)Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/String", "valueOf", "(Ljava/lang/Object;)Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitLdcInsn("ISOLATION LEVEL");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getIsolation", "()I", false);
methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/String", "valueOf", "(I)Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitLdcInsn("IGNORECASE");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "isIgnorecase", "()Z", false);
Label label7 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label7);
methodVisitor.visitLdcInsn("TRUE");
Label label8 = new Label();
methodVisitor.visitJumpInsn(GOTO, label8);
methodVisitor.visitLabel(label7);
methodVisitor.visitFrame(Opcodes.F_FULL, 5, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", "[Ljava/lang/Object;"}, 2, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER});
methodVisitor.visitLdcInsn("FALSE");
methodVisitor.visitLabel(label8);
methodVisitor.visitFrame(Opcodes.F_FULL, 5, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", "[Ljava/lang/Object;"}, 3, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER, "java/lang/String"});
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitLdcInsn("CURRENT STATEMENT");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitLdcInsn("");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Session", "sessionContext", "Lorg/hsqldb/SessionContext;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/SessionContext", "currentStatement", "Lorg/hsqldb/Statement;");
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 5);
Label label9 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label9);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Statement", "getSQL", "()Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLabel(label9);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Statement"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 6);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "SYSTEM_SESSIONS", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 21);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 21);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SESSION_ID");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CONNECTED");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "TIME_STAMP", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("USER_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("IS_ADMIN");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/types/Type", "SQL_BOOLEAN", "Lorg/hsqldb/types/BooleanType;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("AUTOCOMMIT");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/types/Type", "SQL_BOOLEAN", "Lorg/hsqldb/types/BooleanType;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("READONLY");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/types/Type", "SQL_BOOLEAN", "Lorg/hsqldb/types/BooleanType;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("LAST_IDENTITY");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TRANSACTION");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/types/Type", "SQL_BOOLEAN", "Lorg/hsqldb/types/BooleanType;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TRANSACTION_SIZE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("WAITING_FOR_THIS");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("THIS_WAITING_FOR");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CURRENT_STATEMENT");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("LATCH_COUNT");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 21);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Database", "sessionManager", "Lorg/hsqldb/SessionManager;");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/SessionManager", "getVisibleSessions", "(Lorg/hsqldb/Session;)[Lorg/hsqldb/Session;", false);
methodVisitor.visitVarInsn(ASTORE, 18);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 21);
Label label1 = new Label();
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_FULL, 22, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "[Lorg/hsqldb/Session;", Opcodes.TOP, Opcodes.TOP, Opcodes.INTEGER}, 0, new Object[] {});
methodVisitor.visitVarInsn(ILOAD, 21);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitInsn(ARRAYLENGTH);
Label label2 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPGE, label2);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitVarInsn(ILOAD, 21);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "isClosed", "()Z", false);
Label label3 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label3);
Label label4 = new Label();
methodVisitor.visitJumpInsn(GOTO, label4);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitVarInsn(ILOAD, 21);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 19);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 20);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 19);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getId", "()J", false);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(NEW, "org/hsqldb/types/TimestampData");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 19);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getConnectTime", "()J", false);
methodVisitor.visitLdcInsn(new Long(1000L));
methodVisitor.visitInsn(LDIV);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/hsqldb/types/TimestampData", "<init>", "(J)V", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitVarInsn(ALOAD, 19);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getUsername", "()Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitVarInsn(ALOAD, 19);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "isAdmin", "()Z", false);
Label label5 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label5);
methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/Boolean", "TRUE", "Ljava/lang/Boolean;");
Label label6 = new Label();
methodVisitor.visitJumpInsn(GOTO, label6);
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_FULL, 22, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "[Lorg/hsqldb/Session;", "org/hsqldb/Session", "[Ljava/lang/Object;", Opcodes.INTEGER}, 2, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER});
methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/Boolean", "FALSE", "Ljava/lang/Boolean;");
methodVisitor.visitLabel(label6);
methodVisitor.visitFrame(Opcodes.F_FULL, 22, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "[Lorg/hsqldb/Session;", "org/hsqldb/Session", "[Ljava/lang/Object;", Opcodes.INTEGER}, 3, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER, "java/lang/Boolean"});
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitVarInsn(ALOAD, 19);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Session", "sessionContext", "Lorg/hsqldb/SessionContext;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/SessionContext", "isAutoCommit", "Ljava/lang/Boolean;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitVarInsn(ALOAD, 19);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Session", "isReadOnlyDefault", "Z");
methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/Boolean", "valueOf", "(Z)Ljava/lang/Boolean;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 19);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getLastIdentity", "()Ljava/lang/Number;", false);
methodVisitor.visitVarInsn(ASTORE, 22);
methodVisitor.visitVarInsn(ALOAD, 22);
Label label7 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label7);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitVarInsn(ALOAD, 22);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Number", "longValue", "()J", false);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLabel(label7);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"java/lang/Number"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitIntInsn(BIPUSH, 8);
methodVisitor.visitVarInsn(ALOAD, 19);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "isInMidTransaction", "()Z", false);
Label label8 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label8);
methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/Boolean", "TRUE", "Ljava/lang/Boolean;");
Label label9 = new Label();
methodVisitor.visitJumpInsn(GOTO, label9);
methodVisitor.visitLabel(label8);
methodVisitor.visitFrame(Opcodes.F_FULL, 23, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "[Lorg/hsqldb/Session;", "org/hsqldb/Session", "[Ljava/lang/Object;", Opcodes.INTEGER, "java/lang/Number"}, 2, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER});
methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/Boolean", "FALSE", "Ljava/lang/Boolean;");
methodVisitor.visitLabel(label9);
methodVisitor.visitFrame(Opcodes.F_FULL, 23, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "[Lorg/hsqldb/Session;", "org/hsqldb/Session", "[Ljava/lang/Object;", Opcodes.INTEGER, "java/lang/Number"}, 3, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER, "java/lang/Boolean"});
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitIntInsn(BIPUSH, 9);
methodVisitor.visitVarInsn(ALOAD, 19);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getTransactionSize", "()I", false);
methodVisitor.visitInsn(I2L);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 19);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getCurrentSchemaHsqlName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 23);
methodVisitor.visitVarInsn(ALOAD, 23);
Label label10 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label10);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitIntInsn(BIPUSH, 7);
methodVisitor.visitVarInsn(ALOAD, 23);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLabel(label10);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/HsqlNameManager$HsqlName"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitIntInsn(BIPUSH, 10);
methodVisitor.visitLdcInsn("");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitIntInsn(BIPUSH, 11);
methodVisitor.visitLdcInsn("");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 19);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Session", "waitingSessions", "Lorg/hsqldb/lib/OrderedHashSet;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/OrderedHashSet", "size", "()I", false);
Label label11 = new Label();
methodVisitor.visitJumpInsn(IFLE, label11);
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuffer");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuffer", "<init>", "()V", false);
methodVisitor.visitVarInsn(ASTORE, 24);
methodVisitor.visitVarInsn(ALOAD, 19);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Session", "waitingSessions", "Lorg/hsqldb/lib/OrderedHashSet;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/OrderedHashSet", "size", "()I", false);
methodVisitor.visitTypeInsn(ANEWARRAY, "org/hsqldb/Session");
methodVisitor.visitVarInsn(ASTORE, 25);
methodVisitor.visitVarInsn(ALOAD, 19);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Session", "waitingSessions", "Lorg/hsqldb/lib/OrderedHashSet;");
methodVisitor.visitVarInsn(ALOAD, 25);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/OrderedHashSet", "toArray", "([Ljava/lang/Object;)V", false);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 26);
Label label12 = new Label();
methodVisitor.visitLabel(label12);
methodVisitor.visitFrame(Opcodes.F_APPEND,3, new Object[] {"java/lang/StringBuffer", "[Lorg/hsqldb/Session;", Opcodes.INTEGER}, 0, null);
methodVisitor.visitVarInsn(ILOAD, 26);
methodVisitor.visitVarInsn(ALOAD, 25);
methodVisitor.visitInsn(ARRAYLENGTH);
Label label13 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPGE, label13);
methodVisitor.visitVarInsn(ILOAD, 26);
Label label14 = new Label();
methodVisitor.visitJumpInsn(IFLE, label14);
methodVisitor.visitVarInsn(ALOAD, 24);
methodVisitor.visitIntInsn(BIPUSH, 44);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuffer", "append", "(C)Ljava/lang/StringBuffer;", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitLabel(label14);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 24);
methodVisitor.visitVarInsn(ALOAD, 25);
methodVisitor.visitVarInsn(ILOAD, 26);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getId", "()J", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuffer", "append", "(J)Ljava/lang/StringBuffer;", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitIincInsn(26, 1);
methodVisitor.visitJumpInsn(GOTO, label12);
methodVisitor.visitLabel(label13);
methodVisitor.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitIntInsn(BIPUSH, 10);
methodVisitor.visitVarInsn(ALOAD, 24);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuffer", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLabel(label11);
methodVisitor.visitFrame(Opcodes.F_CHOP,2, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 19);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Session", "waitedSessions", "Lorg/hsqldb/lib/OrderedHashSet;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/OrderedHashSet", "size", "()I", false);
Label label15 = new Label();
methodVisitor.visitJumpInsn(IFLE, label15);
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuffer");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuffer", "<init>", "()V", false);
methodVisitor.visitVarInsn(ASTORE, 24);
methodVisitor.visitVarInsn(ALOAD, 19);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Session", "waitedSessions", "Lorg/hsqldb/lib/OrderedHashSet;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/OrderedHashSet", "size", "()I", false);
methodVisitor.visitTypeInsn(ANEWARRAY, "org/hsqldb/Session");
methodVisitor.visitVarInsn(ASTORE, 25);
methodVisitor.visitVarInsn(ALOAD, 19);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Session", "waitedSessions", "Lorg/hsqldb/lib/OrderedHashSet;");
methodVisitor.visitVarInsn(ALOAD, 25);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/OrderedHashSet", "toArray", "([Ljava/lang/Object;)V", false);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 26);
Label label16 = new Label();
methodVisitor.visitLabel(label16);
methodVisitor.visitFrame(Opcodes.F_APPEND,3, new Object[] {"java/lang/StringBuffer", "[Lorg/hsqldb/Session;", Opcodes.INTEGER}, 0, null);
methodVisitor.visitVarInsn(ILOAD, 26);
methodVisitor.visitVarInsn(ALOAD, 25);
methodVisitor.visitInsn(ARRAYLENGTH);
Label label17 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPGE, label17);
methodVisitor.visitVarInsn(ILOAD, 26);
Label label18 = new Label();
methodVisitor.visitJumpInsn(IFLE, label18);
methodVisitor.visitVarInsn(ALOAD, 24);
methodVisitor.visitIntInsn(BIPUSH, 44);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuffer", "append", "(C)Ljava/lang/StringBuffer;", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitLabel(label18);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 24);
methodVisitor.visitVarInsn(ALOAD, 25);
methodVisitor.visitVarInsn(ILOAD, 26);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getId", "()J", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuffer", "append", "(J)Ljava/lang/StringBuffer;", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitIincInsn(26, 1);
methodVisitor.visitJumpInsn(GOTO, label16);
methodVisitor.visitLabel(label17);
methodVisitor.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitIntInsn(BIPUSH, 11);
methodVisitor.visitVarInsn(ALOAD, 24);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuffer", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLabel(label15);
methodVisitor.visitFrame(Opcodes.F_CHOP,2, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 19);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Session", "sessionContext", "Lorg/hsqldb/SessionContext;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/SessionContext", "currentStatement", "Lorg/hsqldb/Statement;");
methodVisitor.visitVarInsn(ASTORE, 24);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitIntInsn(BIPUSH, 12);
methodVisitor.visitVarInsn(ALOAD, 24);
Label label19 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label19);
methodVisitor.visitLdcInsn("");
Label label20 = new Label();
methodVisitor.visitJumpInsn(GOTO, label20);
methodVisitor.visitLabel(label19);
methodVisitor.visitFrame(Opcodes.F_FULL, 25, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "[Lorg/hsqldb/Session;", "org/hsqldb/Session", "[Ljava/lang/Object;", Opcodes.INTEGER, "java/lang/Number", "org/hsqldb/HsqlNameManager$HsqlName", "org/hsqldb/Statement"}, 2, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER});
methodVisitor.visitVarInsn(ALOAD, 24);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Statement", "getSQL", "()Ljava/lang/String;", false);
methodVisitor.visitLabel(label20);
methodVisitor.visitFrame(Opcodes.F_FULL, 25, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "[Lorg/hsqldb/Session;", "org/hsqldb/Session", "[Ljava/lang/Object;", Opcodes.INTEGER, "java/lang/Number", "org/hsqldb/HsqlNameManager$HsqlName", "org/hsqldb/Statement"}, 3, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER, "java/lang/String"});
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitIntInsn(BIPUSH, 13);
methodVisitor.visitTypeInsn(NEW, "java/lang/Long");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 19);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Session", "latch", "Lorg/hsqldb/lib/CountUpDownLatch;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/CountUpDownLatch", "getCount", "()J", false);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/Long", "<init>", "(J)V", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_FULL, 22, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "[Lorg/hsqldb/Session;", Opcodes.TOP, Opcodes.TOP, Opcodes.INTEGER}, 0, new Object[] {});
methodVisitor.visitIincInsn(21, 1);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_CHOP,3, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(8, 27);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "SYSTEM_TEXTTABLES", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 22);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 22);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TABLE_CAT");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TABLE_SCHEM");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TABLE_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("DATA_SOURCE_DEFINTION");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("FILE_PATH");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("FILE_ENCODING");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("FIELD_SEPARATOR");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("VARCHAR_SEPARATOR");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("LONGVARCHAR_SEPARATOR");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("IS_IGNORE_FIRST");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/types/Type", "SQL_BOOLEAN", "Lorg/hsqldb/types/BooleanType;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("IS_ALL_QUOTED");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/types/Type", "SQL_BOOLEAN", "Lorg/hsqldb/types/BooleanType;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("IS_QUOTED");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/types/Type", "SQL_BOOLEAN", "Lorg/hsqldb/types/BooleanType;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("IS_DESC");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/types/Type", "SQL_BOOLEAN", "Lorg/hsqldb/types/BooleanType;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 22);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Database", "schemaManager", "Lorg/hsqldb/SchemaManager;");
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/SchemaManager", "databaseObjectIterator", "(I)Lorg/hsqldb/lib/Iterator;", false);
methodVisitor.visitVarInsn(ASTORE, 17);
Label label1 = new Label();
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_FULL, 18, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 17);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "hasNext", "()Z", true);
Label label2 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label2);
methodVisitor.visitVarInsn(ALOAD, 17);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "next", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/Table");
methodVisitor.visitVarInsn(ASTORE, 18);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getRowStore", "(Lorg/hsqldb/Session;)Lorg/hsqldb/persist/PersistentStore;", false);
methodVisitor.visitVarInsn(ASTORE, 20);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "isText", "()Z", false);
methodVisitor.visitJumpInsn(IFEQ, label1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "isAccessibleTable", "(Lorg/hsqldb/Session;Lorg/hsqldb/Table;)Z", false);
Label label3 = new Label();
methodVisitor.visitJumpInsn(IFNE, label3);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_APPEND,3, new Object[] {"org/hsqldb/Table", Opcodes.TOP, "org/hsqldb/persist/PersistentStore"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 19);
methodVisitor.visitVarInsn(ALOAD, 19);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 19);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 19);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 19);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/TextTable");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/TextTable", "getDataSource", "()Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/persist/PersistentStore", "getCache", "()Lorg/hsqldb/persist/DataFileCache;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/persist/TextCache");
methodVisitor.visitVarInsn(ASTORE, 21);
methodVisitor.visitVarInsn(ALOAD, 21);
Label label4 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label4);
methodVisitor.visitVarInsn(ALOAD, 21);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/persist/TextCache", "getTextFileSettings", "()Lorg/hsqldb/persist/TextFileSettings;", false);
methodVisitor.visitVarInsn(ASTORE, 22);
methodVisitor.visitVarInsn(ALOAD, 19);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/lib/FileUtil", "getFileUtil", "()Lorg/hsqldb/lib/FileUtil;", false);
methodVisitor.visitVarInsn(ALOAD, 21);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/persist/TextCache", "getFileName", "()Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/FileUtil", "canonicalOrAbsolutePath", "(Ljava/lang/String;)Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 19);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitVarInsn(ALOAD, 22);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/persist/TextFileSettings", "stringEncoding", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 19);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitVarInsn(ALOAD, 22);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/persist/TextFileSettings", "fs", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 19);
methodVisitor.visitIntInsn(BIPUSH, 7);
methodVisitor.visitVarInsn(ALOAD, 22);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/persist/TextFileSettings", "vs", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 19);
methodVisitor.visitIntInsn(BIPUSH, 8);
methodVisitor.visitVarInsn(ALOAD, 22);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/persist/TextFileSettings", "lvs", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 19);
methodVisitor.visitIntInsn(BIPUSH, 9);
methodVisitor.visitVarInsn(ALOAD, 22);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/persist/TextFileSettings", "ignoreFirst", "Z");
Label label5 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label5);
methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/Boolean", "TRUE", "Ljava/lang/Boolean;");
Label label6 = new Label();
methodVisitor.visitJumpInsn(GOTO, label6);
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_FULL, 23, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "org/hsqldb/Table", "[Ljava/lang/Object;", "org/hsqldb/persist/PersistentStore", "org/hsqldb/persist/TextCache", "org/hsqldb/persist/TextFileSettings"}, 2, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER});
methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/Boolean", "FALSE", "Ljava/lang/Boolean;");
methodVisitor.visitLabel(label6);
methodVisitor.visitFrame(Opcodes.F_FULL, 23, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "org/hsqldb/Table", "[Ljava/lang/Object;", "org/hsqldb/persist/PersistentStore", "org/hsqldb/persist/TextCache", "org/hsqldb/persist/TextFileSettings"}, 3, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER, "java/lang/Boolean"});
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 19);
methodVisitor.visitIntInsn(BIPUSH, 10);
methodVisitor.visitVarInsn(ALOAD, 22);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/persist/TextFileSettings", "isQuoted", "Z");
Label label7 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label7);
methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/Boolean", "TRUE", "Ljava/lang/Boolean;");
Label label8 = new Label();
methodVisitor.visitJumpInsn(GOTO, label8);
methodVisitor.visitLabel(label7);
methodVisitor.visitFrame(Opcodes.F_FULL, 23, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "org/hsqldb/Table", "[Ljava/lang/Object;", "org/hsqldb/persist/PersistentStore", "org/hsqldb/persist/TextCache", "org/hsqldb/persist/TextFileSettings"}, 2, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER});
methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/Boolean", "FALSE", "Ljava/lang/Boolean;");
methodVisitor.visitLabel(label8);
methodVisitor.visitFrame(Opcodes.F_FULL, 23, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "org/hsqldb/Table", "[Ljava/lang/Object;", "org/hsqldb/persist/PersistentStore", "org/hsqldb/persist/TextCache", "org/hsqldb/persist/TextFileSettings"}, 3, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER, "java/lang/Boolean"});
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 19);
methodVisitor.visitIntInsn(BIPUSH, 11);
methodVisitor.visitVarInsn(ALOAD, 22);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/persist/TextFileSettings", "isAllQuoted", "Z");
Label label9 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label9);
methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/Boolean", "TRUE", "Ljava/lang/Boolean;");
Label label10 = new Label();
methodVisitor.visitJumpInsn(GOTO, label10);
methodVisitor.visitLabel(label9);
methodVisitor.visitFrame(Opcodes.F_FULL, 23, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "org/hsqldb/Table", "[Ljava/lang/Object;", "org/hsqldb/persist/PersistentStore", "org/hsqldb/persist/TextCache", "org/hsqldb/persist/TextFileSettings"}, 2, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER});
methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/Boolean", "FALSE", "Ljava/lang/Boolean;");
methodVisitor.visitLabel(label10);
methodVisitor.visitFrame(Opcodes.F_FULL, 23, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "org/hsqldb/Table", "[Ljava/lang/Object;", "org/hsqldb/persist/PersistentStore", "org/hsqldb/persist/TextCache", "org/hsqldb/persist/TextFileSettings"}, 3, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER, "java/lang/Boolean"});
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 19);
methodVisitor.visitIntInsn(BIPUSH, 12);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/TextTable");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/TextTable", "isDescDataSource", "()Z", false);
Label label11 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label11);
methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/Boolean", "TRUE", "Ljava/lang/Boolean;");
Label label12 = new Label();
methodVisitor.visitJumpInsn(GOTO, label12);
methodVisitor.visitLabel(label11);
methodVisitor.visitFrame(Opcodes.F_FULL, 23, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "org/hsqldb/Table", "[Ljava/lang/Object;", "org/hsqldb/persist/PersistentStore", "org/hsqldb/persist/TextCache", "org/hsqldb/persist/TextFileSettings"}, 2, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER});
methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/Boolean", "FALSE", "Ljava/lang/Boolean;");
methodVisitor.visitLabel(label12);
methodVisitor.visitFrame(Opcodes.F_FULL, 23, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "org/hsqldb/Table", "[Ljava/lang/Object;", "org/hsqldb/persist/PersistentStore", "org/hsqldb/persist/TextCache", "org/hsqldb/persist/TextFileSettings"}, 3, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER, "java/lang/Boolean"});
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 19);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_FULL, 18, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 23);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "SYSTEM_TABLESTATS", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 23);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 23);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TABLE_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TABLE_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TABLE_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CARDINALITY");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SPACE_ID");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("ALLOCATED_SPACE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("USED_SPACE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("USED_MEMORY");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 23);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "allTables", "()Lorg/hsqldb/lib/Iterator;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
Label label1 = new Label();
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/lib/Iterator"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "hasNext", "()Z", true);
Label label2 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label2);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "next", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/Table");
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "isAccessibleTable", "(Lorg/hsqldb/Session;Lorg/hsqldb/Table;)Z", false);
Label label3 = new Label();
methodVisitor.visitJumpInsn(IFNE, label3);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getTableType", "()I", false);
Label label4 = new Label();
Label label5 = new Label();
methodVisitor.visitTableSwitchInsn(1, 8, label5, new Label[] { label4, label5, label4, label5, label5, label4, label5, label4 });
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"[Ljava/lang/Object;"}, 0, null);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getRowStore", "(Lorg/hsqldb/Session;)Lorg/hsqldb/persist/PersistentStore;", false);
methodVisitor.visitVarInsn(ASTORE, 15);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/persist/PersistentStore", "elementCount", "()J", true);
methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/Long", "valueOf", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "isCached", "()Z", false);
Label label6 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label6);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getSpaceID", "()I", false);
methodVisitor.visitInsn(I2L);
methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/Long", "valueOf", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitIntInsn(BIPUSH, 7);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLabel(label6);
methodVisitor.visitFrame(Opcodes.F_FULL, 16, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", "org/hsqldb/lib/Iterator", "org/hsqldb/Table", "[Ljava/lang/Object;", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/persist/PersistentStore"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_FULL, 5, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 16);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "ADMINISTRABLE_ROLE_AUTHORIZATIONS", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 24);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 24);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("GRANTEE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("ROLE_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("IS_GRANTABLE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 24);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "isAdmin", "()Z", false);
Label label1 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getGrantee", "()Lorg/hsqldb/rights/Grantee;", false);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "insertRoles", "(Lorg/hsqldb/Session;Lorg/hsqldb/Table;Lorg/hsqldb/rights/Grantee;Z)V", false);
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 5);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "APPLICABLE_ROLES", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 25);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 25);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("GRANTEE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("ROLE_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("IS_GRANTABLE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 25);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getGrantee", "()Lorg/hsqldb/rights/Grantee;", false);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "isAdmin", "()Z", false);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "insertRoles", "(Lorg/hsqldb/Session;Lorg/hsqldb/Table;Lorg/hsqldb/rights/Grantee;Z)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 5);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PRIVATE, "insertRoles", "(Lorg/hsqldb/Session;Lorg/hsqldb/Table;Lorg/hsqldb/rights/Grantee;Z)V", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getRowStore", "(Lorg/hsqldb/Session;)Lorg/hsqldb/persist/PersistentStore;", false);
methodVisitor.visitVarInsn(ASTORE, 8);
methodVisitor.visitVarInsn(ILOAD, 4);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getGranteeManager", "()Lorg/hsqldb/rights/GranteeManager;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/GranteeManager", "getRoleNames", "()Lorg/hsqldb/lib/Set;", false);
methodVisitor.visitVarInsn(ASTORE, 9);
methodVisitor.visitVarInsn(ALOAD, 9);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Set", "iterator", "()Lorg/hsqldb/lib/Iterator;", true);
methodVisitor.visitVarInsn(ASTORE, 10);
Label label1 = new Label();
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_FULL, 11, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/Table", "org/hsqldb/rights/Grantee", Opcodes.INTEGER, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/persist/PersistentStore", "org/hsqldb/lib/Set", "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "hasNext", "()Z", true);
Label label2 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label2);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "next", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/String");
methodVisitor.visitVarInsn(ASTORE, 11);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 12);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/HsqlNameManager$HsqlName", "getNameString", "()Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitLdcInsn("YES");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 8);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_CHOP,2, null, 0, null);
Label label3 = new Label();
methodVisitor.visitJumpInsn(GOTO, label3);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "getDirectRoles", "()Lorg/hsqldb/lib/OrderedHashSet;", false);
methodVisitor.visitVarInsn(ASTORE, 9);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 10);
Label label4 = new Label();
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_APPEND,2, new Object[] {"org/hsqldb/lib/OrderedHashSet", Opcodes.INTEGER}, 0, null);
methodVisitor.visitVarInsn(ILOAD, 10);
methodVisitor.visitVarInsn(ALOAD, 9);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/OrderedHashSet", "size", "()I", false);
methodVisitor.visitJumpInsn(IF_ICMPGE, label3);
methodVisitor.visitVarInsn(ALOAD, 9);
methodVisitor.visitVarInsn(ILOAD, 10);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/OrderedHashSet", "get", "(I)Ljava/lang/Object;", false);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/rights/Grantee");
methodVisitor.visitVarInsn(ASTORE, 11);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/HsqlNameManager$HsqlName", "getNameString", "()Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ASTORE, 12);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 13);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/HsqlNameManager$HsqlName", "getNameString", "()Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitLdcInsn("NO");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 8);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getGranteeManager", "()Lorg/hsqldb/rights/GranteeManager;", false);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/GranteeManager", "getRole", "(Ljava/lang/String;)Lorg/hsqldb/rights/Grantee;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ILOAD, 4);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "insertRoles", "(Lorg/hsqldb/Session;Lorg/hsqldb/Table;Lorg/hsqldb/rights/Grantee;Z)V", false);
methodVisitor.visitIincInsn(10, 1);
methodVisitor.visitJumpInsn(GOTO, label4);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_CHOP,2, null, 0, null);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(5, 14);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "ASSERTIONS", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 26);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 26);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CONSTRAINT_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CONSTRAINT_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CONSTRAINT_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("IS_DEFERRABLE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "YES_OR_NO", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("INITIALLY_DEFERRED");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "YES_OR_NO", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 26);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 9);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "AUTHORIZATIONS", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 27);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 27);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("AUTHORIZATION_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("AUTHORIZATION_TYPE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 27);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getGrantee", "()Lorg/hsqldb/rights/Grantee;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "visibleGrantees", "()Lorg/hsqldb/lib/OrderedHashSet;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/OrderedHashSet", "iterator", "()Lorg/hsqldb/lib/Iterator;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
Label label1 = new Label();
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/lib/Iterator"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "hasNext", "()Z", true);
Label label2 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label2);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "next", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/rights/Grantee");
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/HsqlNameManager$HsqlName", "getNameString", "()Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "isRole", "()Z", false);
Label label3 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label3);
methodVisitor.visitLdcInsn("ROLE");
Label label4 = new Label();
methodVisitor.visitJumpInsn(GOTO, label4);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_FULL, 7, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", "org/hsqldb/lib/Iterator", "org/hsqldb/rights/Grantee", "[Ljava/lang/Object;"}, 2, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER});
methodVisitor.visitLdcInsn("USER");
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_FULL, 7, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", "org/hsqldb/lib/Iterator", "org/hsqldb/rights/Grantee", "[Ljava/lang/Object;"}, 3, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER, "java/lang/String"});
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_CHOP,2, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 7);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "CHARACTER_SETS", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 28);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 28);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CHARACTER_SET_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CHARACTER_SET_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CHARACTER_SET_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CHARACTER_REPERTOIRE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("FORM_OF_USE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("DEFAULT_COLLATE_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("DEFAULT_COLLATE_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("DEFAULT_COLLATE_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 28);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Database", "schemaManager", "Lorg/hsqldb/SchemaManager;");
methodVisitor.visitIntInsn(BIPUSH, 14);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/SchemaManager", "databaseObjectIterator", "(I)Lorg/hsqldb/lib/Iterator;", false);
methodVisitor.visitVarInsn(ASTORE, 12);
Label label1 = new Label();
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_FULL, 13, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "hasNext", "()Z", true);
Label label2 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label2);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "next", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/types/Charset");
methodVisitor.visitVarInsn(ASTORE, 13);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getGrantee", "()Lorg/hsqldb/rights/Grantee;", false);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "isAccessible", "(Lorg/hsqldb/SchemaObject;)Z", false);
Label label3 = new Label();
methodVisitor.visitJumpInsn(IFNE, label3);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/types/Charset"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 14);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Charset", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Charset", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitLdcInsn("UCS");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitLdcInsn("UTF16");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Charset", "base", "Lorg/hsqldb/HsqlNameManager$HsqlName;");
Label label4 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label4);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitIntInsn(BIPUSH, 7);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitInsn(AASTORE);
Label label5 = new Label();
methodVisitor.visitJumpInsn(GOTO, label5);
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"[Ljava/lang/Object;"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Charset", "base", "Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "schema", "Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitIntInsn(BIPUSH, 7);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Charset", "base", "Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_CHOP,2, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 15);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "CHECK_CONSTRAINT_ROUTINE_USAGE", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/lang/Exception");
Label label3 = new Label();
Label label4 = new Label();
Label label5 = new Label();
methodVisitor.visitTryCatchBlock(label3, label4, label5, "java/lang/Exception");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 29);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label6 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label6);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 29);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CONSTRAINT_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CONSTRAINT_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CONSTRAINT_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SPECIFIC_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SPECIFIC_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SPECIFIC_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 29);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label6);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Database", "schemaManager", "Lorg/hsqldb/SchemaManager;");
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/SchemaManager", "databaseObjectIterator", "(I)Lorg/hsqldb/lib/Iterator;", false);
methodVisitor.visitVarInsn(ASTORE, 10);
Label label7 = new Label();
methodVisitor.visitLabel(label7);
methodVisitor.visitFrame(Opcodes.F_FULL, 11, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "hasNext", "()Z", true);
Label label8 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label8);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "next", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/HsqlNameManager$HsqlName");
methodVisitor.visitVarInsn(ASTORE, 14);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "parent", "Lorg/hsqldb/HsqlNameManager$HsqlName;");
Label label9 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label9);
methodVisitor.visitJumpInsn(GOTO, label7);
methodVisitor.visitLabel(label9);
methodVisitor.visitFrame(Opcodes.F_FULL, 15, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/HsqlNameManager$HsqlName"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "parent", "Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "type", "I");
Label label10 = new Label();
methodVisitor.visitLookupSwitchInsn(label10, new int[] { 3, 13 }, new Label[] { label0, label3 });
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Database", "schemaManager", "Lorg/hsqldb/SchemaManager;");
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "parent", "Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "parent", "Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "schema", "Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/SchemaManager", "getSchemaObject", "(Ljava/lang/String;Ljava/lang/String;I)Lorg/hsqldb/SchemaObject;", false);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/Table");
methodVisitor.visitVarInsn(ASTORE, 15);
methodVisitor.visitLabel(label1);
Label label11 = new Label();
methodVisitor.visitJumpInsn(GOTO, label11);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/Exception"});
methodVisitor.visitVarInsn(ASTORE, 16);
methodVisitor.visitJumpInsn(GOTO, label7);
methodVisitor.visitLabel(label11);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getConstraint", "(Ljava/lang/String;)Lorg/hsqldb/Constraint;", false);
methodVisitor.visitVarInsn(ASTORE, 11);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Constraint", "getConstraintType", "()I", false);
methodVisitor.visitInsn(ICONST_3);
Label label12 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPEQ, label12);
methodVisitor.visitJumpInsn(GOTO, label7);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Database", "schemaManager", "Lorg/hsqldb/SchemaManager;");
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "parent", "Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "parent", "Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "schema", "Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitIntInsn(BIPUSH, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/SchemaManager", "getSchemaObject", "(Ljava/lang/String;Ljava/lang/String;I)Lorg/hsqldb/SchemaObject;", false);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/types/Type");
methodVisitor.visitVarInsn(ASTORE, 15);
methodVisitor.visitLabel(label4);
Label label13 = new Label();
methodVisitor.visitJumpInsn(GOTO, label13);
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/Exception"});
methodVisitor.visitVarInsn(ASTORE, 16);
methodVisitor.visitJumpInsn(GOTO, label7);
methodVisitor.visitLabel(label13);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/types/Type"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "userTypeModifier", "Lorg/hsqldb/types/UserTypeModifier;");
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/UserTypeModifier", "getConstraint", "(Ljava/lang/String;)Lorg/hsqldb/Constraint;", false);
methodVisitor.visitVarInsn(ASTORE, 11);
methodVisitor.visitLabel(label10);
methodVisitor.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
methodVisitor.visitJumpInsn(GOTO, label7);
methodVisitor.visitLabel(label12);
methodVisitor.visitFrame(Opcodes.F_FULL, 15, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "org/hsqldb/Constraint", Opcodes.TOP, Opcodes.TOP, "org/hsqldb/HsqlNameManager$HsqlName"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Constraint", "getReferences", "()Lorg/hsqldb/lib/OrderedHashSet;", false);
methodVisitor.visitVarInsn(ASTORE, 12);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 15);
Label label14 = new Label();
methodVisitor.visitLabel(label14);
methodVisitor.visitFrame(Opcodes.F_FULL, 16, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "org/hsqldb/Constraint", "org/hsqldb/lib/OrderedHashSet", Opcodes.TOP, "org/hsqldb/HsqlNameManager$HsqlName", Opcodes.INTEGER}, 0, new Object[] {});
methodVisitor.visitVarInsn(ILOAD, 15);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/OrderedHashSet", "size", "()I", false);
Label label15 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPGE, label15);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitVarInsn(ILOAD, 15);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/OrderedHashSet", "get", "(I)Ljava/lang/Object;", false);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/HsqlNameManager$HsqlName");
methodVisitor.visitVarInsn(ASTORE, 16);
methodVisitor.visitVarInsn(ALOAD, 16);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "type", "I");
methodVisitor.visitIntInsn(BIPUSH, 24);
Label label16 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPEQ, label16);
Label label17 = new Label();
methodVisitor.visitJumpInsn(GOTO, label17);
methodVisitor.visitLabel(label16);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/HsqlNameManager$HsqlName"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getGrantee", "()Lorg/hsqldb/rights/Grantee;", false);
methodVisitor.visitVarInsn(ALOAD, 16);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "isFullyAccessibleByRole", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Z", false);
Label label18 = new Label();
methodVisitor.visitJumpInsn(IFNE, label18);
methodVisitor.visitJumpInsn(GOTO, label17);
methodVisitor.visitLabel(label18);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 13);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Constraint", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Constraint", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitVarInsn(ALOAD, 16);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "schema", "Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitVarInsn(ALOAD, 16);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitLabel(label17);
methodVisitor.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
methodVisitor.visitIincInsn(15, 1);
methodVisitor.visitJumpInsn(GOTO, label14);
methodVisitor.visitLabel(label15);
methodVisitor.visitFrame(Opcodes.F_CHOP,3, null, 0, null);
methodVisitor.visitJumpInsn(GOTO, label7);
methodVisitor.visitLabel(label8);
methodVisitor.visitFrame(Opcodes.F_CHOP,2, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 17);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "CHECK_CONSTRAINTS", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/lang/Exception");
Label label3 = new Label();
Label label4 = new Label();
Label label5 = new Label();
methodVisitor.visitTryCatchBlock(label3, label4, label5, "java/lang/Exception");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 30);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label6 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label6);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 30);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CONSTRAINT_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CONSTRAINT_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CONSTRAINT_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CHECK_CLAUSE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 30);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label6);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Database", "schemaManager", "Lorg/hsqldb/SchemaManager;");
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/SchemaManager", "databaseObjectIterator", "(I)Lorg/hsqldb/lib/Iterator;", false);
methodVisitor.visitVarInsn(ASTORE, 8);
Label label7 = new Label();
methodVisitor.visitLabel(label7);
methodVisitor.visitFrame(Opcodes.F_FULL, 9, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 8);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "hasNext", "()Z", true);
Label label8 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label8);
methodVisitor.visitVarInsn(ALOAD, 8);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "next", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/Table");
methodVisitor.visitVarInsn(ASTORE, 9);
methodVisitor.visitVarInsn(ALOAD, 9);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "isView", "()Z", false);
methodVisitor.visitJumpInsn(IFNE, label7);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getGrantee", "()Lorg/hsqldb/rights/Grantee;", false);
methodVisitor.visitVarInsn(ALOAD, 9);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "isFullyAccessibleByRole", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Z", false);
Label label9 = new Label();
methodVisitor.visitJumpInsn(IFNE, label9);
methodVisitor.visitJumpInsn(GOTO, label7);
methodVisitor.visitLabel(label9);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 9);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getConstraints", "()[Lorg/hsqldb/Constraint;", false);
methodVisitor.visitVarInsn(ASTORE, 10);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitInsn(ARRAYLENGTH);
methodVisitor.visitVarInsn(ISTORE, 11);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 14);
Label label10 = new Label();
methodVisitor.visitLabel(label10);
methodVisitor.visitFrame(Opcodes.F_FULL, 15, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "org/hsqldb/Table", "[Lorg/hsqldb/Constraint;", Opcodes.INTEGER, Opcodes.TOP, Opcodes.TOP, Opcodes.INTEGER}, 0, new Object[] {});
methodVisitor.visitVarInsn(ILOAD, 14);
methodVisitor.visitVarInsn(ILOAD, 11);
Label label11 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPGE, label11);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitVarInsn(ILOAD, 14);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 12);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Constraint", "getConstraintType", "()I", false);
methodVisitor.visitInsn(ICONST_3);
Label label12 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPEQ, label12);
Label label13 = new Label();
methodVisitor.visitJumpInsn(GOTO, label13);
methodVisitor.visitLabel(label12);
methodVisitor.visitFrame(Opcodes.F_FULL, 15, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "org/hsqldb/Table", "[Lorg/hsqldb/Constraint;", Opcodes.INTEGER, "org/hsqldb/Constraint", Opcodes.TOP, Opcodes.INTEGER}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 13);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 9);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Constraint", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Constraint", "getCheckSQL", "()Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLabel(label1);
Label label14 = new Label();
methodVisitor.visitJumpInsn(GOTO, label14);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_FULL, 15, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "org/hsqldb/Table", "[Lorg/hsqldb/Constraint;", Opcodes.INTEGER, "org/hsqldb/Constraint", "[Ljava/lang/Object;", Opcodes.INTEGER}, 1, new Object[] {"java/lang/Exception"});
methodVisitor.visitVarInsn(ASTORE, 15);
methodVisitor.visitLabel(label14);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitLabel(label13);
methodVisitor.visitFrame(Opcodes.F_FULL, 15, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "org/hsqldb/Table", "[Lorg/hsqldb/Constraint;", Opcodes.INTEGER, "org/hsqldb/Constraint", Opcodes.TOP, Opcodes.INTEGER}, 0, new Object[] {});
methodVisitor.visitIincInsn(14, 1);
methodVisitor.visitJumpInsn(GOTO, label10);
methodVisitor.visitLabel(label11);
methodVisitor.visitFrame(Opcodes.F_CHOP,3, null, 0, null);
methodVisitor.visitJumpInsn(GOTO, label7);
methodVisitor.visitLabel(label8);
methodVisitor.visitFrame(Opcodes.F_CHOP,3, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Database", "schemaManager", "Lorg/hsqldb/SchemaManager;");
methodVisitor.visitIntInsn(BIPUSH, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/SchemaManager", "databaseObjectIterator", "(I)Lorg/hsqldb/lib/Iterator;", false);
methodVisitor.visitVarInsn(ASTORE, 14);
Label label15 = new Label();
methodVisitor.visitLabel(label15);
methodVisitor.visitFrame(Opcodes.F_FULL, 15, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "hasNext", "()Z", true);
Label label16 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label16);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "next", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/types/Type");
methodVisitor.visitVarInsn(ASTORE, 15);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isDomainType", "()Z", false);
Label label17 = new Label();
methodVisitor.visitJumpInsn(IFNE, label17);
methodVisitor.visitJumpInsn(GOTO, label15);
methodVisitor.visitLabel(label17);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/types/Type"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getGrantee", "()Lorg/hsqldb/rights/Grantee;", false);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "isFullyAccessibleByRole", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Z", false);
Label label18 = new Label();
methodVisitor.visitJumpInsn(IFNE, label18);
methodVisitor.visitJumpInsn(GOTO, label15);
methodVisitor.visitLabel(label18);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "userTypeModifier", "Lorg/hsqldb/types/UserTypeModifier;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/UserTypeModifier", "getConstraints", "()[Lorg/hsqldb/Constraint;", false);
methodVisitor.visitVarInsn(ASTORE, 10);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitInsn(ARRAYLENGTH);
methodVisitor.visitVarInsn(ISTORE, 11);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 16);
Label label19 = new Label();
methodVisitor.visitLabel(label19);
methodVisitor.visitFrame(Opcodes.F_FULL, 17, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", Opcodes.TOP, "[Lorg/hsqldb/Constraint;", Opcodes.INTEGER, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "org/hsqldb/types/Type", Opcodes.INTEGER}, 0, new Object[] {});
methodVisitor.visitVarInsn(ILOAD, 16);
methodVisitor.visitVarInsn(ILOAD, 11);
Label label20 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPGE, label20);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitVarInsn(ILOAD, 16);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 12);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 13);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Constraint", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Constraint", "getCheckSQL", "()Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLabel(label4);
Label label21 = new Label();
methodVisitor.visitJumpInsn(GOTO, label21);
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_FULL, 17, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", Opcodes.TOP, "[Lorg/hsqldb/Constraint;", Opcodes.INTEGER, "org/hsqldb/Constraint", "[Ljava/lang/Object;", "org/hsqldb/lib/Iterator", "org/hsqldb/types/Type", Opcodes.INTEGER}, 1, new Object[] {"java/lang/Exception"});
methodVisitor.visitVarInsn(ASTORE, 17);
methodVisitor.visitLabel(label21);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitIincInsn(16, 1);
methodVisitor.visitJumpInsn(GOTO, label19);
methodVisitor.visitLabel(label20);
methodVisitor.visitFrame(Opcodes.F_FULL, 15, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", Opcodes.TOP, "[Lorg/hsqldb/Constraint;", Opcodes.INTEGER, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitJumpInsn(GOTO, label15);
methodVisitor.visitLabel(label16);
methodVisitor.visitFrame(Opcodes.F_FULL, 15, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 18);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "COLLATIONS", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 31);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 31);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("COLLATION_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("COLLATION_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("COLLATION_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("PAD_ATTRIBUTE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 31);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitLdcInsn("PAD SPACE");
methodVisitor.visitVarInsn(ASTORE, 12);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Database", "schemaManager", "Lorg/hsqldb/SchemaManager;");
methodVisitor.visitIntInsn(BIPUSH, 15);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/SchemaManager", "databaseObjectIterator", "(I)Lorg/hsqldb/lib/Iterator;", false);
methodVisitor.visitVarInsn(ASTORE, 8);
Label label1 = new Label();
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_FULL, 13, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "java/lang/String"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 8);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "hasNext", "()Z", true);
Label label2 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label2);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 13);
methodVisitor.visitVarInsn(ALOAD, 8);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "next", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/types/Collation");
methodVisitor.visitVarInsn(ASTORE, 9);
methodVisitor.visitVarInsn(ALOAD, 9);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Collation", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitVarInsn(ASTORE, 11);
methodVisitor.visitVarInsn(ALOAD, 9);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Collation", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitVarInsn(ASTORE, 10);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitVarInsn(ALOAD, 9);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Collation", "isPadSpace", "()Z", false);
Label label3 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label3);
methodVisitor.visitLdcInsn("PAD SPACE");
Label label4 = new Label();
methodVisitor.visitJumpInsn(GOTO, label4);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_FULL, 14, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "org/hsqldb/types/Collation", "java/lang/String", "java/lang/String", "java/lang/String", "[Ljava/lang/Object;"}, 2, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER});
methodVisitor.visitLdcInsn("NO PAD");
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_FULL, 14, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "org/hsqldb/types/Collation", "java/lang/String", "java/lang/String", "java/lang/String", "[Ljava/lang/Object;"}, 3, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER, "java/lang/String"});
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_FULL, 13, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "java/lang/String"}, 0, new Object[] {});
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/types/Collation", "nameToJavaName", "Lorg/hsqldb/lib/HashMap;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/HashMap", "keySet", "()Lorg/hsqldb/lib/Set;", false);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Set", "iterator", "()Lorg/hsqldb/lib/Iterator;", true);
methodVisitor.visitVarInsn(ASTORE, 8);
Label label5 = new Label();
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 8);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "hasNext", "()Z", true);
Label label6 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label6);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 13);
methodVisitor.visitLdcInsn("INFORMATION_SCHEMA");
methodVisitor.visitVarInsn(ASTORE, 11);
methodVisitor.visitVarInsn(ALOAD, 8);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "next", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/String");
methodVisitor.visitVarInsn(ASTORE, 10);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitJumpInsn(GOTO, label5);
methodVisitor.visitLabel(label6);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 14);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "COLUMN_COLUMN_USAGE", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 32);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 32);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TABLE_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TABLE_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TABLE_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("COLUMN_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("DEPENDENT_COLUMN");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 32);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Database", "schemaManager", "Lorg/hsqldb/SchemaManager;");
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/SchemaManager", "databaseObjectIterator", "(I)Lorg/hsqldb/lib/Iterator;", false);
methodVisitor.visitVarInsn(ASTORE, 9);
Label label1 = new Label();
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_FULL, 10, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 9);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "hasNext", "()Z", true);
Label label2 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label2);
methodVisitor.visitVarInsn(ALOAD, 9);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "next", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/Table");
methodVisitor.visitVarInsn(ASTORE, 10);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "isView", "()Z", false);
methodVisitor.visitJumpInsn(IFNE, label1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getGrantee", "()Lorg/hsqldb/rights/Grantee;", false);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "isFullyAccessibleByRole", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Z", false);
Label label3 = new Label();
methodVisitor.visitJumpInsn(IFNE, label3);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "hasGeneratedColumn", "()Z", false);
Label label4 = new Label();
methodVisitor.visitJumpInsn(IFNE, label4);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 12);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 13);
Label label5 = new Label();
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_APPEND,3, new Object[] {Opcodes.TOP, "org/hsqldb/HsqlNameManager$HsqlName", Opcodes.INTEGER}, 0, null);
methodVisitor.visitVarInsn(ILOAD, 13);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getColumnCount", "()I", false);
Label label6 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPGE, label6);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitVarInsn(ILOAD, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getColumn", "(I)Lorg/hsqldb/ColumnSchema;", false);
methodVisitor.visitVarInsn(ASTORE, 14);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/ColumnSchema", "isGenerated", "()Z", false);
Label label7 = new Label();
methodVisitor.visitJumpInsn(IFNE, label7);
Label label8 = new Label();
methodVisitor.visitJumpInsn(GOTO, label8);
methodVisitor.visitLabel(label7);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/ColumnSchema"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/ColumnSchema", "getGeneratedColumnReferences", "()Lorg/hsqldb/lib/OrderedHashSet;", false);
methodVisitor.visitVarInsn(ASTORE, 15);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitJumpInsn(IFNULL, label8);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 16);
Label label9 = new Label();
methodVisitor.visitLabel(label9);
methodVisitor.visitFrame(Opcodes.F_APPEND,2, new Object[] {"org/hsqldb/lib/OrderedHashSet", Opcodes.INTEGER}, 0, null);
methodVisitor.visitVarInsn(ILOAD, 16);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/OrderedHashSet", "size", "()I", false);
methodVisitor.visitJumpInsn(IF_ICMPGE, label8);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 11);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "schema", "Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitVarInsn(ILOAD, 16);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/OrderedHashSet", "get", "(I)Ljava/lang/Object;", false);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/HsqlNameManager$HsqlName");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/ColumnSchema", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitIincInsn(16, 1);
methodVisitor.visitJumpInsn(GOTO, label9);
methodVisitor.visitLabel(label8);
methodVisitor.visitFrame(Opcodes.F_CHOP,3, null, 0, null);
methodVisitor.visitIincInsn(13, 1);
methodVisitor.visitJumpInsn(GOTO, label5);
methodVisitor.visitLabel(label6);
methodVisitor.visitFrame(Opcodes.F_CHOP,3, null, 0, null);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 17);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "COLUMN_DOMAIN_USAGE", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 33);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 33);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("DOMAIN_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("DOMAIN_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("DOMAIN_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TABLE_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TABLE_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TABLE_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("COLUMN_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 33);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitIntInsn(BIPUSH, 7);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "allTables", "()Lorg/hsqldb/lib/Iterator;", false);
methodVisitor.visitVarInsn(ASTORE, 12);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getGrantee", "()Lorg/hsqldb/rights/Grantee;", false);
methodVisitor.visitVarInsn(ASTORE, 17);
Label label1 = new Label();
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_FULL, 18, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/rights/Grantee"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "hasNext", "()Z", true);
Label label2 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label2);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "next", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/Table");
methodVisitor.visitVarInsn(ASTORE, 13);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getColumnCount", "()I", false);
methodVisitor.visitVarInsn(ISTORE, 11);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 16);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 18);
Label label3 = new Label();
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_FULL, 19, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.INTEGER, "org/hsqldb/lib/Iterator", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, "org/hsqldb/HsqlNameManager$HsqlName", "org/hsqldb/rights/Grantee", Opcodes.INTEGER}, 0, new Object[] {});
methodVisitor.visitVarInsn(ILOAD, 18);
methodVisitor.visitVarInsn(ILOAD, 11);
Label label4 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPGE, label4);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitVarInsn(ILOAD, 18);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getColumn", "(I)Lorg/hsqldb/ColumnSchema;", false);
methodVisitor.visitVarInsn(ASTORE, 19);
methodVisitor.visitVarInsn(ALOAD, 19);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/ColumnSchema", "getDataType", "()Lorg/hsqldb/types/Type;", false);
methodVisitor.visitVarInsn(ASTORE, 15);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isDomainType", "()Z", false);
Label label5 = new Label();
methodVisitor.visitJumpInsn(IFNE, label5);
Label label6 = new Label();
methodVisitor.visitJumpInsn(GOTO, label6);
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_FULL, 20, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.INTEGER, "org/hsqldb/lib/Iterator", "org/hsqldb/Table", Opcodes.TOP, "org/hsqldb/types/Type", "org/hsqldb/HsqlNameManager$HsqlName", "org/hsqldb/rights/Grantee", Opcodes.INTEGER, "org/hsqldb/ColumnSchema"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 17);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "isFullyAccessibleByRole", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Z", false);
Label label7 = new Label();
methodVisitor.visitJumpInsn(IFNE, label7);
methodVisitor.visitJumpInsn(GOTO, label6);
methodVisitor.visitLabel(label7);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 14);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitVarInsn(ALOAD, 16);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "schema", "Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitVarInsn(ALOAD, 16);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitVarInsn(ALOAD, 19);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/ColumnSchema", "getNameString", "()Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitLabel(label6);
methodVisitor.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
methodVisitor.visitIincInsn(18, 1);
methodVisitor.visitJumpInsn(GOTO, label3);
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_FULL, 18, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.INTEGER, "org/hsqldb/lib/Iterator", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, "org/hsqldb/HsqlNameManager$HsqlName", "org/hsqldb/rights/Grantee"}, 0, new Object[] {});
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_FULL, 18, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/rights/Grantee"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 20);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "COLUMN_UDT_USAGE", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 35);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 35);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("UDT_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("UDT_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("UDT_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TABLE_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TABLE_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TABLE_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("COLUMN_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 35);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitIntInsn(BIPUSH, 7);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "allTables", "()Lorg/hsqldb/lib/Iterator;", false);
methodVisitor.visitVarInsn(ASTORE, 12);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getGrantee", "()Lorg/hsqldb/rights/Grantee;", false);
methodVisitor.visitVarInsn(ASTORE, 17);
Label label1 = new Label();
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_FULL, 18, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/rights/Grantee"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "hasNext", "()Z", true);
Label label2 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label2);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "next", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/Table");
methodVisitor.visitVarInsn(ASTORE, 13);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getColumnCount", "()I", false);
methodVisitor.visitVarInsn(ISTORE, 11);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 16);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 18);
Label label3 = new Label();
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_FULL, 19, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.INTEGER, "org/hsqldb/lib/Iterator", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, "org/hsqldb/HsqlNameManager$HsqlName", "org/hsqldb/rights/Grantee", Opcodes.INTEGER}, 0, new Object[] {});
methodVisitor.visitVarInsn(ILOAD, 18);
methodVisitor.visitVarInsn(ILOAD, 11);
Label label4 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPGE, label4);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitVarInsn(ILOAD, 18);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getColumn", "(I)Lorg/hsqldb/ColumnSchema;", false);
methodVisitor.visitVarInsn(ASTORE, 19);
methodVisitor.visitVarInsn(ALOAD, 19);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/ColumnSchema", "getDataType", "()Lorg/hsqldb/types/Type;", false);
methodVisitor.visitVarInsn(ASTORE, 15);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isDistinctType", "()Z", false);
Label label5 = new Label();
methodVisitor.visitJumpInsn(IFNE, label5);
Label label6 = new Label();
methodVisitor.visitJumpInsn(GOTO, label6);
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_FULL, 20, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.INTEGER, "org/hsqldb/lib/Iterator", "org/hsqldb/Table", Opcodes.TOP, "org/hsqldb/types/Type", "org/hsqldb/HsqlNameManager$HsqlName", "org/hsqldb/rights/Grantee", Opcodes.INTEGER, "org/hsqldb/ColumnSchema"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 17);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "isFullyAccessibleByRole", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Z", false);
Label label7 = new Label();
methodVisitor.visitJumpInsn(IFNE, label7);
methodVisitor.visitJumpInsn(GOTO, label6);
methodVisitor.visitLabel(label7);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 14);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitVarInsn(ALOAD, 16);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "schema", "Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitVarInsn(ALOAD, 16);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitVarInsn(ALOAD, 19);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/ColumnSchema", "getNameString", "()Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitLabel(label6);
methodVisitor.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
methodVisitor.visitIincInsn(18, 1);
methodVisitor.visitJumpInsn(GOTO, label3);
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_FULL, 18, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.INTEGER, "org/hsqldb/lib/Iterator", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, "org/hsqldb/HsqlNameManager$HsqlName", "org/hsqldb/rights/Grantee"}, 0, new Object[] {});
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_FULL, 18, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/rights/Grantee"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 20);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "COLUMNS", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 36);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 36);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TABLE_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TABLE_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TABLE_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("COLUMN_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("ORDINAL_POSITION");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("COLUMN_DEFAULT");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("IS_NULLABLE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "YES_OR_NO", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("DATA_TYPE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CHARACTER_MAXIMUM_LENGTH");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CHARACTER_OCTET_LENGTH");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("NUMERIC_PRECISION");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("NUMERIC_PRECISION_RADIX");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("NUMERIC_SCALE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("DATETIME_PRECISION");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("INTERVAL_TYPE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("INTERVAL_PRECISION");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CHARACTER_SET_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CHARACTER_SET_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CHARACTER_SET_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("COLLATION_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("COLLATION_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("COLLATION_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("DOMAIN_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("DOMAIN_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("DOMAIN_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("UDT_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("UDT_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("UDT_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SCOPE_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SCOPE_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SCOPE_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("MAXIMUM_CARDINALITY");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("DTD_IDENTIFIER");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("IS_SELF_REFERENCING");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "YES_OR_NO", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("IS_IDENTITY");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "YES_OR_NO", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("IDENTITY_GENERATION");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("IDENTITY_START");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("IDENTITY_INCREMENT");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("IDENTITY_MAXIMUM");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("IDENTITY_MINIMUM");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("IDENTITY_CYCLE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "YES_OR_NO", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("IS_GENERATED");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("GENERATION_EXPRESSION");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("IS_UPDATABLE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "YES_OR_NO", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("DECLARED_DATA_TYPE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("DECLARED_NUMERIC_PRECISION");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("DECLARED_NUMERIC_SCALE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 36);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "allTables", "()Lorg/hsqldb/lib/Iterator;", false);
methodVisitor.visitVarInsn(ASTORE, 52);
Label label1 = new Label();
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_FULL, 53, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 52);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "hasNext", "()Z", true);
Label label2 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label2);
methodVisitor.visitVarInsn(ALOAD, 52);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "next", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/Table");
methodVisitor.visitVarInsn(ASTORE, 53);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getGrantee", "()Lorg/hsqldb/rights/Grantee;", false);
methodVisitor.visitVarInsn(ALOAD, 53);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "getColumnsForAllPrivileges", "(Lorg/hsqldb/SchemaObject;)Lorg/hsqldb/lib/OrderedHashSet;", false);
methodVisitor.visitVarInsn(ASTORE, 55);
methodVisitor.visitVarInsn(ALOAD, 55);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/OrderedHashSet", "isEmpty", "()Z", false);
Label label3 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label3);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_APPEND,3, new Object[] {"org/hsqldb/Table", Opcodes.TOP, "org/hsqldb/lib/OrderedHashSet"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 53);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getColumnCount", "()I", false);
methodVisitor.visitVarInsn(ISTORE, 51);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 57);
Label label4 = new Label();
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_FULL, 58, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.INTEGER, "org/hsqldb/lib/Iterator", "org/hsqldb/Table", Opcodes.TOP, "org/hsqldb/lib/OrderedHashSet", Opcodes.TOP, Opcodes.INTEGER}, 0, new Object[] {});
methodVisitor.visitVarInsn(ILOAD, 57);
methodVisitor.visitVarInsn(ILOAD, 51);
Label label5 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPGE, label5);
methodVisitor.visitVarInsn(ALOAD, 53);
methodVisitor.visitVarInsn(ILOAD, 57);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getColumn", "(I)Lorg/hsqldb/ColumnSchema;", false);
methodVisitor.visitVarInsn(ASTORE, 58);
methodVisitor.visitVarInsn(ALOAD, 58);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/ColumnSchema", "getDataType", "()Lorg/hsqldb/types/Type;", false);
methodVisitor.visitVarInsn(ASTORE, 56);
methodVisitor.visitVarInsn(ALOAD, 55);
methodVisitor.visitVarInsn(ALOAD, 58);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/ColumnSchema", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/OrderedHashSet", "contains", "(Ljava/lang/Object;)Z", false);
Label label6 = new Label();
methodVisitor.visitJumpInsn(IFNE, label6);
Label label7 = new Label();
methodVisitor.visitJumpInsn(GOTO, label7);
methodVisitor.visitLabel(label6);
methodVisitor.visitFrame(Opcodes.F_FULL, 59, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.INTEGER, "org/hsqldb/lib/Iterator", "org/hsqldb/Table", Opcodes.TOP, "org/hsqldb/lib/OrderedHashSet", "org/hsqldb/types/Type", Opcodes.INTEGER, "org/hsqldb/ColumnSchema"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 54);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 53);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitVarInsn(ALOAD, 53);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitVarInsn(ALOAD, 58);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/ColumnSchema", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitVarInsn(ILOAD, 57);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IADD);
methodVisitor.visitInsn(I2L);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitVarInsn(ALOAD, 58);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/ColumnSchema", "getDefaultSQL", "()Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitVarInsn(ALOAD, 58);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/ColumnSchema", "isNullable", "()Z", false);
Label label8 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label8);
methodVisitor.visitLdcInsn("YES");
Label label9 = new Label();
methodVisitor.visitJumpInsn(GOTO, label9);
methodVisitor.visitLabel(label8);
methodVisitor.visitFrame(Opcodes.F_FULL, 59, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.INTEGER, "org/hsqldb/lib/Iterator", "org/hsqldb/Table", "[Ljava/lang/Object;", "org/hsqldb/lib/OrderedHashSet", "org/hsqldb/types/Type", Opcodes.INTEGER, "org/hsqldb/ColumnSchema"}, 2, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER});
methodVisitor.visitLdcInsn("NO");
methodVisitor.visitLabel(label9);
methodVisitor.visitFrame(Opcodes.F_FULL, 59, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.INTEGER, "org/hsqldb/lib/Iterator", "org/hsqldb/Table", "[Ljava/lang/Object;", "org/hsqldb/lib/OrderedHashSet", "org/hsqldb/types/Type", Opcodes.INTEGER, "org/hsqldb/ColumnSchema"}, 3, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER, "java/lang/String"});
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitIntInsn(BIPUSH, 7);
methodVisitor.visitVarInsn(ALOAD, 56);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "getFullNameString", "()Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 56);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isCharacterType", "()Z", false);
Label label10 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label10);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitIntInsn(BIPUSH, 8);
methodVisitor.visitVarInsn(ALOAD, 56);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "precision", "J");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitIntInsn(BIPUSH, 9);
methodVisitor.visitVarInsn(ALOAD, 56);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "precision", "J");
methodVisitor.visitLdcInsn(new Long(2L));
methodVisitor.visitInsn(LMUL);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitIntInsn(BIPUSH, 16);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitIntInsn(BIPUSH, 17);
methodVisitor.visitVarInsn(ALOAD, 56);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/types/CharacterType");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/CharacterType", "getCharacterSet", "()Lorg/hsqldb/types/Charset;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Charset", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitIntInsn(BIPUSH, 18);
methodVisitor.visitVarInsn(ALOAD, 56);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/types/CharacterType");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/CharacterType", "getCharacterSet", "()Lorg/hsqldb/types/Charset;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Charset", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitIntInsn(BIPUSH, 19);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitVarInsn(ALOAD, 56);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/types/CharacterType");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/CharacterType", "getCollation", "()Lorg/hsqldb/types/Collation;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Collation", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitIntInsn(BIPUSH, 21);
methodVisitor.visitVarInsn(ALOAD, 56);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/types/CharacterType");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/CharacterType", "getCollation", "()Lorg/hsqldb/types/Collation;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Collation", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
Label label11 = new Label();
methodVisitor.visitJumpInsn(GOTO, label11);
methodVisitor.visitLabel(label10);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 56);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isNumberType", "()Z", false);
Label label12 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label12);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitIntInsn(BIPUSH, 10);
methodVisitor.visitVarInsn(ALOAD, 56);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/types/NumberType");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/NumberType", "getNumericPrecisionInRadix", "()I", false);
methodVisitor.visitInsn(I2L);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitIntInsn(BIPUSH, 45);
methodVisitor.visitVarInsn(ALOAD, 56);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/types/NumberType");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/NumberType", "getNumericPrecisionInRadix", "()I", false);
methodVisitor.visitInsn(I2L);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 56);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isExactNumberType", "()Z", false);
Label label13 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label13);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitIntInsn(BIPUSH, 12);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitIntInsn(BIPUSH, 46);
methodVisitor.visitVarInsn(ALOAD, 56);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "scale", "I");
methodVisitor.visitInsn(I2L);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(DUP_X2);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLabel(label13);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitIntInsn(BIPUSH, 11);
methodVisitor.visitVarInsn(ALOAD, 56);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "getPrecisionRadix", "()I", false);
methodVisitor.visitInsn(I2L);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitJumpInsn(GOTO, label11);
methodVisitor.visitLabel(label12);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 56);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isBooleanType", "()Z", false);
Label label14 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label14);
methodVisitor.visitJumpInsn(GOTO, label11);
methodVisitor.visitLabel(label14);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 56);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isDateTimeType", "()Z", false);
Label label15 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label15);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitIntInsn(BIPUSH, 13);
methodVisitor.visitVarInsn(ALOAD, 56);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "scale", "I");
methodVisitor.visitInsn(I2L);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitJumpInsn(GOTO, label11);
methodVisitor.visitLabel(label15);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 56);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isIntervalType", "()Z", false);
Label label16 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label16);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitIntInsn(BIPUSH, 7);
methodVisitor.visitLdcInsn("INTERVAL");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitIntInsn(BIPUSH, 14);
methodVisitor.visitVarInsn(ALOAD, 56);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/types/IntervalType");
methodVisitor.visitInsn(POP);
methodVisitor.visitVarInsn(ALOAD, 56);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "typeCode", "I");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/types/IntervalType", "getQualifier", "(I)Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitIntInsn(BIPUSH, 15);
methodVisitor.visitVarInsn(ALOAD, 56);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "precision", "J");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitIntInsn(BIPUSH, 13);
methodVisitor.visitVarInsn(ALOAD, 56);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "scale", "I");
methodVisitor.visitInsn(I2L);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitJumpInsn(GOTO, label11);
methodVisitor.visitLabel(label16);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 56);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isBinaryType", "()Z", false);
Label label17 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label17);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitIntInsn(BIPUSH, 8);
methodVisitor.visitVarInsn(ALOAD, 56);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "precision", "J");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitIntInsn(BIPUSH, 9);
methodVisitor.visitVarInsn(ALOAD, 56);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "precision", "J");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitJumpInsn(GOTO, label11);
methodVisitor.visitLabel(label17);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 56);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isBitType", "()Z", false);
Label label18 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label18);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitIntInsn(BIPUSH, 8);
methodVisitor.visitVarInsn(ALOAD, 56);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "precision", "J");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitIntInsn(BIPUSH, 9);
methodVisitor.visitVarInsn(ALOAD, 56);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "precision", "J");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitJumpInsn(GOTO, label11);
methodVisitor.visitLabel(label18);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 56);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isArrayType", "()Z", false);
methodVisitor.visitJumpInsn(IFEQ, label11);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitIntInsn(BIPUSH, 31);
methodVisitor.visitVarInsn(ALOAD, 56);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "arrayLimitCardinality", "()I", false);
methodVisitor.visitInsn(I2L);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitIntInsn(BIPUSH, 7);
methodVisitor.visitLdcInsn("ARRAY");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLabel(label11);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 56);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isDomainType", "()Z", false);
Label label19 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label19);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitIntInsn(BIPUSH, 22);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitIntInsn(BIPUSH, 23);
methodVisitor.visitVarInsn(ALOAD, 56);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitIntInsn(BIPUSH, 24);
methodVisitor.visitVarInsn(ALOAD, 56);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLabel(label19);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 56);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isDistinctType", "()Z", false);
Label label20 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label20);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitIntInsn(BIPUSH, 25);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitIntInsn(BIPUSH, 26);
methodVisitor.visitVarInsn(ALOAD, 56);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitIntInsn(BIPUSH, 27);
methodVisitor.visitVarInsn(ALOAD, 56);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLabel(label20);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitIntInsn(BIPUSH, 28);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitIntInsn(BIPUSH, 29);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitIntInsn(BIPUSH, 30);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitIntInsn(BIPUSH, 32);
methodVisitor.visitVarInsn(ALOAD, 56);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "getDefinition", "()Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitIntInsn(BIPUSH, 33);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitIntInsn(BIPUSH, 34);
methodVisitor.visitVarInsn(ALOAD, 58);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/ColumnSchema", "isIdentity", "()Z", false);
Label label21 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label21);
methodVisitor.visitLdcInsn("YES");
Label label22 = new Label();
methodVisitor.visitJumpInsn(GOTO, label22);
methodVisitor.visitLabel(label21);
methodVisitor.visitFrame(Opcodes.F_FULL, 59, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.INTEGER, "org/hsqldb/lib/Iterator", "org/hsqldb/Table", "[Ljava/lang/Object;", "org/hsqldb/lib/OrderedHashSet", "org/hsqldb/types/Type", Opcodes.INTEGER, "org/hsqldb/ColumnSchema"}, 2, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER});
methodVisitor.visitLdcInsn("NO");
methodVisitor.visitLabel(label22);
methodVisitor.visitFrame(Opcodes.F_FULL, 59, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.INTEGER, "org/hsqldb/lib/Iterator", "org/hsqldb/Table", "[Ljava/lang/Object;", "org/hsqldb/lib/OrderedHashSet", "org/hsqldb/types/Type", Opcodes.INTEGER, "org/hsqldb/ColumnSchema"}, 3, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER, "java/lang/String"});
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 58);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/ColumnSchema", "isIdentity", "()Z", false);
Label label23 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label23);
methodVisitor.visitVarInsn(ALOAD, 58);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/ColumnSchema", "getIdentitySequence", "()Lorg/hsqldb/NumberSequence;", false);
methodVisitor.visitVarInsn(ASTORE, 59);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitIntInsn(BIPUSH, 35);
methodVisitor.visitVarInsn(ALOAD, 59);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/NumberSequence", "isAlways", "()Z", false);
Label label24 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label24);
methodVisitor.visitLdcInsn("ALWAYS");
Label label25 = new Label();
methodVisitor.visitJumpInsn(GOTO, label25);
methodVisitor.visitLabel(label24);
methodVisitor.visitFrame(Opcodes.F_FULL, 60, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.INTEGER, "org/hsqldb/lib/Iterator", "org/hsqldb/Table", "[Ljava/lang/Object;", "org/hsqldb/lib/OrderedHashSet", "org/hsqldb/types/Type", Opcodes.INTEGER, "org/hsqldb/ColumnSchema", "org/hsqldb/NumberSequence"}, 2, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER});
methodVisitor.visitLdcInsn("BY DEFAULT");
methodVisitor.visitLabel(label25);
methodVisitor.visitFrame(Opcodes.F_FULL, 60, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.INTEGER, "org/hsqldb/lib/Iterator", "org/hsqldb/Table", "[Ljava/lang/Object;", "org/hsqldb/lib/OrderedHashSet", "org/hsqldb/types/Type", Opcodes.INTEGER, "org/hsqldb/ColumnSchema", "org/hsqldb/NumberSequence"}, 3, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER, "java/lang/String"});
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitIntInsn(BIPUSH, 36);
methodVisitor.visitVarInsn(ALOAD, 59);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/NumberSequence", "getStartValue", "()J", false);
methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/Long", "toString", "(J)Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitIntInsn(BIPUSH, 37);
methodVisitor.visitVarInsn(ALOAD, 59);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/NumberSequence", "getIncrement", "()J", false);
methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/Long", "toString", "(J)Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitIntInsn(BIPUSH, 38);
methodVisitor.visitVarInsn(ALOAD, 59);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/NumberSequence", "getMaxValue", "()J", false);
methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/Long", "toString", "(J)Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitIntInsn(BIPUSH, 39);
methodVisitor.visitVarInsn(ALOAD, 59);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/NumberSequence", "getMinValue", "()J", false);
methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/Long", "toString", "(J)Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitIntInsn(BIPUSH, 40);
methodVisitor.visitVarInsn(ALOAD, 59);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/NumberSequence", "isCycle", "()Z", false);
Label label26 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label26);
methodVisitor.visitLdcInsn("YES");
Label label27 = new Label();
methodVisitor.visitJumpInsn(GOTO, label27);
methodVisitor.visitLabel(label26);
methodVisitor.visitFrame(Opcodes.F_FULL, 60, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.INTEGER, "org/hsqldb/lib/Iterator", "org/hsqldb/Table", "[Ljava/lang/Object;", "org/hsqldb/lib/OrderedHashSet", "org/hsqldb/types/Type", Opcodes.INTEGER, "org/hsqldb/ColumnSchema", "org/hsqldb/NumberSequence"}, 2, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER});
methodVisitor.visitLdcInsn("NO");
methodVisitor.visitLabel(label27);
methodVisitor.visitFrame(Opcodes.F_FULL, 60, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.INTEGER, "org/hsqldb/lib/Iterator", "org/hsqldb/Table", "[Ljava/lang/Object;", "org/hsqldb/lib/OrderedHashSet", "org/hsqldb/types/Type", Opcodes.INTEGER, "org/hsqldb/ColumnSchema", "org/hsqldb/NumberSequence"}, 3, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER, "java/lang/String"});
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLabel(label23);
methodVisitor.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitIntInsn(BIPUSH, 41);
methodVisitor.visitLdcInsn("NEVER");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 58);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/ColumnSchema", "isGenerated", "()Z", false);
Label label28 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label28);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitIntInsn(BIPUSH, 41);
methodVisitor.visitLdcInsn("ALWAYS");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitIntInsn(BIPUSH, 42);
methodVisitor.visitVarInsn(ALOAD, 58);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/ColumnSchema", "getGeneratingExpression", "()Lorg/hsqldb/Expression;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Expression", "getSQL", "()Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLabel(label28);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitIntInsn(BIPUSH, 43);
methodVisitor.visitVarInsn(ALOAD, 53);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "isWritable", "()Z", false);
Label label29 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label29);
methodVisitor.visitLdcInsn("YES");
Label label30 = new Label();
methodVisitor.visitJumpInsn(GOTO, label30);
methodVisitor.visitLabel(label29);
methodVisitor.visitFrame(Opcodes.F_FULL, 59, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.INTEGER, "org/hsqldb/lib/Iterator", "org/hsqldb/Table", "[Ljava/lang/Object;", "org/hsqldb/lib/OrderedHashSet", "org/hsqldb/types/Type", Opcodes.INTEGER, "org/hsqldb/ColumnSchema"}, 2, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER});
methodVisitor.visitLdcInsn("NO");
methodVisitor.visitLabel(label30);
methodVisitor.visitFrame(Opcodes.F_FULL, 59, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.INTEGER, "org/hsqldb/lib/Iterator", "org/hsqldb/Table", "[Ljava/lang/Object;", "org/hsqldb/lib/OrderedHashSet", "org/hsqldb/types/Type", Opcodes.INTEGER, "org/hsqldb/ColumnSchema"}, 3, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER, "java/lang/String"});
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitIntInsn(BIPUSH, 44);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitIntInsn(BIPUSH, 7);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 56);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isNumberType", "()Z", false);
Label label31 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label31);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitIntInsn(BIPUSH, 45);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitIntInsn(BIPUSH, 10);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitIntInsn(BIPUSH, 46);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitIntInsn(BIPUSH, 12);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLabel(label31);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 54);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitLabel(label7);
methodVisitor.visitFrame(Opcodes.F_FULL, 58, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.INTEGER, "org/hsqldb/lib/Iterator", "org/hsqldb/Table", Opcodes.TOP, "org/hsqldb/lib/OrderedHashSet", "org/hsqldb/types/Type", Opcodes.INTEGER}, 0, new Object[] {});
methodVisitor.visitIincInsn(57, 1);
methodVisitor.visitJumpInsn(GOTO, label4);
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_CHOP,2, null, 0, null);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_FULL, 53, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 60);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "CONSTRAINT_COLUMN_USAGE", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "org/hsqldb/HsqlException");
Label label3 = new Label();
Label label4 = new Label();
Label label5 = new Label();
methodVisitor.visitTryCatchBlock(label3, label4, label5, "org/hsqldb/HsqlException");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 37);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label6 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label6);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 37);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TABLE_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TABLE_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TABLE_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("COLUMN_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CONSTRAINT_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CONSTRAINT_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CONSTRAINT_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 37);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitIntInsn(BIPUSH, 7);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label6);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Database", "schemaManager", "Lorg/hsqldb/SchemaManager;");
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/SchemaManager", "databaseObjectIterator", "(I)Lorg/hsqldb/lib/Iterator;", false);
methodVisitor.visitVarInsn(ASTORE, 14);
Label label7 = new Label();
methodVisitor.visitLabel(label7);
methodVisitor.visitFrame(Opcodes.F_FULL, 15, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "hasNext", "()Z", true);
Label label8 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label8);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "next", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/Table");
methodVisitor.visitVarInsn(ASTORE, 15);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "isView", "()Z", false);
methodVisitor.visitJumpInsn(IFNE, label7);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getGrantee", "()Lorg/hsqldb/rights/Grantee;", false);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "isFullyAccessibleByRole", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Z", false);
Label label9 = new Label();
methodVisitor.visitJumpInsn(IFNE, label9);
methodVisitor.visitJumpInsn(GOTO, label7);
methodVisitor.visitLabel(label9);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getConstraints", "()[Lorg/hsqldb/Constraint;", false);
methodVisitor.visitVarInsn(ASTORE, 16);
methodVisitor.visitVarInsn(ALOAD, 16);
methodVisitor.visitInsn(ARRAYLENGTH);
methodVisitor.visitVarInsn(ISTORE, 17);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitVarInsn(ASTORE, 11);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitVarInsn(ASTORE, 12);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 21);
Label label10 = new Label();
methodVisitor.visitLabel(label10);
methodVisitor.visitFrame(Opcodes.F_FULL, 22, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "java/lang/String", "java/lang/String", Opcodes.TOP, "org/hsqldb/lib/Iterator", "org/hsqldb/Table", "[Lorg/hsqldb/Constraint;", Opcodes.INTEGER, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.INTEGER}, 0, new Object[] {});
methodVisitor.visitVarInsn(ILOAD, 21);
methodVisitor.visitVarInsn(ILOAD, 17);
Label label11 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPGE, label11);
methodVisitor.visitVarInsn(ALOAD, 16);
methodVisitor.visitVarInsn(ILOAD, 21);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 18);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Constraint", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitVarInsn(ASTORE, 13);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Constraint", "getConstraintType", "()I", false);
Label label12 = new Label();
Label label13 = new Label();
Label label14 = new Label();
methodVisitor.visitTableSwitchInsn(0, 4, label13, new Label[] { label12, label13, label12, label14, label12 });
methodVisitor.visitLabel(label14);
methodVisitor.visitFrame(Opcodes.F_FULL, 22, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "java/lang/String", "java/lang/String", "java/lang/String", "org/hsqldb/lib/Iterator", "org/hsqldb/Table", "[Lorg/hsqldb/Constraint;", Opcodes.INTEGER, "org/hsqldb/Constraint", Opcodes.TOP, Opcodes.TOP, Opcodes.INTEGER}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Constraint", "getCheckColumnExpressions", "()Lorg/hsqldb/lib/OrderedHashSet;", false);
methodVisitor.visitVarInsn(ASTORE, 22);
methodVisitor.visitVarInsn(ALOAD, 22);
Label label15 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label15);
methodVisitor.visitJumpInsn(GOTO, label13);
methodVisitor.visitLabel(label15);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/lib/OrderedHashSet"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 22);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/OrderedHashSet", "iterator", "()Lorg/hsqldb/lib/Iterator;", false);
methodVisitor.visitVarInsn(ASTORE, 19);
Label label16 = new Label();
methodVisitor.visitLabel(label16);
methodVisitor.visitFrame(Opcodes.F_FULL, 23, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "java/lang/String", "java/lang/String", "java/lang/String", "org/hsqldb/lib/Iterator", "org/hsqldb/Table", "[Lorg/hsqldb/Constraint;", Opcodes.INTEGER, "org/hsqldb/Constraint", "org/hsqldb/lib/Iterator", Opcodes.TOP, Opcodes.INTEGER, "org/hsqldb/lib/OrderedHashSet"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 19);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "hasNext", "()Z", true);
methodVisitor.visitJumpInsn(IFEQ, label13);
methodVisitor.visitVarInsn(ALOAD, 19);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "next", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/ExpressionColumn");
methodVisitor.visitVarInsn(ASTORE, 23);
methodVisitor.visitVarInsn(ALOAD, 23);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/ExpressionColumn", "getColumn", "()Lorg/hsqldb/ColumnSchema;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/ColumnSchema", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 24);
methodVisitor.visitVarInsn(ALOAD, 24);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "type", "I");
methodVisitor.visitIntInsn(BIPUSH, 9);
Label label17 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPEQ, label17);
methodVisitor.visitJumpInsn(GOTO, label16);
methodVisitor.visitLabel(label17);
methodVisitor.visitFrame(Opcodes.F_APPEND,2, new Object[] {"org/hsqldb/ExpressionColumn", "org/hsqldb/HsqlNameManager$HsqlName"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 20);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 24);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "schema", "Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitVarInsn(ALOAD, 24);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "parent", "Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitVarInsn(ALOAD, 24);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitLabel(label1);
Label label18 = new Label();
methodVisitor.visitJumpInsn(GOTO, label18);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_FULL, 25, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "java/lang/String", "java/lang/String", "java/lang/String", "org/hsqldb/lib/Iterator", "org/hsqldb/Table", "[Lorg/hsqldb/Constraint;", Opcodes.INTEGER, "org/hsqldb/Constraint", "org/hsqldb/lib/Iterator", "[Ljava/lang/Object;", Opcodes.INTEGER, "org/hsqldb/lib/OrderedHashSet", "org/hsqldb/ExpressionColumn", "org/hsqldb/HsqlNameManager$HsqlName"}, 1, new Object[] {"org/hsqldb/HsqlException"});
methodVisitor.visitVarInsn(ASTORE, 25);
methodVisitor.visitLabel(label18);
methodVisitor.visitFrame(Opcodes.F_CHOP,2, null, 0, null);
methodVisitor.visitJumpInsn(GOTO, label16);
methodVisitor.visitLabel(label12);
methodVisitor.visitFrame(Opcodes.F_FULL, 22, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "java/lang/String", "java/lang/String", "java/lang/String", "org/hsqldb/lib/Iterator", "org/hsqldb/Table", "[Lorg/hsqldb/Constraint;", Opcodes.INTEGER, "org/hsqldb/Constraint", Opcodes.TOP, Opcodes.TOP, Opcodes.INTEGER}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitVarInsn(ASTORE, 22);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Constraint", "getMainColumns", "()[I", false);
methodVisitor.visitVarInsn(ASTORE, 23);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Constraint", "getConstraintType", "()I", false);
Label label19 = new Label();
methodVisitor.visitJumpInsn(IFNE, label19);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Constraint", "getRefColumns", "()[I", false);
methodVisitor.visitVarInsn(ASTORE, 23);
methodVisitor.visitLabel(label19);
methodVisitor.visitFrame(Opcodes.F_APPEND,2, new Object[] {"org/hsqldb/Table", "[I"}, 0, null);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 24);
Label label20 = new Label();
methodVisitor.visitLabel(label20);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
methodVisitor.visitVarInsn(ILOAD, 24);
methodVisitor.visitVarInsn(ALOAD, 23);
methodVisitor.visitInsn(ARRAYLENGTH);
methodVisitor.visitJumpInsn(IF_ICMPGE, label13);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 20);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitVarInsn(ALOAD, 22);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitVarInsn(ALOAD, 22);
methodVisitor.visitVarInsn(ALOAD, 23);
methodVisitor.visitVarInsn(ILOAD, 24);
methodVisitor.visitInsn(IALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getColumn", "(I)Lorg/hsqldb/ColumnSchema;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/ColumnSchema", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitLabel(label4);
Label label21 = new Label();
methodVisitor.visitJumpInsn(GOTO, label21);
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_FULL, 25, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "java/lang/String", "java/lang/String", "java/lang/String", "org/hsqldb/lib/Iterator", "org/hsqldb/Table", "[Lorg/hsqldb/Constraint;", Opcodes.INTEGER, "org/hsqldb/Constraint", Opcodes.TOP, "[Ljava/lang/Object;", Opcodes.INTEGER, "org/hsqldb/Table", "[I", Opcodes.INTEGER}, 1, new Object[] {"org/hsqldb/HsqlException"});
methodVisitor.visitVarInsn(ASTORE, 25);
methodVisitor.visitLabel(label21);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitIincInsn(24, 1);
methodVisitor.visitJumpInsn(GOTO, label20);
methodVisitor.visitLabel(label13);
methodVisitor.visitFrame(Opcodes.F_FULL, 22, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "java/lang/String", "java/lang/String", "java/lang/String", "org/hsqldb/lib/Iterator", "org/hsqldb/Table", "[Lorg/hsqldb/Constraint;", Opcodes.INTEGER, "org/hsqldb/Constraint", Opcodes.TOP, Opcodes.TOP, Opcodes.INTEGER}, 0, new Object[] {});
methodVisitor.visitIincInsn(21, 1);
methodVisitor.visitJumpInsn(GOTO, label10);
methodVisitor.visitLabel(label11);
methodVisitor.visitFrame(Opcodes.F_FULL, 18, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "java/lang/String", "java/lang/String", Opcodes.TOP, "org/hsqldb/lib/Iterator", "org/hsqldb/Table", "[Lorg/hsqldb/Constraint;", Opcodes.INTEGER}, 0, new Object[] {});
methodVisitor.visitJumpInsn(GOTO, label7);
methodVisitor.visitLabel(label8);
methodVisitor.visitFrame(Opcodes.F_FULL, 15, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 26);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "CONSTRAINT_TABLE_USAGE", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 38);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 38);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TABLE_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TABLE_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TABLE_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CONSTRAINT_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CONSTRAINT_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CONSTRAINT_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 38);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Database", "sessionManager", "Lorg/hsqldb/SessionManager;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/SqlInvariants", "INFORMATION_SCHEMA_HSQLNAME", "Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getUser", "()Lorg/hsqldb/rights/User;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/SessionManager", "newSysSession", "(Lorg/hsqldb/HsqlNameManager$HsqlName;Lorg/hsqldb/rights/User;)Lorg/hsqldb/Session;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitLdcInsn("select DISTINCT TABLE_CATALOG, TABLE_SCHEMA, TABLE_NAME, CONSTRAINT_CATALOG, CONSTRAINT_SCHEMA, CONSTRAINT_NAME from INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "executeDirectStatement", "(Ljava/lang/String;)Lorg/hsqldb/result/Result;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;Lorg/hsqldb/result/Result;)I", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "close", "()V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 6);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "DATA_TYPE_PRIVILEGES", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 39);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 39);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("OBJECT_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("OBJECT_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("OBJECT_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("OBJECT_TYPE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("DTD_IDENTIFIER");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 39);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Database", "sessionManager", "Lorg/hsqldb/SessionManager;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/SqlInvariants", "INFORMATION_SCHEMA_HSQLNAME", "Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getUser", "()Lorg/hsqldb/rights/User;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/SessionManager", "newSysSession", "(Lorg/hsqldb/HsqlNameManager$HsqlName;Lorg/hsqldb/rights/User;)Lorg/hsqldb/Session;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "statementMap", "Lorg/hsqldb/lib/HashMappedList;");
methodVisitor.visitLdcInsn("/*data_type_privileges*/");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/HashMappedList", "get", "(Ljava/lang/Object;)Ljava/lang/Object;", false);
methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/String");
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "executeDirectStatement", "(Ljava/lang/String;)Lorg/hsqldb/result/Result;", false);
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;Lorg/hsqldb/result/Result;)I", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "close", "()V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 7);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "DOMAIN_CONSTRAINTS", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 40);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 40);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CONSTRAINT_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CONSTRAINT_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CONSTRAINT_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("DOMAIN_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("DOMAIN_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("DOMAIN_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("IS_DEFERRABLE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "YES_OR_NO", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("INITIALLY_DEFERRED");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "YES_OR_NO", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 40);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Database", "schemaManager", "Lorg/hsqldb/SchemaManager;");
methodVisitor.visitIntInsn(BIPUSH, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/SchemaManager", "databaseObjectIterator", "(I)Lorg/hsqldb/lib/Iterator;", false);
methodVisitor.visitVarInsn(ASTORE, 12);
Label label1 = new Label();
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_FULL, 13, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "hasNext", "()Z", true);
Label label2 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label2);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "next", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/types/Type");
methodVisitor.visitVarInsn(ASTORE, 13);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isDomainType", "()Z", false);
Label label3 = new Label();
methodVisitor.visitJumpInsn(IFNE, label3);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/types/Type"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getGrantee", "()Lorg/hsqldb/rights/Grantee;", false);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "isFullyAccessibleByRole", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Z", false);
Label label4 = new Label();
methodVisitor.visitJumpInsn(IFNE, label4);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "userTypeModifier", "Lorg/hsqldb/types/UserTypeModifier;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/UserTypeModifier", "getConstraints", "()[Lorg/hsqldb/Constraint;", false);
methodVisitor.visitVarInsn(ASTORE, 14);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 15);
Label label5 = new Label();
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_APPEND,2, new Object[] {"[Lorg/hsqldb/Constraint;", Opcodes.INTEGER}, 0, null);
methodVisitor.visitVarInsn(ILOAD, 15);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitInsn(ARRAYLENGTH);
Label label6 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPGE, label6);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 16);
methodVisitor.visitVarInsn(ALOAD, 16);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 16);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(DUP_X2);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 16);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 16);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(DUP_X2);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 16);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitVarInsn(ILOAD, 15);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Constraint", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 16);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 16);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitLdcInsn("NO");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 16);
methodVisitor.visitIntInsn(BIPUSH, 7);
methodVisitor.visitLdcInsn("NO");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 16);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitIincInsn(15, 1);
methodVisitor.visitJumpInsn(GOTO, label5);
methodVisitor.visitLabel(label6);
methodVisitor.visitFrame(Opcodes.F_CHOP,3, null, 0, null);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 17);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "DOMAINS", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 41);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 41);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("DOMAIN_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("DOMAIN_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("DOMAIN_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("DATA_TYPE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CHARACTER_MAXIMUM_LENGTH");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CHARACTER_OCTET_LENGTH");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CHARACTER_SET_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CHARACTER_SET_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CHARACTER_SET_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("COLLATION_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("COLLATION_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("COLLATION_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("NUMERIC_PRECISION");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("NUMERIC_PRECISION_RADIX");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("NUMERIC_SCALE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("DATETIME_PRECISION");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("INTERVAL_TYPE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("INTERVAL_PRECISION");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("DOMAIN_DEFAULT");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("MAXIMUM_CARDINALITY");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("DTD_IDENTIFIER");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("DECLARED_DATA_TYPE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("DECLARED_NUMERIC_PRECISION");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("DECLARED_NUMERIC_SCALE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 41);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Database", "schemaManager", "Lorg/hsqldb/SchemaManager;");
methodVisitor.visitIntInsn(BIPUSH, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/SchemaManager", "databaseObjectIterator", "(I)Lorg/hsqldb/lib/Iterator;", false);
methodVisitor.visitVarInsn(ASTORE, 28);
Label label1 = new Label();
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_FULL, 29, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 28);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "hasNext", "()Z", true);
Label label2 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label2);
methodVisitor.visitVarInsn(ALOAD, 28);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "next", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/types/Type");
methodVisitor.visitVarInsn(ASTORE, 29);
methodVisitor.visitVarInsn(ALOAD, 29);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isDomainType", "()Z", false);
Label label3 = new Label();
methodVisitor.visitJumpInsn(IFNE, label3);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/types/Type"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getGrantee", "()Lorg/hsqldb/rights/Grantee;", false);
methodVisitor.visitVarInsn(ALOAD, 29);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "isAccessible", "(Lorg/hsqldb/SchemaObject;)Z", false);
Label label4 = new Label();
methodVisitor.visitJumpInsn(IFNE, label4);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 30);
methodVisitor.visitVarInsn(ALOAD, 30);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 30);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 29);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 30);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitVarInsn(ALOAD, 29);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 30);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitVarInsn(ALOAD, 29);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "getFullNameString", "()Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 29);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isCharacterType", "()Z", false);
Label label5 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label5);
methodVisitor.visitVarInsn(ALOAD, 30);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitVarInsn(ALOAD, 29);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "precision", "J");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 30);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitVarInsn(ALOAD, 29);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "precision", "J");
methodVisitor.visitLdcInsn(new Long(2L));
methodVisitor.visitInsn(LMUL);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 30);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 30);
methodVisitor.visitIntInsn(BIPUSH, 7);
methodVisitor.visitVarInsn(ALOAD, 29);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/types/CharacterType");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/CharacterType", "getCharacterSet", "()Lorg/hsqldb/types/Charset;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Charset", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 30);
methodVisitor.visitIntInsn(BIPUSH, 8);
methodVisitor.visitVarInsn(ALOAD, 29);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/types/CharacterType");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/CharacterType", "getCharacterSet", "()Lorg/hsqldb/types/Charset;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Charset", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 30);
methodVisitor.visitIntInsn(BIPUSH, 9);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 30);
methodVisitor.visitIntInsn(BIPUSH, 10);
methodVisitor.visitVarInsn(ALOAD, 29);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/types/CharacterType");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/CharacterType", "getCollation", "()Lorg/hsqldb/types/Collation;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Collation", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 30);
methodVisitor.visitIntInsn(BIPUSH, 11);
methodVisitor.visitVarInsn(ALOAD, 29);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/types/CharacterType");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/CharacterType", "getCollation", "()Lorg/hsqldb/types/Collation;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Collation", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
Label label6 = new Label();
methodVisitor.visitJumpInsn(GOTO, label6);
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"[Ljava/lang/Object;"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 29);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isNumberType", "()Z", false);
Label label7 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label7);
methodVisitor.visitVarInsn(ALOAD, 30);
methodVisitor.visitIntInsn(BIPUSH, 12);
methodVisitor.visitVarInsn(ALOAD, 29);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/types/NumberType");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/NumberType", "getNumericPrecisionInRadix", "()I", false);
methodVisitor.visitInsn(I2L);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 30);
methodVisitor.visitIntInsn(BIPUSH, 22);
methodVisitor.visitVarInsn(ALOAD, 29);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/types/NumberType");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/NumberType", "getNumericPrecisionInRadix", "()I", false);
methodVisitor.visitInsn(I2L);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 29);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isExactNumberType", "()Z", false);
Label label8 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label8);
methodVisitor.visitVarInsn(ALOAD, 30);
methodVisitor.visitIntInsn(BIPUSH, 14);
methodVisitor.visitVarInsn(ALOAD, 30);
methodVisitor.visitIntInsn(BIPUSH, 23);
methodVisitor.visitVarInsn(ALOAD, 29);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "scale", "I");
methodVisitor.visitInsn(I2L);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(DUP_X2);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLabel(label8);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 30);
methodVisitor.visitIntInsn(BIPUSH, 13);
methodVisitor.visitVarInsn(ALOAD, 29);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "getPrecisionRadix", "()I", false);
methodVisitor.visitInsn(I2L);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitJumpInsn(GOTO, label6);
methodVisitor.visitLabel(label7);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 29);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isBooleanType", "()Z", false);
Label label9 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label9);
methodVisitor.visitJumpInsn(GOTO, label6);
methodVisitor.visitLabel(label9);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 29);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isDateTimeType", "()Z", false);
Label label10 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label10);
methodVisitor.visitVarInsn(ALOAD, 30);
methodVisitor.visitIntInsn(BIPUSH, 15);
methodVisitor.visitVarInsn(ALOAD, 29);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "scale", "I");
methodVisitor.visitInsn(I2L);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitJumpInsn(GOTO, label6);
methodVisitor.visitLabel(label10);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 29);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isIntervalType", "()Z", false);
Label label11 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label11);
methodVisitor.visitVarInsn(ALOAD, 30);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitLdcInsn("INTERVAL");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 30);
methodVisitor.visitIntInsn(BIPUSH, 16);
methodVisitor.visitVarInsn(ALOAD, 29);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/types/IntervalType");
methodVisitor.visitInsn(POP);
methodVisitor.visitVarInsn(ALOAD, 29);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "typeCode", "I");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/types/IntervalType", "getQualifier", "(I)Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 30);
methodVisitor.visitIntInsn(BIPUSH, 17);
methodVisitor.visitVarInsn(ALOAD, 29);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "precision", "J");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 30);
methodVisitor.visitIntInsn(BIPUSH, 15);
methodVisitor.visitVarInsn(ALOAD, 29);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "scale", "I");
methodVisitor.visitInsn(I2L);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitJumpInsn(GOTO, label6);
methodVisitor.visitLabel(label11);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 29);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isBinaryType", "()Z", false);
Label label12 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label12);
methodVisitor.visitVarInsn(ALOAD, 30);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitVarInsn(ALOAD, 29);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "precision", "J");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 30);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitVarInsn(ALOAD, 29);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "precision", "J");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitJumpInsn(GOTO, label6);
methodVisitor.visitLabel(label12);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 29);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isBitType", "()Z", false);
Label label13 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label13);
methodVisitor.visitVarInsn(ALOAD, 30);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitVarInsn(ALOAD, 29);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "precision", "J");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 30);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitVarInsn(ALOAD, 29);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "precision", "J");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitJumpInsn(GOTO, label6);
methodVisitor.visitLabel(label13);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 29);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isArrayType", "()Z", false);
methodVisitor.visitJumpInsn(IFEQ, label6);
methodVisitor.visitVarInsn(ALOAD, 30);
methodVisitor.visitIntInsn(BIPUSH, 19);
methodVisitor.visitVarInsn(ALOAD, 29);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "arrayLimitCardinality", "()I", false);
methodVisitor.visitInsn(I2L);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 30);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitLdcInsn("ARRAY");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLabel(label6);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 30);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitVarInsn(ALOAD, 29);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "getDefinition", "()Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 30);
methodVisitor.visitIntInsn(BIPUSH, 21);
methodVisitor.visitVarInsn(ALOAD, 30);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 29);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "userTypeModifier", "Lorg/hsqldb/types/UserTypeModifier;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/UserTypeModifier", "getDefaultClause", "()Lorg/hsqldb/Expression;", false);
methodVisitor.visitVarInsn(ASTORE, 31);
methodVisitor.visitVarInsn(ALOAD, 31);
Label label14 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label14);
methodVisitor.visitVarInsn(ALOAD, 30);
methodVisitor.visitIntInsn(BIPUSH, 18);
methodVisitor.visitVarInsn(ALOAD, 31);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Expression", "getSQL", "()Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLabel(label14);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Expression"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 30);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_CHOP,3, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 32);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "ELEMENT_TYPES", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "org/hsqldb/HsqlException");
Label label3 = new Label();
Label label4 = new Label();
Label label5 = new Label();
methodVisitor.visitTryCatchBlock(label3, label4, label5, "org/hsqldb/HsqlException");
Label label6 = new Label();
Label label7 = new Label();
Label label8 = new Label();
methodVisitor.visitTryCatchBlock(label6, label7, label8, "org/hsqldb/HsqlException");
Label label9 = new Label();
Label label10 = new Label();
Label label11 = new Label();
methodVisitor.visitTryCatchBlock(label9, label10, label11, "org/hsqldb/HsqlException");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 42);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label12 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label12);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 42);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("OBJECT_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("OBJECT_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("OBJECT_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("OBJECT_TYPE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("COLLECTION_TYPE_IDENTIFIER");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("DATA_TYPE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CHARACTER_MAXIMUM_LENGTH");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CHARACTER_OCTET_LENGTH");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CHARACTER_SET_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CHARACTER_SET_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CHARACTER_SET_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("COLLATION_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("COLLATION_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("COLLATION_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("NUMERIC_PRECISION");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("NUMERIC_PRECISION_RADIX");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("NUMERIC_SCALE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("DATETIME_PRECISION");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("INTERVAL_TYPE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("INTERVAL_PRECISION");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("UDT_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("UDT_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("UDT_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SCOPE_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SCOPE_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SCOPE_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("MAXIMUM_CARDINALITY");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("DTD_IDENTIFIER");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("DECLARED_DATA_TYPE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("DECLARED_NUMERIC_PRECISION");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("DECLARED_NUMERIC_SCALE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 42);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitIntInsn(BIPUSH, 27);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label12);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "allTables", "()Lorg/hsqldb/lib/Iterator;", false);
methodVisitor.visitVarInsn(ASTORE, 16);
Label label13 = new Label();
methodVisitor.visitLabel(label13);
methodVisitor.visitFrame(Opcodes.F_FULL, 17, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 16);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "hasNext", "()Z", true);
Label label14 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label14);
methodVisitor.visitVarInsn(ALOAD, 16);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "next", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/Table");
methodVisitor.visitVarInsn(ASTORE, 17);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getGrantee", "()Lorg/hsqldb/rights/Grantee;", false);
methodVisitor.visitVarInsn(ALOAD, 17);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "getColumnsForAllPrivileges", "(Lorg/hsqldb/SchemaObject;)Lorg/hsqldb/lib/OrderedHashSet;", false);
methodVisitor.visitVarInsn(ASTORE, 19);
methodVisitor.visitVarInsn(ALOAD, 19);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/OrderedHashSet", "isEmpty", "()Z", false);
Label label15 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label15);
methodVisitor.visitJumpInsn(GOTO, label13);
methodVisitor.visitLabel(label15);
methodVisitor.visitFrame(Opcodes.F_APPEND,3, new Object[] {"org/hsqldb/Table", Opcodes.TOP, "org/hsqldb/lib/OrderedHashSet"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 17);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getColumnCount", "()I", false);
methodVisitor.visitVarInsn(ISTORE, 15);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 21);
Label label16 = new Label();
methodVisitor.visitLabel(label16);
methodVisitor.visitFrame(Opcodes.F_FULL, 22, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.INTEGER, "org/hsqldb/lib/Iterator", "org/hsqldb/Table", Opcodes.TOP, "org/hsqldb/lib/OrderedHashSet", Opcodes.TOP, Opcodes.INTEGER}, 0, new Object[] {});
methodVisitor.visitVarInsn(ILOAD, 21);
methodVisitor.visitVarInsn(ILOAD, 15);
Label label17 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPGE, label17);
methodVisitor.visitVarInsn(ALOAD, 17);
methodVisitor.visitVarInsn(ILOAD, 21);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getColumn", "(I)Lorg/hsqldb/ColumnSchema;", false);
methodVisitor.visitVarInsn(ASTORE, 22);
methodVisitor.visitVarInsn(ALOAD, 19);
methodVisitor.visitVarInsn(ALOAD, 22);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/ColumnSchema", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/OrderedHashSet", "contains", "(Ljava/lang/Object;)Z", false);
Label label18 = new Label();
methodVisitor.visitJumpInsn(IFNE, label18);
Label label19 = new Label();
methodVisitor.visitJumpInsn(GOTO, label19);
methodVisitor.visitLabel(label18);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/ColumnSchema"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 22);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/ColumnSchema", "getDataType", "()Lorg/hsqldb/types/Type;", false);
methodVisitor.visitVarInsn(ASTORE, 20);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isDistinctType", "()Z", false);
methodVisitor.visitJumpInsn(IFNE, label19);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isDomainType", "()Z", false);
methodVisitor.visitJumpInsn(IFNE, label19);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isArrayType", "()Z", false);
Label label20 = new Label();
methodVisitor.visitJumpInsn(IFNE, label20);
methodVisitor.visitJumpInsn(GOTO, label19);
methodVisitor.visitLabel(label20);
methodVisitor.visitFrame(Opcodes.F_FULL, 23, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.INTEGER, "org/hsqldb/lib/Iterator", "org/hsqldb/Table", Opcodes.TOP, "org/hsqldb/lib/OrderedHashSet", "org/hsqldb/types/Type", Opcodes.INTEGER, "org/hsqldb/ColumnSchema"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 18);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 17);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitVarInsn(ALOAD, 17);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitLdcInsn("TABLE");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "getDefinition", "()Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/types/ArrayType");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/ArrayType", "collectionBaseType", "()Lorg/hsqldb/types/Type;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addTypeInfo", "([Ljava/lang/Object;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitLabel(label1);
methodVisitor.visitJumpInsn(GOTO, label19);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_FULL, 23, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.INTEGER, "org/hsqldb/lib/Iterator", "org/hsqldb/Table", "[Ljava/lang/Object;", "org/hsqldb/lib/OrderedHashSet", "org/hsqldb/types/Type", Opcodes.INTEGER, "org/hsqldb/ColumnSchema"}, 1, new Object[] {"org/hsqldb/HsqlException"});
methodVisitor.visitVarInsn(ASTORE, 23);
methodVisitor.visitLabel(label19);
methodVisitor.visitFrame(Opcodes.F_FULL, 22, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.INTEGER, "org/hsqldb/lib/Iterator", "org/hsqldb/Table", Opcodes.TOP, "org/hsqldb/lib/OrderedHashSet", Opcodes.TOP, Opcodes.INTEGER}, 0, new Object[] {});
methodVisitor.visitIincInsn(21, 1);
methodVisitor.visitJumpInsn(GOTO, label16);
methodVisitor.visitLabel(label17);
methodVisitor.visitFrame(Opcodes.F_CHOP,2, null, 0, null);
methodVisitor.visitJumpInsn(GOTO, label13);
methodVisitor.visitLabel(label14);
methodVisitor.visitFrame(Opcodes.F_FULL, 17, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Database", "schemaManager", "Lorg/hsqldb/SchemaManager;");
methodVisitor.visitIntInsn(BIPUSH, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/SchemaManager", "databaseObjectIterator", "(I)Lorg/hsqldb/lib/Iterator;", false);
methodVisitor.visitVarInsn(ASTORE, 21);
Label label21 = new Label();
methodVisitor.visitLabel(label21);
methodVisitor.visitFrame(Opcodes.F_FULL, 22, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 21);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "hasNext", "()Z", true);
Label label22 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label22);
methodVisitor.visitVarInsn(ALOAD, 21);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "next", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/types/Type");
methodVisitor.visitVarInsn(ASTORE, 20);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isDomainType", "()Z", false);
methodVisitor.visitJumpInsn(IFEQ, label21);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isArrayType", "()Z", false);
Label label23 = new Label();
methodVisitor.visitJumpInsn(IFNE, label23);
methodVisitor.visitJumpInsn(GOTO, label21);
methodVisitor.visitLabel(label23);
methodVisitor.visitFrame(Opcodes.F_FULL, 22, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/types/Type", "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getGrantee", "()Lorg/hsqldb/rights/Grantee;", false);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "isAccessible", "(Lorg/hsqldb/SchemaObject;)Z", false);
Label label24 = new Label();
methodVisitor.visitJumpInsn(IFNE, label24);
methodVisitor.visitJumpInsn(GOTO, label21);
methodVisitor.visitLabel(label24);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 18);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitLdcInsn("DOMAIN");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "getDefinition", "()Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/types/ArrayType");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/ArrayType", "collectionBaseType", "()Lorg/hsqldb/types/Type;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addTypeInfo", "([Ljava/lang/Object;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitJumpInsn(GOTO, label21);
methodVisitor.visitLabel(label22);
methodVisitor.visitFrame(Opcodes.F_FULL, 22, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Database", "schemaManager", "Lorg/hsqldb/SchemaManager;");
methodVisitor.visitIntInsn(BIPUSH, 12);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/SchemaManager", "databaseObjectIterator", "(I)Lorg/hsqldb/lib/Iterator;", false);
methodVisitor.visitVarInsn(ASTORE, 21);
Label label25 = new Label();
methodVisitor.visitLabel(label25);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 21);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "hasNext", "()Z", true);
Label label26 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label26);
methodVisitor.visitVarInsn(ALOAD, 21);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "next", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/types/Type");
methodVisitor.visitVarInsn(ASTORE, 20);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isDistinctType", "()Z", false);
methodVisitor.visitJumpInsn(IFEQ, label25);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isArrayType", "()Z", false);
Label label27 = new Label();
methodVisitor.visitJumpInsn(IFNE, label27);
methodVisitor.visitJumpInsn(GOTO, label25);
methodVisitor.visitLabel(label27);
methodVisitor.visitFrame(Opcodes.F_FULL, 22, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/types/Type", "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getGrantee", "()Lorg/hsqldb/rights/Grantee;", false);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "isAccessible", "(Lorg/hsqldb/SchemaObject;)Z", false);
Label label28 = new Label();
methodVisitor.visitJumpInsn(IFNE, label28);
methodVisitor.visitJumpInsn(GOTO, label25);
methodVisitor.visitLabel(label28);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 18);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitLdcInsn("USER-DEFINED TYPE");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "getDefinition", "()Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/types/ArrayType");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/ArrayType", "collectionBaseType", "()Lorg/hsqldb/types/Type;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addTypeInfo", "([Ljava/lang/Object;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitLabel(label4);
methodVisitor.visitJumpInsn(GOTO, label25);
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_FULL, 22, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", Opcodes.TOP, "[Ljava/lang/Object;", Opcodes.TOP, "org/hsqldb/types/Type", "org/hsqldb/lib/Iterator"}, 1, new Object[] {"org/hsqldb/HsqlException"});
methodVisitor.visitVarInsn(ASTORE, 22);
methodVisitor.visitJumpInsn(GOTO, label25);
methodVisitor.visitLabel(label26);
methodVisitor.visitFrame(Opcodes.F_FULL, 22, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Database", "schemaManager", "Lorg/hsqldb/SchemaManager;");
methodVisitor.visitIntInsn(BIPUSH, 24);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/SchemaManager", "databaseObjectIterator", "(I)Lorg/hsqldb/lib/Iterator;", false);
methodVisitor.visitVarInsn(ASTORE, 21);
Label label29 = new Label();
methodVisitor.visitLabel(label29);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 21);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "hasNext", "()Z", true);
Label label30 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label30);
methodVisitor.visitVarInsn(ALOAD, 21);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "next", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/Routine");
methodVisitor.visitVarInsn(ASTORE, 22);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getGrantee", "()Lorg/hsqldb/rights/Grantee;", false);
methodVisitor.visitVarInsn(ALOAD, 22);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "isAccessible", "(Lorg/hsqldb/SchemaObject;)Z", false);
Label label31 = new Label();
methodVisitor.visitJumpInsn(IFNE, label31);
methodVisitor.visitJumpInsn(GOTO, label29);
methodVisitor.visitLabel(label31);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Routine"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 22);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Routine", "isProcedure", "()Z", false);
Label label32 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label32);
methodVisitor.visitInsn(ACONST_NULL);
Label label33 = new Label();
methodVisitor.visitJumpInsn(GOTO, label33);
methodVisitor.visitLabel(label32);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 22);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Routine", "getReturnType", "()Lorg/hsqldb/types/Type;", false);
methodVisitor.visitLabel(label33);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"org/hsqldb/types/Type"});
methodVisitor.visitVarInsn(ASTORE, 20);
methodVisitor.visitVarInsn(ALOAD, 20);
Label label34 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label34);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isDistinctType", "()Z", false);
methodVisitor.visitJumpInsn(IFNE, label34);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isDomainType", "()Z", false);
methodVisitor.visitJumpInsn(IFNE, label34);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isArrayType", "()Z", false);
Label label35 = new Label();
methodVisitor.visitJumpInsn(IFNE, label35);
methodVisitor.visitJumpInsn(GOTO, label34);
methodVisitor.visitLabel(label35);
methodVisitor.visitFrame(Opcodes.F_FULL, 23, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/types/Type", "org/hsqldb/lib/Iterator", "org/hsqldb/Routine"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 18);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 22);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Routine", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitVarInsn(ALOAD, 22);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Routine", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitLdcInsn("ROUTINE");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "getDefinition", "()Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/types/ArrayType");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/ArrayType", "collectionBaseType", "()Lorg/hsqldb/types/Type;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addTypeInfo", "([Ljava/lang/Object;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitLabel(label6);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitLabel(label7);
methodVisitor.visitJumpInsn(GOTO, label34);
methodVisitor.visitLabel(label8);
methodVisitor.visitFrame(Opcodes.F_FULL, 23, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", Opcodes.TOP, "[Ljava/lang/Object;", Opcodes.TOP, "org/hsqldb/types/Type", "org/hsqldb/lib/Iterator", "org/hsqldb/Routine"}, 1, new Object[] {"org/hsqldb/HsqlException"});
methodVisitor.visitVarInsn(ASTORE, 23);
methodVisitor.visitLabel(label34);
methodVisitor.visitFrame(Opcodes.F_FULL, 23, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/types/Type", "org/hsqldb/lib/Iterator", "org/hsqldb/Routine"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitVarInsn(ASTORE, 23);
methodVisitor.visitVarInsn(ALOAD, 22);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Routine", "getParameterCount", "()I", false);
methodVisitor.visitVarInsn(ISTORE, 24);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 25);
Label label36 = new Label();
methodVisitor.visitLabel(label36);
methodVisitor.visitFrame(Opcodes.F_APPEND,3, new Object[] {"org/hsqldb/types/Type", Opcodes.INTEGER, Opcodes.INTEGER}, 0, null);
methodVisitor.visitVarInsn(ILOAD, 25);
methodVisitor.visitVarInsn(ILOAD, 24);
Label label37 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPGE, label37);
methodVisitor.visitVarInsn(ALOAD, 22);
methodVisitor.visitVarInsn(ILOAD, 25);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Routine", "getParameter", "(I)Lorg/hsqldb/ColumnSchema;", false);
methodVisitor.visitVarInsn(ASTORE, 26);
methodVisitor.visitVarInsn(ALOAD, 26);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/ColumnSchema", "getDataType", "()Lorg/hsqldb/types/Type;", false);
methodVisitor.visitVarInsn(ASTORE, 20);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isDistinctType", "()Z", false);
Label label38 = new Label();
methodVisitor.visitJumpInsn(IFNE, label38);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isDomainType", "()Z", false);
methodVisitor.visitJumpInsn(IFNE, label38);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isArrayType", "()Z", false);
Label label39 = new Label();
methodVisitor.visitJumpInsn(IFNE, label39);
methodVisitor.visitJumpInsn(GOTO, label38);
methodVisitor.visitLabel(label39);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/ColumnSchema"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitVarInsn(ALOAD, 23);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "equals", "(Ljava/lang/Object;)Z", false);
Label label40 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label40);
methodVisitor.visitJumpInsn(GOTO, label38);
methodVisitor.visitLabel(label40);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 18);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 22);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Routine", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitVarInsn(ALOAD, 22);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Routine", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitLdcInsn("ROUTINE");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "getDefinition", "()Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/types/ArrayType");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/ArrayType", "collectionBaseType", "()Lorg/hsqldb/types/Type;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addTypeInfo", "([Ljava/lang/Object;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitLabel(label9);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitLabel(label10);
methodVisitor.visitJumpInsn(GOTO, label38);
methodVisitor.visitLabel(label11);
methodVisitor.visitFrame(Opcodes.F_FULL, 27, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", Opcodes.TOP, "[Ljava/lang/Object;", Opcodes.TOP, "org/hsqldb/types/Type", "org/hsqldb/lib/Iterator", "org/hsqldb/Routine", "org/hsqldb/types/Type", Opcodes.INTEGER, Opcodes.INTEGER, "org/hsqldb/ColumnSchema"}, 1, new Object[] {"org/hsqldb/HsqlException"});
methodVisitor.visitVarInsn(ASTORE, 27);
methodVisitor.visitLabel(label38);
methodVisitor.visitFrame(Opcodes.F_FULL, 26, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/types/Type", "org/hsqldb/lib/Iterator", "org/hsqldb/Routine", "org/hsqldb/types/Type", Opcodes.INTEGER, Opcodes.INTEGER}, 0, new Object[] {});
methodVisitor.visitIincInsn(25, 1);
methodVisitor.visitJumpInsn(GOTO, label36);
methodVisitor.visitLabel(label37);
methodVisitor.visitFrame(Opcodes.F_FULL, 22, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/types/Type", "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitJumpInsn(GOTO, label29);
methodVisitor.visitLabel(label30);
methodVisitor.visitFrame(Opcodes.F_FULL, 22, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 28);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "addTypeInfo", "([Ljava/lang/Object;Lorg/hsqldb/types/Type;)V", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "getFullNameString", "()Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isCharacterType", "()Z", false);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "precision", "J");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitIntInsn(BIPUSH, 7);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "precision", "J");
methodVisitor.visitLdcInsn(new Long(2L));
methodVisitor.visitInsn(LMUL);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitIntInsn(BIPUSH, 8);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitIntInsn(BIPUSH, 9);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/types/CharacterType");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/CharacterType", "getCharacterSet", "()Lorg/hsqldb/types/Charset;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Charset", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitIntInsn(BIPUSH, 10);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/types/CharacterType");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/CharacterType", "getCharacterSet", "()Lorg/hsqldb/types/Charset;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Charset", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitIntInsn(BIPUSH, 11);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitIntInsn(BIPUSH, 12);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/types/CharacterType");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/CharacterType", "getCollation", "()Lorg/hsqldb/types/Collation;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Collation", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitIntInsn(BIPUSH, 13);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/types/CharacterType");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/CharacterType", "getCollation", "()Lorg/hsqldb/types/Collation;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Collation", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
Label label1 = new Label();
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isNumberType", "()Z", false);
Label label2 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label2);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitIntInsn(BIPUSH, 14);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/types/NumberType");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/NumberType", "getNumericPrecisionInRadix", "()I", false);
methodVisitor.visitInsn(I2L);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitIntInsn(BIPUSH, 29);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/types/NumberType");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/NumberType", "getNumericPrecisionInRadix", "()I", false);
methodVisitor.visitInsn(I2L);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isExactNumberType", "()Z", false);
Label label3 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitIntInsn(BIPUSH, 16);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitIntInsn(BIPUSH, 30);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "scale", "I");
methodVisitor.visitInsn(I2L);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(DUP_X2);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitIntInsn(BIPUSH, 15);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "getPrecisionRadix", "()I", false);
methodVisitor.visitInsn(I2L);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isBooleanType", "()Z", false);
Label label4 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label4);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isDateTimeType", "()Z", false);
Label label5 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label5);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitIntInsn(BIPUSH, 17);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "scale", "I");
methodVisitor.visitInsn(I2L);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isIntervalType", "()Z", false);
Label label6 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label6);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitLdcInsn("INTERVAL");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitIntInsn(BIPUSH, 18);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/types/IntervalType");
methodVisitor.visitInsn(POP);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "typeCode", "I");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/types/IntervalType", "getQualifier", "(I)Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitIntInsn(BIPUSH, 19);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "precision", "J");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitIntInsn(BIPUSH, 17);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "scale", "I");
methodVisitor.visitInsn(I2L);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label6);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isBinaryType", "()Z", false);
Label label7 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label7);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "precision", "J");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitIntInsn(BIPUSH, 7);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "precision", "J");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label7);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isBitType", "()Z", false);
Label label8 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label8);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "precision", "J");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitIntInsn(BIPUSH, 7);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "precision", "J");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label8);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isArrayType", "()Z", false);
methodVisitor.visitJumpInsn(IFEQ, label1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitIntInsn(BIPUSH, 26);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "arrayLimitCardinality", "()I", false);
methodVisitor.visitInsn(I2L);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitIntInsn(BIPUSH, 27);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "getDefinition", "()Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitIntInsn(BIPUSH, 28);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(6, 23);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "ENABLED_ROLES", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 43);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 43);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("ROLE_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 43);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getGrantee", "()Lorg/hsqldb/rights/Grantee;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "getAllRoles", "()Lorg/hsqldb/lib/OrderedHashSet;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/OrderedHashSet", "iterator", "()Lorg/hsqldb/lib/Iterator;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
Label label1 = new Label();
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/lib/Iterator"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "hasNext", "()Z", true);
Label label2 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label2);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "next", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/rights/Grantee");
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/HsqlNameManager$HsqlName", "getNameString", "()Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 7);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "JAR_JAR_USAGE", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 45);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 45);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("PATH_JAR_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("PATH_JAR_SCHAMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("PATH_JAR_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("JAR_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("JAR_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("JAR_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 45);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 12);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "JARS", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 46);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 46);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("JAR_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("JAR_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("JAR_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("JAR_PATH");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 46);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 10);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "KEY_COLUMN_USAGE", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 47);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 47);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CONSTRAINT_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CONSTRAINT_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CONSTRAINT_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TABLE_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TABLE_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TABLE_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("COLUMN_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("ORDINAL_POSITION");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("POSITION_IN_UNIQUE_CONSTRAINT");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 47);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitIntInsn(BIPUSH, 7);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Database", "schemaManager", "Lorg/hsqldb/SchemaManager;");
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/SchemaManager", "databaseObjectIterator", "(I)Lorg/hsqldb/lib/Iterator;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
Label label1 = new Label();
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/lib/Iterator"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "hasNext", "()Z", true);
Label label2 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label2);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "next", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/Table");
methodVisitor.visitVarInsn(ASTORE, 15);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitVarInsn(ASTORE, 16);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 17);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "isView", "()Z", false);
Label label3 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label3);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_FULL, 18, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", "org/hsqldb/lib/Iterator", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/Table", "java/lang/String", "org/hsqldb/HsqlNameManager$HsqlName"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getGrantee", "()Lorg/hsqldb/rights/Grantee;", false);
methodVisitor.visitVarInsn(ALOAD, 17);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "isAccessible", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Z", false);
Label label4 = new Label();
methodVisitor.visitJumpInsn(IFNE, label4);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getConstraints", "()[Lorg/hsqldb/Constraint;", false);
methodVisitor.visitVarInsn(ASTORE, 18);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 19);
Label label5 = new Label();
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_APPEND,2, new Object[] {"[Lorg/hsqldb/Constraint;", Opcodes.INTEGER}, 0, null);
methodVisitor.visitVarInsn(ILOAD, 19);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitInsn(ARRAYLENGTH);
Label label6 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPGE, label6);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitVarInsn(ILOAD, 19);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 20);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Constraint", "getConstraintType", "()I", false);
methodVisitor.visitInsn(ICONST_4);
Label label7 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPEQ, label7);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Constraint", "getConstraintType", "()I", false);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitJumpInsn(IF_ICMPEQ, label7);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Constraint", "getConstraintType", "()I", false);
Label label8 = new Label();
methodVisitor.visitJumpInsn(IFNE, label8);
methodVisitor.visitLabel(label7);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Constraint"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Constraint", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitVarInsn(ASTORE, 21);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Constraint", "getMainColumns", "()[I", false);
methodVisitor.visitVarInsn(ASTORE, 22);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ASTORE, 23);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Constraint", "getConstraintType", "()I", false);
Label label9 = new Label();
methodVisitor.visitJumpInsn(IFNE, label9);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Constraint", "getMain", "()Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 24);
methodVisitor.visitVarInsn(ALOAD, 24);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Constraint", "getUniqueName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getConstraint", "(Ljava/lang/String;)Lorg/hsqldb/Constraint;", false);
methodVisitor.visitVarInsn(ASTORE, 25);
methodVisitor.visitVarInsn(ALOAD, 25);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Constraint", "getMainColumns", "()[I", false);
methodVisitor.visitVarInsn(ASTORE, 26);
methodVisitor.visitVarInsn(ALOAD, 22);
methodVisitor.visitInsn(ARRAYLENGTH);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitVarInsn(ASTORE, 23);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 27);
Label label10 = new Label();
methodVisitor.visitLabel(label10);
methodVisitor.visitFrame(Opcodes.F_FULL, 28, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", "org/hsqldb/lib/Iterator", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/Table", "java/lang/String", "org/hsqldb/HsqlNameManager$HsqlName", "[Lorg/hsqldb/Constraint;", Opcodes.INTEGER, "org/hsqldb/Constraint", "java/lang/String", "[I", "[I", "org/hsqldb/Table", "org/hsqldb/Constraint", "[I", Opcodes.INTEGER}, 0, new Object[] {});
methodVisitor.visitVarInsn(ILOAD, 27);
methodVisitor.visitVarInsn(ALOAD, 22);
methodVisitor.visitInsn(ARRAYLENGTH);
Label label11 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPGE, label11);
methodVisitor.visitVarInsn(ALOAD, 23);
methodVisitor.visitVarInsn(ILOAD, 27);
methodVisitor.visitVarInsn(ALOAD, 26);
methodVisitor.visitVarInsn(ALOAD, 22);
methodVisitor.visitVarInsn(ILOAD, 27);
methodVisitor.visitInsn(IALOAD);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/lib/ArrayUtil", "find", "([II)I", false);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitIincInsn(27, 1);
methodVisitor.visitJumpInsn(GOTO, label10);
methodVisitor.visitLabel(label11);
methodVisitor.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Constraint", "getRefColumns", "()[I", false);
methodVisitor.visitVarInsn(ASTORE, 22);
methodVisitor.visitLabel(label9);
methodVisitor.visitFrame(Opcodes.F_CHOP,3, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getGrantee", "()Lorg/hsqldb/rights/Grantee;", false);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitVarInsn(ALOAD, 22);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "hasColumnRights", "(Lorg/hsqldb/SchemaObject;[I)Z", false);
Label label12 = new Label();
methodVisitor.visitJumpInsn(IFNE, label12);
methodVisitor.visitJumpInsn(GOTO, label8);
methodVisitor.visitLabel(label12);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 24);
Label label13 = new Label();
methodVisitor.visitLabel(label13);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
methodVisitor.visitVarInsn(ILOAD, 24);
methodVisitor.visitVarInsn(ALOAD, 22);
methodVisitor.visitInsn(ARRAYLENGTH);
methodVisitor.visitJumpInsn(IF_ICMPGE, label8);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 16);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 17);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "schema", "Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitVarInsn(ALOAD, 21);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitVarInsn(ALOAD, 16);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitVarInsn(ALOAD, 17);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "schema", "Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitVarInsn(ALOAD, 17);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitVarInsn(ALOAD, 22);
methodVisitor.visitVarInsn(ILOAD, 24);
methodVisitor.visitInsn(IALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getColumn", "(I)Lorg/hsqldb/ColumnSchema;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/ColumnSchema", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitIntInsn(BIPUSH, 7);
methodVisitor.visitVarInsn(ILOAD, 24);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IADD);
methodVisitor.visitInsn(I2L);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Constraint", "getConstraintType", "()I", false);
Label label14 = new Label();
methodVisitor.visitJumpInsn(IFNE, label14);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitIntInsn(BIPUSH, 8);
methodVisitor.visitVarInsn(ALOAD, 23);
methodVisitor.visitVarInsn(ILOAD, 24);
methodVisitor.visitInsn(IALOAD);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IADD);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getInt", "(I)Ljava/lang/Integer;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLabel(label14);
methodVisitor.visitFrame(Opcodes.F_FULL, 25, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", "org/hsqldb/lib/Iterator", "[Ljava/lang/Object;", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/Table", "java/lang/String", "org/hsqldb/HsqlNameManager$HsqlName", "[Lorg/hsqldb/Constraint;", Opcodes.INTEGER, "org/hsqldb/Constraint", "java/lang/String", "[I", "[I", Opcodes.INTEGER}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitIincInsn(24, 1);
methodVisitor.visitJumpInsn(GOTO, label13);
methodVisitor.visitLabel(label8);
methodVisitor.visitFrame(Opcodes.F_FULL, 20, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", "org/hsqldb/lib/Iterator", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/Table", "java/lang/String", "org/hsqldb/HsqlNameManager$HsqlName", "[Lorg/hsqldb/Constraint;", Opcodes.INTEGER}, 0, new Object[] {});
methodVisitor.visitIincInsn(19, 1);
methodVisitor.visitJumpInsn(GOTO, label5);
methodVisitor.visitLabel(label6);
methodVisitor.visitFrame(Opcodes.F_FULL, 5, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 28);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "METHOD_SPECIFICATION_PARAMETERS", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(1, 3);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "METHOD_SPECIFICATIONS", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(1, 3);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "MODULE_COLUMN_USAGE", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(1, 3);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "MODULE_PRIVILEGES", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(1, 3);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "MODULE_TABLE_USAGE", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(1, 3);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "MODULES", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(1, 3);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "PARAMETERS", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 53);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 53);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SPECIFIC_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SPECIFIC_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SPECIFIC_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("ORDINAL_POSITION");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("PARAMETER_MODE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("IS_RESULT");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "YES_OR_NO", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("AS_LOCATOR");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "YES_OR_NO", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("PARAMETER_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("FROM_SQL_SPECIFIC_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("FROM_SQL_SPECIFIC_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("FROM_SQL_SPECIFIC_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TO_SQL_SPECIFIC_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TO_SQL_SPECIFIC_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TO_SQL_SPECIFIC_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("DATA_TYPE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CHARACTER_MAXIMUM_LENGTH");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CHARACTER_OCTET_LENGTH");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CHARACTER_SET_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CHARACTER_SET_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CHARACTER_SET_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("COLLATION_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("COLLATION_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("COLLATION_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("NUMERIC_PRECISION");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("NUMERIC_PRECISION_RADIX");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("NUMERIC_SCALE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("DATETIME_PRECISION");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("INTERVAL_TYPE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("INTERVAL_PRECISION");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("UDT_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("UDT_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("UDT_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SCOPE_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SCOPE_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SCOPE_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("MAXIMUM_CARDINALITY");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("DTD_IDENTIFIER");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("DECLARED_DATA_TYPE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("DECLARED_NUMERIC_PRECISION");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("DECLARED_NUMERIC_SCALE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 53);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Database", "schemaManager", "Lorg/hsqldb/SchemaManager;");
methodVisitor.visitIntInsn(BIPUSH, 18);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/SchemaManager", "databaseObjectIterator", "(I)Lorg/hsqldb/lib/Iterator;", false);
methodVisitor.visitVarInsn(ASTORE, 42);
Label label1 = new Label();
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_FULL, 43, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 42);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "hasNext", "()Z", true);
Label label2 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label2);
methodVisitor.visitVarInsn(ALOAD, 42);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "next", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/RoutineSchema");
methodVisitor.visitVarInsn(ASTORE, 43);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getGrantee", "()Lorg/hsqldb/rights/Grantee;", false);
methodVisitor.visitVarInsn(ALOAD, 43);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "isAccessible", "(Lorg/hsqldb/SchemaObject;)Z", false);
Label label3 = new Label();
methodVisitor.visitJumpInsn(IFNE, label3);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/RoutineSchema"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 43);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/RoutineSchema", "getSpecificRoutines", "()[Lorg/hsqldb/Routine;", false);
methodVisitor.visitVarInsn(ASTORE, 47);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 48);
Label label4 = new Label();
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_FULL, 49, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "org/hsqldb/RoutineSchema", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "[Lorg/hsqldb/Routine;", Opcodes.INTEGER}, 0, new Object[] {});
methodVisitor.visitVarInsn(ILOAD, 48);
methodVisitor.visitVarInsn(ALOAD, 47);
methodVisitor.visitInsn(ARRAYLENGTH);
Label label5 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPGE, label5);
methodVisitor.visitVarInsn(ALOAD, 47);
methodVisitor.visitVarInsn(ILOAD, 48);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 44);
methodVisitor.visitVarInsn(ALOAD, 44);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Routine", "getParameterCount", "()I", false);
methodVisitor.visitVarInsn(ISTORE, 41);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 49);
Label label6 = new Label();
methodVisitor.visitLabel(label6);
methodVisitor.visitFrame(Opcodes.F_FULL, 50, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.INTEGER, "org/hsqldb/lib/Iterator", "org/hsqldb/RoutineSchema", "org/hsqldb/Routine", Opcodes.TOP, Opcodes.TOP, "[Lorg/hsqldb/Routine;", Opcodes.INTEGER, Opcodes.INTEGER}, 0, new Object[] {});
methodVisitor.visitVarInsn(ILOAD, 49);
methodVisitor.visitVarInsn(ILOAD, 41);
Label label7 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPGE, label7);
methodVisitor.visitVarInsn(ALOAD, 44);
methodVisitor.visitVarInsn(ILOAD, 49);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Routine", "getParameter", "(I)Lorg/hsqldb/ColumnSchema;", false);
methodVisitor.visitVarInsn(ASTORE, 50);
methodVisitor.visitVarInsn(ALOAD, 50);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/ColumnSchema", "getDataType", "()Lorg/hsqldb/types/Type;", false);
methodVisitor.visitVarInsn(ASTORE, 46);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 45);
methodVisitor.visitVarInsn(ALOAD, 45);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 45);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 44);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Routine", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 45);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitVarInsn(ALOAD, 44);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Routine", "getSpecificName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 45);
methodVisitor.visitIntInsn(BIPUSH, 7);
methodVisitor.visitVarInsn(ALOAD, 50);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/ColumnSchema", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 45);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitVarInsn(ILOAD, 49);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IADD);
methodVisitor.visitInsn(I2L);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 50);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/ColumnSchema", "getParameterMode", "()B", false);
Label label8 = new Label();
Label label9 = new Label();
Label label10 = new Label();
Label label11 = new Label();
methodVisitor.visitTableSwitchInsn(1, 4, label10, new Label[] { label8, label9, label10, label11 });
methodVisitor.visitLabel(label8);
methodVisitor.visitFrame(Opcodes.F_FULL, 51, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.INTEGER, "org/hsqldb/lib/Iterator", "org/hsqldb/RoutineSchema", "org/hsqldb/Routine", "[Ljava/lang/Object;", "org/hsqldb/types/Type", "[Lorg/hsqldb/Routine;", Opcodes.INTEGER, Opcodes.INTEGER, "org/hsqldb/ColumnSchema"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 45);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitLdcInsn("IN");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitJumpInsn(GOTO, label10);
methodVisitor.visitLabel(label11);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 45);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitLdcInsn("OUT");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitJumpInsn(GOTO, label10);
methodVisitor.visitLabel(label9);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 45);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitLdcInsn("INOUT");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLabel(label10);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 45);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitLdcInsn("NO");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 45);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitLdcInsn("NO");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 45);
methodVisitor.visitIntInsn(BIPUSH, 14);
methodVisitor.visitVarInsn(ALOAD, 46);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "getFullNameString", "()Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 46);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isCharacterType", "()Z", false);
Label label12 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label12);
methodVisitor.visitVarInsn(ALOAD, 45);
methodVisitor.visitIntInsn(BIPUSH, 15);
methodVisitor.visitVarInsn(ALOAD, 46);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "precision", "J");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 45);
methodVisitor.visitIntInsn(BIPUSH, 16);
methodVisitor.visitVarInsn(ALOAD, 46);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "precision", "J");
methodVisitor.visitLdcInsn(new Long(2L));
methodVisitor.visitInsn(LMUL);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 45);
methodVisitor.visitIntInsn(BIPUSH, 17);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 45);
methodVisitor.visitIntInsn(BIPUSH, 18);
methodVisitor.visitVarInsn(ALOAD, 46);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/types/CharacterType");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/CharacterType", "getCharacterSet", "()Lorg/hsqldb/types/Charset;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Charset", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 45);
methodVisitor.visitIntInsn(BIPUSH, 19);
methodVisitor.visitVarInsn(ALOAD, 46);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/types/CharacterType");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/CharacterType", "getCharacterSet", "()Lorg/hsqldb/types/Charset;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Charset", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 45);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 45);
methodVisitor.visitIntInsn(BIPUSH, 21);
methodVisitor.visitVarInsn(ALOAD, 46);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/types/CharacterType");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/CharacterType", "getCollation", "()Lorg/hsqldb/types/Collation;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Collation", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 45);
methodVisitor.visitIntInsn(BIPUSH, 22);
methodVisitor.visitVarInsn(ALOAD, 46);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/types/CharacterType");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/CharacterType", "getCollation", "()Lorg/hsqldb/types/Collation;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Collation", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
Label label13 = new Label();
methodVisitor.visitJumpInsn(GOTO, label13);
methodVisitor.visitLabel(label12);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 46);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isNumberType", "()Z", false);
Label label14 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label14);
methodVisitor.visitVarInsn(ALOAD, 45);
methodVisitor.visitIntInsn(BIPUSH, 23);
methodVisitor.visitVarInsn(ALOAD, 46);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/types/NumberType");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/NumberType", "getNumericPrecisionInRadix", "()I", false);
methodVisitor.visitInsn(I2L);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 45);
methodVisitor.visitIntInsn(BIPUSH, 24);
methodVisitor.visitVarInsn(ALOAD, 46);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "getPrecisionRadix", "()I", false);
methodVisitor.visitInsn(I2L);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitJumpInsn(GOTO, label13);
methodVisitor.visitLabel(label14);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 46);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isBooleanType", "()Z", false);
Label label15 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label15);
methodVisitor.visitJumpInsn(GOTO, label13);
methodVisitor.visitLabel(label15);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 46);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isDateTimeType", "()Z", false);
Label label16 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label16);
methodVisitor.visitVarInsn(ALOAD, 45);
methodVisitor.visitIntInsn(BIPUSH, 26);
methodVisitor.visitVarInsn(ALOAD, 46);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "scale", "I");
methodVisitor.visitInsn(I2L);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitJumpInsn(GOTO, label13);
methodVisitor.visitLabel(label16);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 46);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isIntervalType", "()Z", false);
Label label17 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label17);
methodVisitor.visitVarInsn(ALOAD, 45);
methodVisitor.visitIntInsn(BIPUSH, 14);
methodVisitor.visitLdcInsn("INTERVAL");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 45);
methodVisitor.visitIntInsn(BIPUSH, 27);
methodVisitor.visitVarInsn(ALOAD, 46);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/types/IntervalType");
methodVisitor.visitInsn(POP);
methodVisitor.visitVarInsn(ALOAD, 46);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "typeCode", "I");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/types/IntervalType", "getQualifier", "(I)Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 45);
methodVisitor.visitIntInsn(BIPUSH, 28);
methodVisitor.visitVarInsn(ALOAD, 46);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "precision", "J");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 45);
methodVisitor.visitIntInsn(BIPUSH, 26);
methodVisitor.visitVarInsn(ALOAD, 46);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "scale", "I");
methodVisitor.visitInsn(I2L);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitJumpInsn(GOTO, label13);
methodVisitor.visitLabel(label17);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 46);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isBinaryType", "()Z", false);
Label label18 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label18);
methodVisitor.visitVarInsn(ALOAD, 45);
methodVisitor.visitIntInsn(BIPUSH, 15);
methodVisitor.visitVarInsn(ALOAD, 46);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "precision", "J");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 45);
methodVisitor.visitIntInsn(BIPUSH, 16);
methodVisitor.visitVarInsn(ALOAD, 46);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "precision", "J");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitJumpInsn(GOTO, label13);
methodVisitor.visitLabel(label18);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 46);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isBitType", "()Z", false);
Label label19 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label19);
methodVisitor.visitVarInsn(ALOAD, 45);
methodVisitor.visitIntInsn(BIPUSH, 15);
methodVisitor.visitVarInsn(ALOAD, 46);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "precision", "J");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 45);
methodVisitor.visitIntInsn(BIPUSH, 16);
methodVisitor.visitVarInsn(ALOAD, 46);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "precision", "J");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitJumpInsn(GOTO, label13);
methodVisitor.visitLabel(label19);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 46);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isArrayType", "()Z", false);
methodVisitor.visitJumpInsn(IFEQ, label13);
methodVisitor.visitVarInsn(ALOAD, 45);
methodVisitor.visitIntInsn(BIPUSH, 35);
methodVisitor.visitVarInsn(ALOAD, 46);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "arrayLimitCardinality", "()I", false);
methodVisitor.visitInsn(I2L);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 45);
methodVisitor.visitIntInsn(BIPUSH, 14);
methodVisitor.visitLdcInsn("ARRAY");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLabel(label13);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 46);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isDistinctType", "()Z", false);
Label label20 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label20);
methodVisitor.visitVarInsn(ALOAD, 45);
methodVisitor.visitIntInsn(BIPUSH, 29);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 45);
methodVisitor.visitIntInsn(BIPUSH, 30);
methodVisitor.visitVarInsn(ALOAD, 46);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 45);
methodVisitor.visitIntInsn(BIPUSH, 31);
methodVisitor.visitVarInsn(ALOAD, 46);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLabel(label20);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 45);
methodVisitor.visitIntInsn(BIPUSH, 36);
methodVisitor.visitVarInsn(ALOAD, 46);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "getDefinition", "()Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 45);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitIincInsn(49, 1);
methodVisitor.visitJumpInsn(GOTO, label6);
methodVisitor.visitLabel(label7);
methodVisitor.visitFrame(Opcodes.F_FULL, 49, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.INTEGER, "org/hsqldb/lib/Iterator", "org/hsqldb/RoutineSchema", "org/hsqldb/Routine", Opcodes.TOP, Opcodes.TOP, "[Lorg/hsqldb/Routine;", Opcodes.INTEGER}, 0, new Object[] {});
methodVisitor.visitIincInsn(48, 1);
methodVisitor.visitJumpInsn(GOTO, label4);
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_FULL, 44, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "org/hsqldb/RoutineSchema"}, 0, new Object[] {});
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 51);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "REFERENTIAL_CONSTRAINTS", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 54);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 54);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CONSTRAINT_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CONSTRAINT_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CONSTRAINT_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("UNIQUE_CONSTRAINT_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("UNIQUE_CONSTRAINT_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("UNIQUE_CONSTRAINT_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("MATCH_OPTION");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("UPDATE_RULE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("DELETE_RULE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 54);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Database", "schemaManager", "Lorg/hsqldb/SchemaManager;");
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/SchemaManager", "databaseObjectIterator", "(I)Lorg/hsqldb/lib/Iterator;", false);
methodVisitor.visitVarInsn(ASTORE, 13);
Label label1 = new Label();
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_FULL, 14, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "hasNext", "()Z", true);
Label label2 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label2);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "next", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/Table");
methodVisitor.visitVarInsn(ASTORE, 14);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "isView", "()Z", false);
methodVisitor.visitJumpInsn(IFNE, label1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getGrantee", "()Lorg/hsqldb/rights/Grantee;", false);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "hasNonSelectTableRight", "(Lorg/hsqldb/SchemaObject;)Z", false);
Label label3 = new Label();
methodVisitor.visitJumpInsn(IFNE, label3);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getConstraints", "()[Lorg/hsqldb/Constraint;", false);
methodVisitor.visitVarInsn(ASTORE, 15);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 18);
Label label4 = new Label();
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_FULL, 19, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "org/hsqldb/Table", "[Lorg/hsqldb/Constraint;", Opcodes.TOP, Opcodes.TOP, Opcodes.INTEGER}, 0, new Object[] {});
methodVisitor.visitVarInsn(ILOAD, 18);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitInsn(ARRAYLENGTH);
Label label5 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPGE, label5);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitVarInsn(ILOAD, 18);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 16);
methodVisitor.visitVarInsn(ALOAD, 16);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Constraint", "getConstraintType", "()I", false);
Label label6 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label6);
Label label7 = new Label();
methodVisitor.visitJumpInsn(GOTO, label7);
methodVisitor.visitLabel(label6);
methodVisitor.visitFrame(Opcodes.F_FULL, 19, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "org/hsqldb/Table", "[Lorg/hsqldb/Constraint;", "org/hsqldb/Constraint", Opcodes.TOP, Opcodes.INTEGER}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 16);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Constraint", "getUniqueName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 19);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 17);
methodVisitor.visitVarInsn(ALOAD, 17);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 17);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 16);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Constraint", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 17);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitVarInsn(ALOAD, 16);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Constraint", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 16);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Constraint", "getMain", "()Lorg/hsqldb/Table;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "isAccessibleTable", "(Lorg/hsqldb/Session;Lorg/hsqldb/Table;)Z", false);
Label label8 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label8);
methodVisitor.visitVarInsn(ALOAD, 17);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 17);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitVarInsn(ALOAD, 19);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "schema", "Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 17);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitVarInsn(ALOAD, 19);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLabel(label8);
methodVisitor.visitFrame(Opcodes.F_FULL, 20, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "org/hsqldb/Table", "[Lorg/hsqldb/Constraint;", "org/hsqldb/Constraint", "[Ljava/lang/Object;", Opcodes.INTEGER, "org/hsqldb/HsqlNameManager$HsqlName"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 17);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitLdcInsn("NONE");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 17);
methodVisitor.visitIntInsn(BIPUSH, 7);
methodVisitor.visitVarInsn(ALOAD, 16);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Constraint", "getUpdateActionString", "()Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 17);
methodVisitor.visitIntInsn(BIPUSH, 8);
methodVisitor.visitVarInsn(ALOAD, 16);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Constraint", "getDeleteActionString", "()Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 17);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitLabel(label7);
methodVisitor.visitFrame(Opcodes.F_FULL, 19, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "org/hsqldb/Table", "[Lorg/hsqldb/Constraint;", "org/hsqldb/Constraint", Opcodes.TOP, Opcodes.INTEGER}, 0, new Object[] {});
methodVisitor.visitIincInsn(18, 1);
methodVisitor.visitJumpInsn(GOTO, label4);
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_CHOP,3, null, 0, null);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_CHOP,2, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 20);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "ROLE_COLUMN_GRANTS", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 56);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 56);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("GRANTOR");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("GRANTEE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TABLE_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TABLE_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TABLE_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("COLUMN_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("PRIVILEGE_TYPE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("IS_GRANTABLE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "YES_OR_NO", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 56);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitIntInsn(BIPUSH, 7);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Database", "sessionManager", "Lorg/hsqldb/SessionManager;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/SqlInvariants", "INFORMATION_SCHEMA_HSQLNAME", "Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getUser", "()Lorg/hsqldb/rights/User;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/SessionManager", "newSysSession", "(Lorg/hsqldb/HsqlNameManager$HsqlName;Lorg/hsqldb/rights/User;)Lorg/hsqldb/Session;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitLdcInsn("SELECT C.GRANTOR, C.GRANTEE, C.TABLE_CATALOG, C.TABLE_SCHEMA, C.TABLE_NAME, C.COLUMN_NAME, C.PRIVILEGE_TYPE, C.IS_GRANTABLE FROM INFORMATION_SCHEMA.COLUMN_PRIVILEGES C JOIN INFORMATION_SCHEMA.APPLICABLE_ROLES ON C.GRANTEE = ROLE_NAME;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "executeDirectStatement", "(Ljava/lang/String;)Lorg/hsqldb/result/Result;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;Lorg/hsqldb/result/Result;)I", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "close", "()V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 6);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "ROLE_ROUTINE_GRANTS", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 58);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 58);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("GRANTOR");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("GRANTEE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SPECIFIC_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SPECIFIC_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SPECIFIC_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("ROUTINE_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("ROUTINE_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("ROUTINE_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("PRIVILEGE_TYPE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("IS_GRANTABLE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "YES_OR_NO", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 58);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitIntInsn(BIPUSH, 10);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitIntInsn(BIPUSH, 7);
methodVisitor.visitIntInsn(BIPUSH, 7);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitIntInsn(BIPUSH, 8);
methodVisitor.visitIntInsn(BIPUSH, 8);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitIntInsn(BIPUSH, 9);
methodVisitor.visitIntInsn(BIPUSH, 9);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Database", "sessionManager", "Lorg/hsqldb/SessionManager;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/SqlInvariants", "INFORMATION_SCHEMA_HSQLNAME", "Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getUser", "()Lorg/hsqldb/rights/User;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/SessionManager", "newSysSession", "(Lorg/hsqldb/HsqlNameManager$HsqlName;Lorg/hsqldb/rights/User;)Lorg/hsqldb/Session;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitLdcInsn("SELECT R.GRANTOR, R.GRANTEE, R.SPECIFIC_CATALOG, R.SPECIFIC_SCHEMA, R.SPECIFIC_NAME, R.ROUTINE_CATALOG, R.ROUTINE_SCHEMA, R.ROUTINE_NAME, R.PRIVILEGE_TYPE, R.IS_GRANTABLE FROM INFORMATION_SCHEMA.ROUTINE_PRIVILEGES R JOIN INFORMATION_SCHEMA.APPLICABLE_ROLES ON R.GRANTEE = ROLE_NAME;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "executeDirectStatement", "(Ljava/lang/String;)Lorg/hsqldb/result/Result;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;Lorg/hsqldb/result/Result;)I", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "close", "()V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 17);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "ROLE_TABLE_GRANTS", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 59);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 59);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("GRANTOR");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("GRANTEE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TABLE_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TABLE_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TABLE_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("PRIVILEGE_TYPE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("IS_GRANTABLE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "YES_OR_NO", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("WITH_HIERARCHY");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "YES_OR_NO", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 59);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Database", "sessionManager", "Lorg/hsqldb/SessionManager;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/SqlInvariants", "INFORMATION_SCHEMA_HSQLNAME", "Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getUser", "()Lorg/hsqldb/rights/User;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/SessionManager", "newSysSession", "(Lorg/hsqldb/HsqlNameManager$HsqlName;Lorg/hsqldb/rights/User;)Lorg/hsqldb/Session;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitLdcInsn("SELECT T.GRANTOR, T.GRANTEE, T.TABLE_CATALOG, T.TABLE_SCHEMA, T.TABLE_NAME, T.PRIVILEGE_TYPE, T.IS_GRANTABLE, 'NO' FROM INFORMATION_SCHEMA.TABLE_PRIVILEGES T JOIN INFORMATION_SCHEMA.APPLICABLE_ROLES ON T.GRANTEE = ROLE_NAME;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "executeDirectStatement", "(Ljava/lang/String;)Lorg/hsqldb/result/Result;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;Lorg/hsqldb/result/Result;)I", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "close", "()V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 6);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "ROLE_UDT_GRANTS", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 60);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 60);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("GRANTOR");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("GRANTEE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("UDT_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("UDT_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("UDT_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("PRIVILEGE_TYPE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("IS_GRANTABLE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "YES_OR_NO", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 59);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Database", "sessionManager", "Lorg/hsqldb/SessionManager;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/SqlInvariants", "INFORMATION_SCHEMA_HSQLNAME", "Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getUser", "()Lorg/hsqldb/rights/User;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/SessionManager", "newSysSession", "(Lorg/hsqldb/HsqlNameManager$HsqlName;Lorg/hsqldb/rights/User;)Lorg/hsqldb/Session;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitLdcInsn("SELECT U.GRANTOR, U.GRANTEE, U.UDT_CATALOG, U.UDT_SCHEMA, U.UDT_NAME, U.PRIVILEGE_TYPE, U.IS_GRANTABLE FROM INFORMATION_SCHEMA.UDT_PRIVILEGES U JOIN INFORMATION_SCHEMA.APPLICABLE_ROLES ON U.GRANTEE = ROLE_NAME;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "executeDirectStatement", "(Ljava/lang/String;)Lorg/hsqldb/result/Result;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;Lorg/hsqldb/result/Result;)I", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "close", "()V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(4, 6);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "ROLE_USAGE_GRANTS", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 61);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 61);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("GRANTOR");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("GRANTEE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("OBJECT_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("OBJECT_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("OBJECT_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("OBJECT_TYPE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("PRIVILEGE_TYPE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("IS_GRANTABLE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "YES_OR_NO", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 61);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitIntInsn(BIPUSH, 8);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitIntInsn(BIPUSH, 7);
methodVisitor.visitIntInsn(BIPUSH, 7);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Database", "sessionManager", "Lorg/hsqldb/SessionManager;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/SqlInvariants", "INFORMATION_SCHEMA_HSQLNAME", "Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getUser", "()Lorg/hsqldb/rights/User;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/SessionManager", "newSysSession", "(Lorg/hsqldb/HsqlNameManager$HsqlName;Lorg/hsqldb/rights/User;)Lorg/hsqldb/Session;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitLdcInsn("SELECT U.GRANTOR, U.GRANTEE, U.OBJECT_CATALOG, U.OBJECT_SCHEMA, U.OBJECT_NAME, U.OBJECT_TYPE, U.PRIVILEGE_TYPE, U.IS_GRANTABLE FROM INFORMATION_SCHEMA.USAGE_PRIVILEGES U JOIN INFORMATION_SCHEMA.APPLICABLE_ROLES A ON U.GRANTEE = A.ROLE_NAME;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "executeDirectStatement", "(Ljava/lang/String;)Lorg/hsqldb/result/Result;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;Lorg/hsqldb/result/Result;)I", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "close", "()V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 6);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "ROUTINE_COLUMN_USAGE", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "org/hsqldb/HsqlException");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 62);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label3 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 62);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SPECIFIC_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SPECIFIC_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SPECIFIC_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("ROUTINE_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("ROUTINE_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("ROUTINE_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TABLE_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TABLE_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TABLE_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("COLUMN_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 62);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitIntInsn(BIPUSH, 10);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitIntInsn(BIPUSH, 7);
methodVisitor.visitIntInsn(BIPUSH, 7);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitIntInsn(BIPUSH, 8);
methodVisitor.visitIntInsn(BIPUSH, 8);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitIntInsn(BIPUSH, 9);
methodVisitor.visitIntInsn(BIPUSH, 9);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Database", "schemaManager", "Lorg/hsqldb/SchemaManager;");
methodVisitor.visitIntInsn(BIPUSH, 24);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/SchemaManager", "databaseObjectIterator", "(I)Lorg/hsqldb/lib/Iterator;", false);
methodVisitor.visitVarInsn(ASTORE, 14);
Label label4 = new Label();
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_FULL, 15, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "hasNext", "()Z", true);
Label label5 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label5);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "next", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/Routine");
methodVisitor.visitVarInsn(ASTORE, 16);
methodVisitor.visitVarInsn(ALOAD, 16);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Routine", "getReferences", "()Lorg/hsqldb/lib/OrderedHashSet;", false);
methodVisitor.visitVarInsn(ASTORE, 17);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 18);
Label label6 = new Label();
methodVisitor.visitLabel(label6);
methodVisitor.visitFrame(Opcodes.F_FULL, 19, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", Opcodes.TOP, "org/hsqldb/Routine", "org/hsqldb/lib/OrderedHashSet", Opcodes.INTEGER}, 0, new Object[] {});
methodVisitor.visitVarInsn(ILOAD, 18);
methodVisitor.visitVarInsn(ALOAD, 17);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/OrderedHashSet", "size", "()I", false);
Label label7 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPGE, label7);
methodVisitor.visitVarInsn(ALOAD, 17);
methodVisitor.visitVarInsn(ILOAD, 18);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/OrderedHashSet", "get", "(I)Ljava/lang/Object;", false);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/HsqlNameManager$HsqlName");
methodVisitor.visitVarInsn(ASTORE, 19);
methodVisitor.visitVarInsn(ALOAD, 19);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "type", "I");
methodVisitor.visitIntInsn(BIPUSH, 9);
Label label8 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPEQ, label8);
Label label9 = new Label();
methodVisitor.visitJumpInsn(GOTO, label9);
methodVisitor.visitLabel(label8);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/HsqlNameManager$HsqlName"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getGrantee", "()Lorg/hsqldb/rights/Grantee;", false);
methodVisitor.visitVarInsn(ALOAD, 19);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "isFullyAccessibleByRole", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Z", false);
Label label10 = new Label();
methodVisitor.visitJumpInsn(IFNE, label10);
methodVisitor.visitJumpInsn(GOTO, label9);
methodVisitor.visitLabel(label10);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 15);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 16);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Routine", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitVarInsn(ALOAD, 16);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Routine", "getSpecificName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitVarInsn(ALOAD, 16);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Routine", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitVarInsn(ALOAD, 16);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Routine", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitIntInsn(BIPUSH, 7);
methodVisitor.visitVarInsn(ALOAD, 19);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "parent", "Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "schema", "Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitIntInsn(BIPUSH, 8);
methodVisitor.visitVarInsn(ALOAD, 19);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "parent", "Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitIntInsn(BIPUSH, 9);
methodVisitor.visitVarInsn(ALOAD, 19);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitLabel(label1);
methodVisitor.visitJumpInsn(GOTO, label9);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_FULL, 20, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "[Ljava/lang/Object;", "org/hsqldb/Routine", "org/hsqldb/lib/OrderedHashSet", Opcodes.INTEGER, "org/hsqldb/HsqlNameManager$HsqlName"}, 1, new Object[] {"org/hsqldb/HsqlException"});
methodVisitor.visitVarInsn(ASTORE, 20);
methodVisitor.visitLabel(label9);
methodVisitor.visitFrame(Opcodes.F_FULL, 19, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", Opcodes.TOP, "org/hsqldb/Routine", "org/hsqldb/lib/OrderedHashSet", Opcodes.INTEGER}, 0, new Object[] {});
methodVisitor.visitIincInsn(18, 1);
methodVisitor.visitJumpInsn(GOTO, label6);
methodVisitor.visitLabel(label7);
methodVisitor.visitFrame(Opcodes.F_FULL, 15, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitJumpInsn(GOTO, label4);
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 21);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "ROUTINE_PRIVILEGES", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "org/hsqldb/HsqlException");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 64);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label3 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 64);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("GRANTOR");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("GRANTEE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SPECIFIC_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SPECIFIC_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SPECIFIC_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("ROUTINE_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("ROUTINE_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("ROUTINE_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("PRIVILEGE_TYPE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("IS_GRANTABLE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "YES_OR_NO", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 64);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitIntInsn(BIPUSH, 10);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitIntInsn(BIPUSH, 7);
methodVisitor.visitIntInsn(BIPUSH, 7);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitIntInsn(BIPUSH, 8);
methodVisitor.visitIntInsn(BIPUSH, 8);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitIntInsn(BIPUSH, 9);
methodVisitor.visitIntInsn(BIPUSH, 9);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getGrantee", "()Lorg/hsqldb/rights/Grantee;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "visibleGrantees", "()Lorg/hsqldb/lib/OrderedHashSet;", false);
methodVisitor.visitVarInsn(ASTORE, 19);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Database", "schemaManager", "Lorg/hsqldb/SchemaManager;");
methodVisitor.visitIntInsn(BIPUSH, 24);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/SchemaManager", "databaseObjectIterator", "(I)Lorg/hsqldb/lib/Iterator;", false);
methodVisitor.visitVarInsn(ASTORE, 16);
Label label4 = new Label();
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_FULL, 20, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/OrderedHashSet"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 16);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "hasNext", "()Z", true);
Label label5 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label5);
methodVisitor.visitVarInsn(ALOAD, 16);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "next", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/Routine");
methodVisitor.visitVarInsn(ASTORE, 17);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 20);
Label label6 = new Label();
methodVisitor.visitLabel(label6);
methodVisitor.visitFrame(Opcodes.F_FULL, 21, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "org/hsqldb/Routine", Opcodes.TOP, "org/hsqldb/lib/OrderedHashSet", Opcodes.INTEGER}, 0, new Object[] {});
methodVisitor.visitVarInsn(ILOAD, 20);
methodVisitor.visitVarInsn(ALOAD, 19);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/OrderedHashSet", "size", "()I", false);
Label label7 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPGE, label7);
methodVisitor.visitVarInsn(ALOAD, 19);
methodVisitor.visitVarInsn(ILOAD, 20);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/OrderedHashSet", "get", "(I)Ljava/lang/Object;", false);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/rights/Grantee");
methodVisitor.visitVarInsn(ASTORE, 14);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitVarInsn(ALOAD, 17);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "getAllDirectPrivileges", "(Lorg/hsqldb/SchemaObject;)Lorg/hsqldb/lib/OrderedHashSet;", false);
methodVisitor.visitVarInsn(ASTORE, 21);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitVarInsn(ALOAD, 17);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "getAllGrantedPrivileges", "(Lorg/hsqldb/SchemaObject;)Lorg/hsqldb/lib/OrderedHashSet;", false);
methodVisitor.visitVarInsn(ASTORE, 22);
methodVisitor.visitVarInsn(ALOAD, 22);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/OrderedHashSet", "isEmpty", "()Z", false);
Label label8 = new Label();
methodVisitor.visitJumpInsn(IFNE, label8);
methodVisitor.visitVarInsn(ALOAD, 22);
methodVisitor.visitVarInsn(ALOAD, 21);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/OrderedHashSet", "addAll", "(Lorg/hsqldb/lib/Collection;)Z", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitVarInsn(ALOAD, 22);
methodVisitor.visitVarInsn(ASTORE, 21);
methodVisitor.visitLabel(label8);
methodVisitor.visitFrame(Opcodes.F_FULL, 23, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/rights/Grantee", Opcodes.TOP, "org/hsqldb/lib/Iterator", "org/hsqldb/Routine", Opcodes.TOP, "org/hsqldb/lib/OrderedHashSet", Opcodes.INTEGER, "org/hsqldb/lib/OrderedHashSet", "org/hsqldb/lib/OrderedHashSet"}, 0, new Object[] {});
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 23);
Label label9 = new Label();
methodVisitor.visitLabel(label9);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
methodVisitor.visitVarInsn(ILOAD, 23);
methodVisitor.visitVarInsn(ALOAD, 21);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/OrderedHashSet", "size", "()I", false);
Label label10 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPGE, label10);
methodVisitor.visitVarInsn(ALOAD, 21);
methodVisitor.visitVarInsn(ILOAD, 23);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/OrderedHashSet", "get", "(I)Ljava/lang/Object;", false);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/rights/Right");
methodVisitor.visitVarInsn(ASTORE, 24);
methodVisitor.visitVarInsn(ALOAD, 24);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Right", "getGrantableRights", "()Lorg/hsqldb/rights/Right;", false);
methodVisitor.visitVarInsn(ASTORE, 25);
methodVisitor.visitVarInsn(ALOAD, 24);
methodVisitor.visitIntInsn(BIPUSH, 32);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Right", "canAccessFully", "(I)Z", false);
Label label11 = new Label();
methodVisitor.visitJumpInsn(IFNE, label11);
Label label12 = new Label();
methodVisitor.visitJumpInsn(GOTO, label12);
methodVisitor.visitLabel(label11);
methodVisitor.visitFrame(Opcodes.F_APPEND,2, new Object[] {"org/hsqldb/rights/Right", "org/hsqldb/rights/Right"}, 0, null);
methodVisitor.visitLdcInsn("EXECUTE");
methodVisitor.visitVarInsn(ASTORE, 15);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 18);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 24);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Right", "getGrantor", "()Lorg/hsqldb/rights/Grantee;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 24);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Right", "getGrantee", "()Lorg/hsqldb/rights/Grantee;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitVarInsn(ALOAD, 17);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Routine", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitVarInsn(ALOAD, 17);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Routine", "getSpecificName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitVarInsn(ALOAD, 17);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Routine", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitIntInsn(BIPUSH, 7);
methodVisitor.visitVarInsn(ALOAD, 17);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Routine", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitIntInsn(BIPUSH, 8);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitIntInsn(BIPUSH, 9);
methodVisitor.visitVarInsn(ALOAD, 24);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Right", "getGrantee", "()Lorg/hsqldb/rights/Grantee;", false);
methodVisitor.visitVarInsn(ALOAD, 17);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Routine", "getOwner", "()Lorg/hsqldb/rights/Grantee;", false);
Label label13 = new Label();
methodVisitor.visitJumpInsn(IF_ACMPEQ, label13);
methodVisitor.visitVarInsn(ALOAD, 25);
methodVisitor.visitIntInsn(BIPUSH, 32);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Right", "canAccessFully", "(I)Z", false);
Label label14 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label14);
methodVisitor.visitLabel(label13);
methodVisitor.visitFrame(Opcodes.F_FULL, 26, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/rights/Grantee", "java/lang/String", "org/hsqldb/lib/Iterator", "org/hsqldb/Routine", "[Ljava/lang/Object;", "org/hsqldb/lib/OrderedHashSet", Opcodes.INTEGER, "org/hsqldb/lib/OrderedHashSet", "org/hsqldb/lib/OrderedHashSet", Opcodes.INTEGER, "org/hsqldb/rights/Right", "org/hsqldb/rights/Right"}, 2, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER});
methodVisitor.visitLdcInsn("YES");
Label label15 = new Label();
methodVisitor.visitJumpInsn(GOTO, label15);
methodVisitor.visitLabel(label14);
methodVisitor.visitFrame(Opcodes.F_FULL, 26, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/rights/Grantee", "java/lang/String", "org/hsqldb/lib/Iterator", "org/hsqldb/Routine", "[Ljava/lang/Object;", "org/hsqldb/lib/OrderedHashSet", Opcodes.INTEGER, "org/hsqldb/lib/OrderedHashSet", "org/hsqldb/lib/OrderedHashSet", Opcodes.INTEGER, "org/hsqldb/rights/Right", "org/hsqldb/rights/Right"}, 2, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER});
methodVisitor.visitLdcInsn("NO");
methodVisitor.visitLabel(label15);
methodVisitor.visitFrame(Opcodes.F_FULL, 26, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/rights/Grantee", "java/lang/String", "org/hsqldb/lib/Iterator", "org/hsqldb/Routine", "[Ljava/lang/Object;", "org/hsqldb/lib/OrderedHashSet", Opcodes.INTEGER, "org/hsqldb/lib/OrderedHashSet", "org/hsqldb/lib/OrderedHashSet", Opcodes.INTEGER, "org/hsqldb/rights/Right", "org/hsqldb/rights/Right"}, 3, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER, "java/lang/String"});
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitLabel(label1);
methodVisitor.visitJumpInsn(GOTO, label12);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"org/hsqldb/HsqlException"});
methodVisitor.visitVarInsn(ASTORE, 26);
methodVisitor.visitLabel(label12);
methodVisitor.visitFrame(Opcodes.F_FULL, 24, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/rights/Grantee", Opcodes.TOP, "org/hsqldb/lib/Iterator", "org/hsqldb/Routine", Opcodes.TOP, "org/hsqldb/lib/OrderedHashSet", Opcodes.INTEGER, "org/hsqldb/lib/OrderedHashSet", "org/hsqldb/lib/OrderedHashSet", Opcodes.INTEGER}, 0, new Object[] {});
methodVisitor.visitIincInsn(23, 1);
methodVisitor.visitJumpInsn(GOTO, label9);
methodVisitor.visitLabel(label10);
methodVisitor.visitFrame(Opcodes.F_CHOP,3, null, 0, null);
methodVisitor.visitIincInsn(20, 1);
methodVisitor.visitJumpInsn(GOTO, label6);
methodVisitor.visitLabel(label7);
methodVisitor.visitFrame(Opcodes.F_FULL, 20, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "org/hsqldb/Routine", Opcodes.TOP, "org/hsqldb/lib/OrderedHashSet"}, 0, new Object[] {});
methodVisitor.visitJumpInsn(GOTO, label4);
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_FULL, 20, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/OrderedHashSet"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 27);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "ROUTINE_JAR_USAGE", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 63);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 63);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SPECIFIC_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SPECIFIC_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SPECIFIC_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("JAR_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("JAR_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("JAR_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 63);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "isAdmin", "()Z", false);
Label label1 = new Label();
methodVisitor.visitJumpInsn(IFNE, label1);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Database", "schemaManager", "Lorg/hsqldb/SchemaManager;");
methodVisitor.visitIntInsn(BIPUSH, 24);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/SchemaManager", "databaseObjectIterator", "(I)Lorg/hsqldb/lib/Iterator;", false);
methodVisitor.visitVarInsn(ASTORE, 10);
Label label2 = new Label();
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_FULL, 11, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "hasNext", "()Z", true);
Label label3 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label3);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "next", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/Routine");
methodVisitor.visitVarInsn(ASTORE, 12);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Routine", "getLanguage", "()I", false);
methodVisitor.visitInsn(ICONST_1);
Label label4 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPEQ, label4);
methodVisitor.visitJumpInsn(GOTO, label2);
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_APPEND,2, new Object[] {Opcodes.TOP, "org/hsqldb/Routine"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 11);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Routine", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Routine", "getSpecificName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Database", "schemaManager", "Lorg/hsqldb/SchemaManager;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/SchemaManager", "getSQLJSchemaHsqlName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitLdcInsn("CLASSPATH");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitJumpInsn(GOTO, label2);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_CHOP,2, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 13);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "ROUTINE_ROUTINE_USAGE", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "org/hsqldb/HsqlException");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 65);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label3 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 65);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SPECIFIC_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SPECIFIC_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SPECIFIC_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("ROUTINE_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("ROUTINE_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("ROUTINE_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 65);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Database", "schemaManager", "Lorg/hsqldb/SchemaManager;");
methodVisitor.visitIntInsn(BIPUSH, 24);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/SchemaManager", "databaseObjectIterator", "(I)Lorg/hsqldb/lib/Iterator;", false);
methodVisitor.visitVarInsn(ASTORE, 10);
Label label4 = new Label();
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_FULL, 11, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "hasNext", "()Z", true);
Label label5 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label5);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "next", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/Routine");
methodVisitor.visitVarInsn(ASTORE, 12);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Routine", "getReferences", "()Lorg/hsqldb/lib/OrderedHashSet;", false);
methodVisitor.visitVarInsn(ASTORE, 13);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 14);
Label label6 = new Label();
methodVisitor.visitLabel(label6);
methodVisitor.visitFrame(Opcodes.F_FULL, 15, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", Opcodes.TOP, "org/hsqldb/Routine", "org/hsqldb/lib/OrderedHashSet", Opcodes.INTEGER}, 0, new Object[] {});
methodVisitor.visitVarInsn(ILOAD, 14);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/OrderedHashSet", "size", "()I", false);
Label label7 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPGE, label7);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitVarInsn(ILOAD, 14);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/OrderedHashSet", "get", "(I)Ljava/lang/Object;", false);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/HsqlNameManager$HsqlName");
methodVisitor.visitVarInsn(ASTORE, 15);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "type", "I");
methodVisitor.visitIntInsn(BIPUSH, 24);
Label label8 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPEQ, label8);
Label label9 = new Label();
methodVisitor.visitJumpInsn(GOTO, label9);
methodVisitor.visitLabel(label8);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/HsqlNameManager$HsqlName"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getGrantee", "()Lorg/hsqldb/rights/Grantee;", false);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "isFullyAccessibleByRole", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Z", false);
Label label10 = new Label();
methodVisitor.visitJumpInsn(IFNE, label10);
methodVisitor.visitJumpInsn(GOTO, label9);
methodVisitor.visitLabel(label10);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 11);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Routine", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Routine", "getSpecificName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "schema", "Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitLabel(label1);
methodVisitor.visitJumpInsn(GOTO, label9);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_FULL, 16, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "[Ljava/lang/Object;", "org/hsqldb/Routine", "org/hsqldb/lib/OrderedHashSet", Opcodes.INTEGER, "org/hsqldb/HsqlNameManager$HsqlName"}, 1, new Object[] {"org/hsqldb/HsqlException"});
methodVisitor.visitVarInsn(ASTORE, 16);
methodVisitor.visitLabel(label9);
methodVisitor.visitFrame(Opcodes.F_FULL, 15, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", Opcodes.TOP, "org/hsqldb/Routine", "org/hsqldb/lib/OrderedHashSet", Opcodes.INTEGER}, 0, new Object[] {});
methodVisitor.visitIincInsn(14, 1);
methodVisitor.visitJumpInsn(GOTO, label6);
methodVisitor.visitLabel(label7);
methodVisitor.visitFrame(Opcodes.F_FULL, 11, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitJumpInsn(GOTO, label4);
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 17);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "ROUTINE_SEQUENCE_USAGE", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "org/hsqldb/HsqlException");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 66);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label3 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 66);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SPECIFIC_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SPECIFIC_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SPECIFIC_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SEQUENCE_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SEQUENCE_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SEQUENCE_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 66);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Database", "schemaManager", "Lorg/hsqldb/SchemaManager;");
methodVisitor.visitIntInsn(BIPUSH, 24);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/SchemaManager", "databaseObjectIterator", "(I)Lorg/hsqldb/lib/Iterator;", false);
methodVisitor.visitVarInsn(ASTORE, 10);
Label label4 = new Label();
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_FULL, 11, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "hasNext", "()Z", true);
Label label5 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label5);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "next", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/Routine");
methodVisitor.visitVarInsn(ASTORE, 12);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Routine", "getReferences", "()Lorg/hsqldb/lib/OrderedHashSet;", false);
methodVisitor.visitVarInsn(ASTORE, 13);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 14);
Label label6 = new Label();
methodVisitor.visitLabel(label6);
methodVisitor.visitFrame(Opcodes.F_FULL, 15, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", Opcodes.TOP, "org/hsqldb/Routine", "org/hsqldb/lib/OrderedHashSet", Opcodes.INTEGER}, 0, new Object[] {});
methodVisitor.visitVarInsn(ILOAD, 14);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/OrderedHashSet", "size", "()I", false);
Label label7 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPGE, label7);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitVarInsn(ILOAD, 14);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/OrderedHashSet", "get", "(I)Ljava/lang/Object;", false);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/HsqlNameManager$HsqlName");
methodVisitor.visitVarInsn(ASTORE, 15);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "type", "I");
methodVisitor.visitIntInsn(BIPUSH, 7);
Label label8 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPEQ, label8);
Label label9 = new Label();
methodVisitor.visitJumpInsn(GOTO, label9);
methodVisitor.visitLabel(label8);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/HsqlNameManager$HsqlName"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getGrantee", "()Lorg/hsqldb/rights/Grantee;", false);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "isFullyAccessibleByRole", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Z", false);
Label label10 = new Label();
methodVisitor.visitJumpInsn(IFNE, label10);
methodVisitor.visitJumpInsn(GOTO, label9);
methodVisitor.visitLabel(label10);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 11);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Routine", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Routine", "getSpecificName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "schema", "Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitLabel(label1);
methodVisitor.visitJumpInsn(GOTO, label9);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_FULL, 16, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "[Ljava/lang/Object;", "org/hsqldb/Routine", "org/hsqldb/lib/OrderedHashSet", Opcodes.INTEGER, "org/hsqldb/HsqlNameManager$HsqlName"}, 1, new Object[] {"org/hsqldb/HsqlException"});
methodVisitor.visitVarInsn(ASTORE, 16);
methodVisitor.visitLabel(label9);
methodVisitor.visitFrame(Opcodes.F_FULL, 15, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", Opcodes.TOP, "org/hsqldb/Routine", "org/hsqldb/lib/OrderedHashSet", Opcodes.INTEGER}, 0, new Object[] {});
methodVisitor.visitIincInsn(14, 1);
methodVisitor.visitJumpInsn(GOTO, label6);
methodVisitor.visitLabel(label7);
methodVisitor.visitFrame(Opcodes.F_FULL, 11, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitJumpInsn(GOTO, label4);
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 17);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "ROUTINE_TABLE_USAGE", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "org/hsqldb/HsqlException");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 67);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label3 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 67);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SPECIFIC_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SPECIFIC_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SPECIFIC_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("ROUTINE_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("ROUTINE_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("ROUTINE_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TABLE_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TABLE_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TABLE_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 67);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitIntInsn(BIPUSH, 9);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitIntInsn(BIPUSH, 7);
methodVisitor.visitIntInsn(BIPUSH, 7);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitIntInsn(BIPUSH, 8);
methodVisitor.visitIntInsn(BIPUSH, 8);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Database", "schemaManager", "Lorg/hsqldb/SchemaManager;");
methodVisitor.visitIntInsn(BIPUSH, 24);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/SchemaManager", "databaseObjectIterator", "(I)Lorg/hsqldb/lib/Iterator;", false);
methodVisitor.visitVarInsn(ASTORE, 13);
Label label4 = new Label();
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_FULL, 14, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "hasNext", "()Z", true);
Label label5 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label5);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "next", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/Routine");
methodVisitor.visitVarInsn(ASTORE, 15);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Routine", "getReferences", "()Lorg/hsqldb/lib/OrderedHashSet;", false);
methodVisitor.visitVarInsn(ASTORE, 16);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 17);
Label label6 = new Label();
methodVisitor.visitLabel(label6);
methodVisitor.visitFrame(Opcodes.F_FULL, 18, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", Opcodes.TOP, "org/hsqldb/Routine", "org/hsqldb/lib/OrderedHashSet", Opcodes.INTEGER}, 0, new Object[] {});
methodVisitor.visitVarInsn(ILOAD, 17);
methodVisitor.visitVarInsn(ALOAD, 16);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/OrderedHashSet", "size", "()I", false);
Label label7 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPGE, label7);
methodVisitor.visitVarInsn(ALOAD, 16);
methodVisitor.visitVarInsn(ILOAD, 17);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/OrderedHashSet", "get", "(I)Ljava/lang/Object;", false);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/HsqlNameManager$HsqlName");
methodVisitor.visitVarInsn(ASTORE, 18);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "type", "I");
methodVisitor.visitInsn(ICONST_3);
Label label8 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPEQ, label8);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "type", "I");
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitJumpInsn(IF_ICMPEQ, label8);
Label label9 = new Label();
methodVisitor.visitJumpInsn(GOTO, label9);
methodVisitor.visitLabel(label8);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/HsqlNameManager$HsqlName"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getGrantee", "()Lorg/hsqldb/rights/Grantee;", false);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "isFullyAccessibleByRole", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Z", false);
Label label10 = new Label();
methodVisitor.visitJumpInsn(IFNE, label10);
methodVisitor.visitJumpInsn(GOTO, label9);
methodVisitor.visitLabel(label10);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 14);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Routine", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Routine", "getSpecificName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Routine", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Routine", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitIntInsn(BIPUSH, 7);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "schema", "Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitIntInsn(BIPUSH, 8);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitLabel(label1);
methodVisitor.visitJumpInsn(GOTO, label9);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_FULL, 19, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "[Ljava/lang/Object;", "org/hsqldb/Routine", "org/hsqldb/lib/OrderedHashSet", Opcodes.INTEGER, "org/hsqldb/HsqlNameManager$HsqlName"}, 1, new Object[] {"org/hsqldb/HsqlException"});
methodVisitor.visitVarInsn(ASTORE, 19);
methodVisitor.visitLabel(label9);
methodVisitor.visitFrame(Opcodes.F_FULL, 18, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", Opcodes.TOP, "org/hsqldb/Routine", "org/hsqldb/lib/OrderedHashSet", Opcodes.INTEGER}, 0, new Object[] {});
methodVisitor.visitIincInsn(17, 1);
methodVisitor.visitJumpInsn(GOTO, label6);
methodVisitor.visitLabel(label7);
methodVisitor.visitFrame(Opcodes.F_FULL, 14, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitJumpInsn(GOTO, label4);
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 20);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "ROUTINES", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 68);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 68);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SPECIFIC_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SPECIFIC_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SPECIFIC_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("ROUTINE_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("ROUTINE_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("ROUTINE_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("ROUTINE_TYPE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("MODULE_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("MODULE_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("MODULE_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("UDT_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("UDT_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("UDT_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("DATA_TYPE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CHARACTER_MAXIMUM_LENGTH");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CHARACTER_OCTET_LENGTH");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CHARACTER_SET_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CHARACTER_SET_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CHARACTER_SET_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("COLLATION_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("COLLATION_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("COLLATION_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("NUMERIC_PRECISION");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("NUMERIC_PRECISION_RADIX");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("NUMERIC_SCALE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("DATETIME_PRECISION");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("INTERVAL_TYPE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("INTERVAL_PRECISION");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TYPE_UDT_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TYPE_UDT_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TYPE_UDT_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SCOPE_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SCOPE_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SCOPE_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("MAXIMUM_CARDINALITY");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("DTD_IDENTIFIER");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("ROUTINE_BODY");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("ROUTINE_DEFINITION");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("EXTERNAL_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("EXTERNAL_LANGUAGE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("PARAMETER_STYLE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("IS_DETERMINISTIC");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "YES_OR_NO", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SQL_DATA_ACCESS");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("IS_NULL_CALL");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "YES_OR_NO", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SQL_PATH");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SCHEMA_LEVEL_ROUTINE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "YES_OR_NO", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("MAX_DYNAMIC_RESULT_SETS");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("IS_USER_DEFINED_CAST");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "YES_OR_NO", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("IS_IMPLICITLY_INVOCABLE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "YES_OR_NO", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SECURITY_TYPE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TO_SQL_SPECIFIC_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TO_SQL_SPECIFIC_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TO_SQL_SPECIFIC_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("AS_LOCATOR");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "YES_OR_NO", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CREATED");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "TIME_STAMP", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("LAST_ALTERED");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "TIME_STAMP", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("NEW_SAVEPOINT_LEVEL");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "YES_OR_NO", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("IS_UDT_DEPENDENT");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "YES_OR_NO", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("RESULT_CAST_FROM_DATA_TYPE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("RESULT_CAST_AS_LOCATOR");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "YES_OR_NO", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("RESULT_CAST_CHAR_MAX_LENGTH");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("RESULT_CAST_CHAR_OCTET_LENGTH");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("RESULT_CAST_CHAR_SET_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("RESULT_CAST_CHAR_SET_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("RESULT_CAST_CHARACTER_SET_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("RESULT_CAST_COLLATION_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("RESULT_CAST_COLLATION_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("RESULT_CAST_COLLATION_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("RESULT_CAST_NUMERIC_PRECISION");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("RESULT_CAST_NUMERIC_RADIX");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("RESULT_CAST_NUMERIC_SCALE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("RESULT_CAST_DATETIME_PRECISION");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("RESULT_CAST_INTERVAL_TYPE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("RESULT_CAST_INTERVAL_PRECISION");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("RESULT_CAST_TYPE_UDT_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("RESULT_CAST_TYPE_UDT_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("RESULT_CAST_TYPE_UDT_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("RESULT_CAST_SCOPE_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("RESULT_CAST_SCOPE_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("RESULT_CAST_SCOPE_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("RESULT_CAST_MAX_CARDINALITY");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("RESULT_CAST_DTD_IDENTIFIER");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("DECLARED_DATA_TYPE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("DECLARED_NUMERIC_PRECISION");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("DECLARED_NUMERIC_SCALE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("RESULT_CAST_FROM_DECLARED_DATA_TYPE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("RESULT_CAST_DECLARED_NUMERIC_PRECISION");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("RESULT_CAST_DECLARED_NUMERIC_SCALE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 68);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Database", "schemaManager", "Lorg/hsqldb/SchemaManager;");
methodVisitor.visitIntInsn(BIPUSH, 24);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/SchemaManager", "databaseObjectIterator", "(I)Lorg/hsqldb/lib/Iterator;", false);
methodVisitor.visitVarInsn(ASTORE, 92);
Label label1 = new Label();
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_FULL, 93, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 92);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "hasNext", "()Z", true);
Label label2 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label2);
methodVisitor.visitVarInsn(ALOAD, 92);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "next", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/Routine");
methodVisitor.visitVarInsn(ASTORE, 94);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getGrantee", "()Lorg/hsqldb/rights/Grantee;", false);
methodVisitor.visitVarInsn(ALOAD, 94);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "isAccessible", "(Lorg/hsqldb/SchemaObject;)Z", false);
Label label3 = new Label();
methodVisitor.visitJumpInsn(IFNE, label3);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_APPEND,2, new Object[] {Opcodes.TOP, "org/hsqldb/Routine"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getGrantee", "()Lorg/hsqldb/rights/Grantee;", false);
methodVisitor.visitVarInsn(ALOAD, 94);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Routine", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "isFullyAccessibleByRole", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Z", false);
methodVisitor.visitVarInsn(ISTORE, 95);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 93);
methodVisitor.visitVarInsn(ALOAD, 94);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Routine", "isProcedure", "()Z", false);
Label label4 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label4);
methodVisitor.visitInsn(ACONST_NULL);
Label label5 = new Label();
methodVisitor.visitJumpInsn(GOTO, label5);
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_FULL, 96, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "[Ljava/lang/Object;", "org/hsqldb/Routine", Opcodes.INTEGER}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 94);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Routine", "getReturnType", "()Lorg/hsqldb/types/Type;", false);
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"org/hsqldb/types/Type"});
methodVisitor.visitVarInsn(ASTORE, 96);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 94);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Routine", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitVarInsn(ALOAD, 94);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Routine", "getSpecificName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitVarInsn(ALOAD, 94);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Routine", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitVarInsn(ALOAD, 94);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Routine", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitVarInsn(ALOAD, 94);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Routine", "isProcedure", "()Z", false);
Label label6 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label6);
methodVisitor.visitLdcInsn("PROCEDURE");
Label label7 = new Label();
methodVisitor.visitJumpInsn(GOTO, label7);
methodVisitor.visitLabel(label6);
methodVisitor.visitFrame(Opcodes.F_FULL, 97, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "[Ljava/lang/Object;", "org/hsqldb/Routine", Opcodes.INTEGER, "org/hsqldb/types/Type"}, 2, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER});
methodVisitor.visitLdcInsn("FUNCTION");
methodVisitor.visitLabel(label7);
methodVisitor.visitFrame(Opcodes.F_FULL, 97, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "[Ljava/lang/Object;", "org/hsqldb/Routine", Opcodes.INTEGER, "org/hsqldb/types/Type"}, 3, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER, "java/lang/String"});
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 7);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 8);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 9);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 10);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 11);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 12);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 13);
methodVisitor.visitVarInsn(ALOAD, 96);
Label label8 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label8);
methodVisitor.visitInsn(ACONST_NULL);
Label label9 = new Label();
methodVisitor.visitJumpInsn(GOTO, label9);
methodVisitor.visitLabel(label8);
methodVisitor.visitFrame(Opcodes.F_FULL, 97, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "[Ljava/lang/Object;", "org/hsqldb/Routine", Opcodes.INTEGER, "org/hsqldb/types/Type"}, 2, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER});
methodVisitor.visitVarInsn(ALOAD, 96);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "getNameString", "()Ljava/lang/String;", false);
methodVisitor.visitLabel(label9);
methodVisitor.visitFrame(Opcodes.F_FULL, 97, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "[Ljava/lang/Object;", "org/hsqldb/Routine", Opcodes.INTEGER, "org/hsqldb/types/Type"}, 3, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER, "java/lang/String"});
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 96);
Label label10 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label10);
methodVisitor.visitVarInsn(ALOAD, 96);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isCharacterType", "()Z", false);
Label label11 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label11);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 14);
methodVisitor.visitVarInsn(ALOAD, 96);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "precision", "J");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 15);
methodVisitor.visitVarInsn(ALOAD, 96);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "precision", "J");
methodVisitor.visitLdcInsn(new Long(2L));
methodVisitor.visitInsn(LMUL);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 16);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 17);
methodVisitor.visitVarInsn(ALOAD, 96);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/types/CharacterType");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/CharacterType", "getCharacterSet", "()Lorg/hsqldb/types/Charset;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Charset", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 18);
methodVisitor.visitVarInsn(ALOAD, 96);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/types/CharacterType");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/CharacterType", "getCharacterSet", "()Lorg/hsqldb/types/Charset;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Charset", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 19);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitVarInsn(ALOAD, 96);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/types/CharacterType");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/CharacterType", "getCollation", "()Lorg/hsqldb/types/Collation;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Collation", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 21);
methodVisitor.visitVarInsn(ALOAD, 96);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/types/CharacterType");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/CharacterType", "getCollation", "()Lorg/hsqldb/types/Collation;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Collation", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
Label label12 = new Label();
methodVisitor.visitJumpInsn(GOTO, label12);
methodVisitor.visitLabel(label11);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 96);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isNumberType", "()Z", false);
Label label13 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label13);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 22);
methodVisitor.visitVarInsn(ALOAD, 96);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/types/NumberType");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/NumberType", "getNumericPrecisionInRadix", "()I", false);
methodVisitor.visitInsn(I2L);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 83);
methodVisitor.visitVarInsn(ALOAD, 96);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/types/NumberType");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/NumberType", "getNumericPrecisionInRadix", "()I", false);
methodVisitor.visitInsn(I2L);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 96);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isExactNumberType", "()Z", false);
Label label14 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label14);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 24);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 84);
methodVisitor.visitVarInsn(ALOAD, 96);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "scale", "I");
methodVisitor.visitInsn(I2L);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(DUP_X2);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLabel(label14);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 23);
methodVisitor.visitVarInsn(ALOAD, 96);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "getPrecisionRadix", "()I", false);
methodVisitor.visitInsn(I2L);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitJumpInsn(GOTO, label12);
methodVisitor.visitLabel(label13);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 96);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isBooleanType", "()Z", false);
Label label15 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label15);
methodVisitor.visitJumpInsn(GOTO, label12);
methodVisitor.visitLabel(label15);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 96);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isDateTimeType", "()Z", false);
Label label16 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label16);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 25);
methodVisitor.visitVarInsn(ALOAD, 96);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "scale", "I");
methodVisitor.visitInsn(I2L);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitJumpInsn(GOTO, label12);
methodVisitor.visitLabel(label16);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 96);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isIntervalType", "()Z", false);
Label label17 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label17);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 13);
methodVisitor.visitLdcInsn("INTERVAL");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 26);
methodVisitor.visitVarInsn(ALOAD, 96);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/types/IntervalType");
methodVisitor.visitInsn(POP);
methodVisitor.visitVarInsn(ALOAD, 96);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "typeCode", "I");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/types/IntervalType", "getQualifier", "(I)Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 27);
methodVisitor.visitVarInsn(ALOAD, 96);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "precision", "J");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 25);
methodVisitor.visitVarInsn(ALOAD, 96);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "scale", "I");
methodVisitor.visitInsn(I2L);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitJumpInsn(GOTO, label12);
methodVisitor.visitLabel(label17);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 96);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isBinaryType", "()Z", false);
Label label18 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label18);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 14);
methodVisitor.visitVarInsn(ALOAD, 96);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "precision", "J");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 15);
methodVisitor.visitVarInsn(ALOAD, 96);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "precision", "J");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitJumpInsn(GOTO, label12);
methodVisitor.visitLabel(label18);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 96);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isBitType", "()Z", false);
Label label19 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label19);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 14);
methodVisitor.visitVarInsn(ALOAD, 96);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "precision", "J");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 15);
methodVisitor.visitVarInsn(ALOAD, 96);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "precision", "J");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitJumpInsn(GOTO, label12);
methodVisitor.visitLabel(label19);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 96);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isArrayType", "()Z", false);
methodVisitor.visitJumpInsn(IFEQ, label12);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 34);
methodVisitor.visitVarInsn(ALOAD, 96);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "arrayLimitCardinality", "()I", false);
methodVisitor.visitInsn(I2L);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 13);
methodVisitor.visitLdcInsn("ARRAY");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLabel(label12);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 35);
methodVisitor.visitVarInsn(ALOAD, 96);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "getDefinition", "()Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 82);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 13);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLabel(label10);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 28);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 29);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 30);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 31);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 32);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 33);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 36);
methodVisitor.visitVarInsn(ALOAD, 94);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Routine", "getLanguage", "()I", false);
methodVisitor.visitInsn(ICONST_1);
Label label20 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPNE, label20);
methodVisitor.visitLdcInsn("EXTERNAL");
Label label21 = new Label();
methodVisitor.visitJumpInsn(GOTO, label21);
methodVisitor.visitLabel(label20);
methodVisitor.visitFrame(Opcodes.F_FULL, 97, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "[Ljava/lang/Object;", "org/hsqldb/Routine", Opcodes.INTEGER, "org/hsqldb/types/Type"}, 2, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER});
methodVisitor.visitLdcInsn("SQL");
methodVisitor.visitLabel(label21);
methodVisitor.visitFrame(Opcodes.F_FULL, 97, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "[Ljava/lang/Object;", "org/hsqldb/Routine", Opcodes.INTEGER, "org/hsqldb/types/Type"}, 3, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER, "java/lang/String"});
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 37);
methodVisitor.visitVarInsn(ILOAD, 95);
Label label22 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label22);
methodVisitor.visitVarInsn(ALOAD, 94);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Routine", "getSQL", "()Ljava/lang/String;", false);
Label label23 = new Label();
methodVisitor.visitJumpInsn(GOTO, label23);
methodVisitor.visitLabel(label22);
methodVisitor.visitFrame(Opcodes.F_FULL, 97, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "[Ljava/lang/Object;", "org/hsqldb/Routine", Opcodes.INTEGER, "org/hsqldb/types/Type"}, 2, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER});
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitLabel(label23);
methodVisitor.visitFrame(Opcodes.F_FULL, 97, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "[Ljava/lang/Object;", "org/hsqldb/Routine", Opcodes.INTEGER, "org/hsqldb/types/Type"}, 3, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER, "java/lang/String"});
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 38);
methodVisitor.visitVarInsn(ALOAD, 94);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Routine", "getExternalName", "()Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 39);
methodVisitor.visitVarInsn(ALOAD, 94);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Routine", "getLanguage", "()I", false);
methodVisitor.visitInsn(ICONST_1);
Label label24 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPNE, label24);
methodVisitor.visitLdcInsn("JAVA");
Label label25 = new Label();
methodVisitor.visitJumpInsn(GOTO, label25);
methodVisitor.visitLabel(label24);
methodVisitor.visitFrame(Opcodes.F_FULL, 97, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "[Ljava/lang/Object;", "org/hsqldb/Routine", Opcodes.INTEGER, "org/hsqldb/types/Type"}, 2, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER});
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitLabel(label25);
methodVisitor.visitFrame(Opcodes.F_FULL, 97, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "[Ljava/lang/Object;", "org/hsqldb/Routine", Opcodes.INTEGER, "org/hsqldb/types/Type"}, 3, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER, "java/lang/String"});
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 40);
methodVisitor.visitVarInsn(ALOAD, 94);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Routine", "getLanguage", "()I", false);
methodVisitor.visitInsn(ICONST_1);
Label label26 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPNE, label26);
methodVisitor.visitLdcInsn("JAVA");
Label label27 = new Label();
methodVisitor.visitJumpInsn(GOTO, label27);
methodVisitor.visitLabel(label26);
methodVisitor.visitFrame(Opcodes.F_FULL, 97, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "[Ljava/lang/Object;", "org/hsqldb/Routine", Opcodes.INTEGER, "org/hsqldb/types/Type"}, 2, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER});
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitLabel(label27);
methodVisitor.visitFrame(Opcodes.F_FULL, 97, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "[Ljava/lang/Object;", "org/hsqldb/Routine", Opcodes.INTEGER, "org/hsqldb/types/Type"}, 3, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER, "java/lang/String"});
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 41);
methodVisitor.visitVarInsn(ALOAD, 94);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Routine", "isDeterministic", "()Z", false);
Label label28 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label28);
methodVisitor.visitLdcInsn("YES");
Label label29 = new Label();
methodVisitor.visitJumpInsn(GOTO, label29);
methodVisitor.visitLabel(label28);
methodVisitor.visitFrame(Opcodes.F_FULL, 97, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "[Ljava/lang/Object;", "org/hsqldb/Routine", Opcodes.INTEGER, "org/hsqldb/types/Type"}, 2, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER});
methodVisitor.visitLdcInsn("NO");
methodVisitor.visitLabel(label29);
methodVisitor.visitFrame(Opcodes.F_FULL, 97, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "[Ljava/lang/Object;", "org/hsqldb/Routine", Opcodes.INTEGER, "org/hsqldb/types/Type"}, 3, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER, "java/lang/String"});
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 42);
methodVisitor.visitVarInsn(ALOAD, 94);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Routine", "getDataImpactString", "()Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 43);
methodVisitor.visitVarInsn(ALOAD, 96);
Label label30 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label30);
methodVisitor.visitInsn(ACONST_NULL);
Label label31 = new Label();
methodVisitor.visitJumpInsn(GOTO, label31);
methodVisitor.visitLabel(label30);
methodVisitor.visitFrame(Opcodes.F_FULL, 97, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "[Ljava/lang/Object;", "org/hsqldb/Routine", Opcodes.INTEGER, "org/hsqldb/types/Type"}, 2, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER});
methodVisitor.visitVarInsn(ALOAD, 94);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Routine", "isNullInputOutput", "()Z", false);
Label label32 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label32);
methodVisitor.visitLdcInsn("YES");
methodVisitor.visitJumpInsn(GOTO, label31);
methodVisitor.visitLabel(label32);
methodVisitor.visitFrame(Opcodes.F_FULL, 97, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "[Ljava/lang/Object;", "org/hsqldb/Routine", Opcodes.INTEGER, "org/hsqldb/types/Type"}, 2, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER});
methodVisitor.visitLdcInsn("NO");
methodVisitor.visitLabel(label31);
methodVisitor.visitFrame(Opcodes.F_FULL, 97, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "[Ljava/lang/Object;", "org/hsqldb/Routine", Opcodes.INTEGER, "org/hsqldb/types/Type"}, 3, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER, "java/lang/String"});
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 44);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 45);
methodVisitor.visitLdcInsn("YES");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 46);
methodVisitor.visitInsn(LCONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 47);
methodVisitor.visitVarInsn(ALOAD, 96);
Label label33 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label33);
methodVisitor.visitInsn(ACONST_NULL);
Label label34 = new Label();
methodVisitor.visitJumpInsn(GOTO, label34);
methodVisitor.visitLabel(label33);
methodVisitor.visitFrame(Opcodes.F_FULL, 97, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "[Ljava/lang/Object;", "org/hsqldb/Routine", Opcodes.INTEGER, "org/hsqldb/types/Type"}, 2, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER});
methodVisitor.visitLdcInsn("NO");
methodVisitor.visitLabel(label34);
methodVisitor.visitFrame(Opcodes.F_FULL, 97, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "[Ljava/lang/Object;", "org/hsqldb/Routine", Opcodes.INTEGER, "org/hsqldb/types/Type"}, 3, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER, "java/lang/String"});
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 48);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 49);
methodVisitor.visitLdcInsn("DEFINER");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 50);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 51);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 52);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 53);
methodVisitor.visitVarInsn(ALOAD, 96);
Label label35 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label35);
methodVisitor.visitInsn(ACONST_NULL);
Label label36 = new Label();
methodVisitor.visitJumpInsn(GOTO, label36);
methodVisitor.visitLabel(label35);
methodVisitor.visitFrame(Opcodes.F_FULL, 97, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "[Ljava/lang/Object;", "org/hsqldb/Routine", Opcodes.INTEGER, "org/hsqldb/types/Type"}, 2, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER});
methodVisitor.visitLdcInsn("NO");
methodVisitor.visitLabel(label36);
methodVisitor.visitFrame(Opcodes.F_FULL, 97, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "[Ljava/lang/Object;", "org/hsqldb/Routine", Opcodes.INTEGER, "org/hsqldb/types/Type"}, 3, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER, "java/lang/String"});
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 54);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 55);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 56);
methodVisitor.visitLdcInsn("YES");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 57);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 58);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 59);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 60);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 61);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 62);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 63);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 64);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 65);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 66);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 67);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 68);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 69);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 70);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 71);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 72);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 73);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 74);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 75);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 76);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 77);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 78);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 79);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 80);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 81);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 82);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 13);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 83);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 22);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 84);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 24);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 85);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 86);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitIntInsn(BIPUSH, 87);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 93);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_FULL, 93, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 97);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "SCHEMATA", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 69);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 69);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CATALOG_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SCHEMA_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SCHEMA_OWNER");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("DEFAULT_CHARACTER_SET_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("DEFAULT_CHARACTER_SET_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("DEFAULT_CHARACTER_SET_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SQL_PATH");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 69);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitLdcInsn("INFORMATION_SCHEMA");
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitLdcInsn("SQL_TEXT");
methodVisitor.visitVarInsn(ASTORE, 7);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ASTORE, 8);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getGrantee", "()Lorg/hsqldb/rights/Grantee;", false);
methodVisitor.visitVarInsn(ASTORE, 9);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Database", "schemaManager", "Lorg/hsqldb/SchemaManager;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/SchemaManager", "getAllSchemas", "()[Lorg/hsqldb/Schema;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 18);
Label label1 = new Label();
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_FULL, 19, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", "[Lorg/hsqldb/Schema;", Opcodes.TOP, "java/lang/String", "java/lang/String", "java/lang/String", "org/hsqldb/rights/Grantee", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.INTEGER}, 0, new Object[] {});
methodVisitor.visitVarInsn(ILOAD, 18);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ARRAYLENGTH);
Label label2 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPGE, label2);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitVarInsn(ILOAD, 18);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 9);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Schema", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/HsqlNameManager$HsqlName", "getNameString", "()Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "hasSchemaUpdateOrGrantRights", "(Ljava/lang/String;)Z", false);
Label label3 = new Label();
methodVisitor.visitJumpInsn(IFNE, label3);
Label label4 = new Label();
methodVisitor.visitJumpInsn(GOTO, label4);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_FULL, 19, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", "[Lorg/hsqldb/Schema;", "org/hsqldb/Schema", "java/lang/String", "java/lang/String", "java/lang/String", "org/hsqldb/rights/Grantee", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.INTEGER}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 10);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Schema", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/HsqlNameManager$HsqlName", "getNameString", "()Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Schema", "getOwner", "()Lorg/hsqldb/rights/Grantee;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/HsqlNameManager$HsqlName", "getNameString", "()Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitVarInsn(ALOAD, 8);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitIincInsn(18, 1);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_FULL, 10, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", "[Lorg/hsqldb/Schema;", Opcodes.TOP, "java/lang/String", "java/lang/String", "java/lang/String", "org/hsqldb/rights/Grantee"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 19);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "SQL_FEATURES", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 71);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 71);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("FEATURE_ID");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("FEATURE_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SUB_FEATURE_ID");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SUB_FEATURE_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("IS_SUPPORTED");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "YES_OR_NO", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("IS_VERIFIED_BY");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("COMMENTS");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 71);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Database", "sessionManager", "Lorg/hsqldb/SessionManager;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/SqlInvariants", "INFORMATION_SCHEMA_HSQLNAME", "Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getUser", "()Lorg/hsqldb/rights/User;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/SessionManager", "newSysSession", "(Lorg/hsqldb/HsqlNameManager$HsqlName;Lorg/hsqldb/rights/User;)Lorg/hsqldb/Session;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "statementMap", "Lorg/hsqldb/lib/HashMappedList;");
methodVisitor.visitLdcInsn("/*sql_features*/");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/HashMappedList", "get", "(Ljava/lang/Object;)Ljava/lang/Object;", false);
methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/String");
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "executeDirectStatement", "(Ljava/lang/String;)Lorg/hsqldb/result/Result;", false);
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;Lorg/hsqldb/result/Result;)I", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 7);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "SQL_IMPLEMENTATION_INFO", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 72);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 72);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("IMPLEMENTATION_INFO_ID");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("IMPLEMENTATION_INFO_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("INTEGER_VALUE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CHARACTER_VALUE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("COMMENTS");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 72);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Database", "sessionManager", "Lorg/hsqldb/SessionManager;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/SqlInvariants", "INFORMATION_SCHEMA_HSQLNAME", "Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getUser", "()Lorg/hsqldb/rights/User;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/SessionManager", "newSysSession", "(Lorg/hsqldb/HsqlNameManager$HsqlName;Lorg/hsqldb/rights/User;)Lorg/hsqldb/Session;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "statementMap", "Lorg/hsqldb/lib/HashMappedList;");
methodVisitor.visitLdcInsn("/*sql_implementation_info*/");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/HashMappedList", "get", "(Ljava/lang/Object;)Ljava/lang/Object;", false);
methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/String");
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "executeDirectStatement", "(Ljava/lang/String;)Lorg/hsqldb/result/Result;", false);
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;Lorg/hsqldb/result/Result;)I", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 7);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "SQL_PACKAGES", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 73);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 73);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("ID");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("IS_SUPPORTED");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "YES_OR_NO", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("IS_VERIFIED_BY");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("COMMENTS");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 73);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Database", "sessionManager", "Lorg/hsqldb/SessionManager;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/SqlInvariants", "INFORMATION_SCHEMA_HSQLNAME", "Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getUser", "()Lorg/hsqldb/rights/User;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/SessionManager", "newSysSession", "(Lorg/hsqldb/HsqlNameManager$HsqlName;Lorg/hsqldb/rights/User;)Lorg/hsqldb/Session;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "statementMap", "Lorg/hsqldb/lib/HashMappedList;");
methodVisitor.visitLdcInsn("/*sql_packages*/");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/HashMappedList", "get", "(Ljava/lang/Object;)Ljava/lang/Object;", false);
methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/String");
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "executeDirectStatement", "(Ljava/lang/String;)Lorg/hsqldb/result/Result;", false);
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;Lorg/hsqldb/result/Result;)I", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 7);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "SQL_PARTS", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 74);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 74);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("PART");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("IS_SUPPORTED");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "YES_OR_NO", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("IS_VERIFIED_BY");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("COMMENTS");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 74);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Database", "sessionManager", "Lorg/hsqldb/SessionManager;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/SqlInvariants", "INFORMATION_SCHEMA_HSQLNAME", "Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getUser", "()Lorg/hsqldb/rights/User;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/SessionManager", "newSysSession", "(Lorg/hsqldb/HsqlNameManager$HsqlName;Lorg/hsqldb/rights/User;)Lorg/hsqldb/Session;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "statementMap", "Lorg/hsqldb/lib/HashMappedList;");
methodVisitor.visitLdcInsn("/*sql_parts*/");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/HashMappedList", "get", "(Ljava/lang/Object;)Ljava/lang/Object;", false);
methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/String");
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "executeDirectStatement", "(Ljava/lang/String;)Lorg/hsqldb/result/Result;", false);
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;Lorg/hsqldb/result/Result;)I", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 7);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "SQL_SIZING", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 75);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 75);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SIZING_ID");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SIZING_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SUPPORTED_VALUE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("COMMENTS");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 75);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Database", "sessionManager", "Lorg/hsqldb/SessionManager;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/SqlInvariants", "INFORMATION_SCHEMA_HSQLNAME", "Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getUser", "()Lorg/hsqldb/rights/User;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/SessionManager", "newSysSession", "(Lorg/hsqldb/HsqlNameManager$HsqlName;Lorg/hsqldb/rights/User;)Lorg/hsqldb/Session;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "statementMap", "Lorg/hsqldb/lib/HashMappedList;");
methodVisitor.visitLdcInsn("/*sql_sizing*/");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/HashMappedList", "get", "(Ljava/lang/Object;)Ljava/lang/Object;", false);
methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/String");
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "executeDirectStatement", "(Ljava/lang/String;)Lorg/hsqldb/result/Result;", false);
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;Lorg/hsqldb/result/Result;)I", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 7);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "SQL_SIZING_PROFILES", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 76);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 76);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SIZING_ID");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SIZING_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("PROFILE_ID");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("PROFILE_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("REQUIRED_VALUE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("COMMENTS");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 76);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Database", "sessionManager", "Lorg/hsqldb/SessionManager;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/SqlInvariants", "INFORMATION_SCHEMA_HSQLNAME", "Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getUser", "()Lorg/hsqldb/rights/User;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/SessionManager", "newSysSession", "(Lorg/hsqldb/HsqlNameManager$HsqlName;Lorg/hsqldb/rights/User;)Lorg/hsqldb/Session;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 5);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "TABLE_CONSTRAINTS", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 77);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 77);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CONSTRAINT_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CONSTRAINT_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CONSTRAINT_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CONSTRAINT_TYPE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TABLE_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TABLE_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TABLE_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("IS_DEFERRABLE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "YES_OR_NO", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("INITIALLY_DEFERRED");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "YES_OR_NO", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 77);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Database", "schemaManager", "Lorg/hsqldb/SchemaManager;");
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/SchemaManager", "databaseObjectIterator", "(I)Lorg/hsqldb/lib/Iterator;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ASTORE, 5);
Label label1 = new Label();
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_APPEND,2, new Object[] {"org/hsqldb/lib/Iterator", "org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "hasNext", "()Z", true);
Label label2 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label2);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "next", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/Table");
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "isView", "()Z", false);
methodVisitor.visitJumpInsn(IFNE, label1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getGrantee", "()Lorg/hsqldb/rights/Grantee;", false);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "hasNonSelectTableRight", "(Lorg/hsqldb/SchemaObject;)Z", false);
Label label3 = new Label();
methodVisitor.visitJumpInsn(IFNE, label3);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getConstraints", "()[Lorg/hsqldb/Constraint;", false);
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitInsn(ARRAYLENGTH);
methodVisitor.visitVarInsn(ISTORE, 7);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 21);
Label label4 = new Label();
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_FULL, 22, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", "org/hsqldb/lib/Iterator", "org/hsqldb/Table", "[Lorg/hsqldb/Constraint;", Opcodes.INTEGER, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.INTEGER}, 0, new Object[] {});
methodVisitor.visitVarInsn(ILOAD, 21);
methodVisitor.visitVarInsn(ILOAD, 7);
Label label5 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPGE, label5);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitVarInsn(ILOAD, 21);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 8);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 11);
methodVisitor.visitVarInsn(ALOAD, 8);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Constraint", "getConstraintType", "()I", false);
Label label6 = new Label();
Label label7 = new Label();
Label label8 = new Label();
Label label9 = new Label();
Label label10 = new Label();
methodVisitor.visitTableSwitchInsn(0, 4, label7, new Label[] { label6, label7, label8, label9, label10 });
methodVisitor.visitLabel(label9);
methodVisitor.visitFrame(Opcodes.F_FULL, 22, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", "org/hsqldb/lib/Iterator", "org/hsqldb/Table", "[Lorg/hsqldb/Constraint;", Opcodes.INTEGER, "org/hsqldb/Constraint", Opcodes.TOP, Opcodes.TOP, "[Ljava/lang/Object;", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.INTEGER}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitLdcInsn("CHECK");
methodVisitor.visitInsn(AASTORE);
Label label11 = new Label();
methodVisitor.visitJumpInsn(GOTO, label11);
methodVisitor.visitLabel(label8);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitLdcInsn("UNIQUE");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitJumpInsn(GOTO, label11);
methodVisitor.visitLabel(label6);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitLdcInsn("FOREIGN KEY");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 8);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Constraint", "getRef", "()Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitJumpInsn(GOTO, label11);
methodVisitor.visitLabel(label10);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitLdcInsn("PRIMARY KEY");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitJumpInsn(GOTO, label11);
methodVisitor.visitLabel(label7);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
Label label12 = new Label();
methodVisitor.visitJumpInsn(GOTO, label12);
methodVisitor.visitLabel(label11);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitVarInsn(ASTORE, 9);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitVarInsn(ASTORE, 10);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 9);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitVarInsn(ALOAD, 8);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Constraint", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitVarInsn(ALOAD, 9);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitIntInsn(BIPUSH, 7);
methodVisitor.visitLdcInsn("NO");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitIntInsn(BIPUSH, 8);
methodVisitor.visitLdcInsn("NO");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitLabel(label12);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitIincInsn(21, 1);
methodVisitor.visitJumpInsn(GOTO, label4);
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_FULL, 8, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", "org/hsqldb/lib/Iterator", "org/hsqldb/Table", "[Lorg/hsqldb/Constraint;", Opcodes.INTEGER}, 0, new Object[] {});
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_CHOP,2, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 22);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "TRANSLATIONS", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 80);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 80);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TRANSLATION_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TRANSLATION_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TRANSLATION_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SOURCE_CHARACTER_SET_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SOURCE_CHARACTER_SET_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SOURCE_CHARACTER_SET_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TARGET_CHARACTER_SET_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TARGET_CHARACTER_SET_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TARGET_CHARACTER_SET_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TRANSLATION_SOURCE_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TRANSLATION_SOURCE_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TRANSLATION_SOURCE_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 80);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 5);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "TRIGGER_COLUMN_USAGE", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "org/hsqldb/HsqlException");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 81);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label3 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 81);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TRIGGER_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TRIGGER_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TRIGGER_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TABLE_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TABLE_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TABLE_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("COLUMN_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 81);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitIntInsn(BIPUSH, 7);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Database", "schemaManager", "Lorg/hsqldb/SchemaManager;");
methodVisitor.visitIntInsn(BIPUSH, 8);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/SchemaManager", "databaseObjectIterator", "(I)Lorg/hsqldb/lib/Iterator;", false);
methodVisitor.visitVarInsn(ASTORE, 11);
Label label4 = new Label();
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_FULL, 12, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "hasNext", "()Z", true);
Label label5 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label5);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "next", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/TriggerDef");
methodVisitor.visitVarInsn(ASTORE, 13);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getGrantee", "()Lorg/hsqldb/rights/Grantee;", false);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/TriggerDef", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "isFullyAccessibleByRole", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Z", false);
Label label6 = new Label();
methodVisitor.visitJumpInsn(IFNE, label6);
methodVisitor.visitJumpInsn(GOTO, label4);
methodVisitor.visitLabel(label6);
methodVisitor.visitFrame(Opcodes.F_APPEND,2, new Object[] {Opcodes.TOP, "org/hsqldb/TriggerDef"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/TriggerDef", "getReferences", "()Lorg/hsqldb/lib/OrderedHashSet;", false);
methodVisitor.visitVarInsn(ASTORE, 14);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 15);
Label label7 = new Label();
methodVisitor.visitLabel(label7);
methodVisitor.visitFrame(Opcodes.F_APPEND,2, new Object[] {"org/hsqldb/lib/OrderedHashSet", Opcodes.INTEGER}, 0, null);
methodVisitor.visitVarInsn(ILOAD, 15);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/OrderedHashSet", "size", "()I", false);
Label label8 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPGE, label8);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitVarInsn(ILOAD, 15);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/OrderedHashSet", "get", "(I)Ljava/lang/Object;", false);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/HsqlNameManager$HsqlName");
methodVisitor.visitVarInsn(ASTORE, 16);
methodVisitor.visitVarInsn(ALOAD, 16);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "type", "I");
methodVisitor.visitIntInsn(BIPUSH, 9);
Label label9 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPEQ, label9);
Label label10 = new Label();
methodVisitor.visitJumpInsn(GOTO, label10);
methodVisitor.visitLabel(label9);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/HsqlNameManager$HsqlName"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getGrantee", "()Lorg/hsqldb/rights/Grantee;", false);
methodVisitor.visitVarInsn(ALOAD, 16);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "isAccessible", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Z", false);
Label label11 = new Label();
methodVisitor.visitJumpInsn(IFNE, label11);
methodVisitor.visitJumpInsn(GOTO, label10);
methodVisitor.visitLabel(label11);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 12);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/TriggerDef", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/TriggerDef", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitVarInsn(ALOAD, 16);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "parent", "Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "schema", "Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitVarInsn(ALOAD, 16);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "parent", "Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitVarInsn(ALOAD, 16);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitLabel(label1);
methodVisitor.visitJumpInsn(GOTO, label10);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_FULL, 17, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "[Ljava/lang/Object;", "org/hsqldb/TriggerDef", "org/hsqldb/lib/OrderedHashSet", Opcodes.INTEGER, "org/hsqldb/HsqlNameManager$HsqlName"}, 1, new Object[] {"org/hsqldb/HsqlException"});
methodVisitor.visitVarInsn(ASTORE, 17);
methodVisitor.visitLabel(label10);
methodVisitor.visitFrame(Opcodes.F_FULL, 16, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", Opcodes.TOP, "org/hsqldb/TriggerDef", "org/hsqldb/lib/OrderedHashSet", Opcodes.INTEGER}, 0, new Object[] {});
methodVisitor.visitIincInsn(15, 1);
methodVisitor.visitJumpInsn(GOTO, label7);
methodVisitor.visitLabel(label8);
methodVisitor.visitFrame(Opcodes.F_FULL, 12, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitJumpInsn(GOTO, label4);
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 18);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "TRIGGER_ROUTINE_USAGE", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "org/hsqldb/HsqlException");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 82);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label3 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 82);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TRIGGER_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TRIGGER_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TRIGGER_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SPECIFIC_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SPECIFIC_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SPECIFIC_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 82);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Database", "schemaManager", "Lorg/hsqldb/SchemaManager;");
methodVisitor.visitIntInsn(BIPUSH, 8);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/SchemaManager", "databaseObjectIterator", "(I)Lorg/hsqldb/lib/Iterator;", false);
methodVisitor.visitVarInsn(ASTORE, 10);
Label label4 = new Label();
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_FULL, 11, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "hasNext", "()Z", true);
Label label5 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label5);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "next", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/TriggerDef");
methodVisitor.visitVarInsn(ASTORE, 12);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getGrantee", "()Lorg/hsqldb/rights/Grantee;", false);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/TriggerDef", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "isFullyAccessibleByRole", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Z", false);
Label label6 = new Label();
methodVisitor.visitJumpInsn(IFNE, label6);
methodVisitor.visitJumpInsn(GOTO, label4);
methodVisitor.visitLabel(label6);
methodVisitor.visitFrame(Opcodes.F_APPEND,2, new Object[] {Opcodes.TOP, "org/hsqldb/TriggerDef"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/TriggerDef", "getReferences", "()Lorg/hsqldb/lib/OrderedHashSet;", false);
methodVisitor.visitVarInsn(ASTORE, 13);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 14);
Label label7 = new Label();
methodVisitor.visitLabel(label7);
methodVisitor.visitFrame(Opcodes.F_APPEND,2, new Object[] {"org/hsqldb/lib/OrderedHashSet", Opcodes.INTEGER}, 0, null);
methodVisitor.visitVarInsn(ILOAD, 14);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/OrderedHashSet", "size", "()I", false);
Label label8 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPGE, label8);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitVarInsn(ILOAD, 14);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/OrderedHashSet", "get", "(I)Ljava/lang/Object;", false);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/HsqlNameManager$HsqlName");
methodVisitor.visitVarInsn(ASTORE, 15);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "type", "I");
methodVisitor.visitIntInsn(BIPUSH, 24);
Label label9 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPEQ, label9);
Label label10 = new Label();
methodVisitor.visitJumpInsn(GOTO, label10);
methodVisitor.visitLabel(label9);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/HsqlNameManager$HsqlName"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 11);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/TriggerDef", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/TriggerDef", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "schema", "Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitLabel(label1);
methodVisitor.visitJumpInsn(GOTO, label10);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_FULL, 16, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "[Ljava/lang/Object;", "org/hsqldb/TriggerDef", "org/hsqldb/lib/OrderedHashSet", Opcodes.INTEGER, "org/hsqldb/HsqlNameManager$HsqlName"}, 1, new Object[] {"org/hsqldb/HsqlException"});
methodVisitor.visitVarInsn(ASTORE, 16);
methodVisitor.visitLabel(label10);
methodVisitor.visitFrame(Opcodes.F_FULL, 15, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", Opcodes.TOP, "org/hsqldb/TriggerDef", "org/hsqldb/lib/OrderedHashSet", Opcodes.INTEGER}, 0, new Object[] {});
methodVisitor.visitIincInsn(14, 1);
methodVisitor.visitJumpInsn(GOTO, label7);
methodVisitor.visitLabel(label8);
methodVisitor.visitFrame(Opcodes.F_FULL, 11, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitJumpInsn(GOTO, label4);
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 17);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "TRIGGER_SEQUENCE_USAGE", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "org/hsqldb/HsqlException");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 83);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label3 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 83);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TRIGGER_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TRIGGER_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TRIGGER_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SEQUENCE_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SEQUENCE_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SEQUENCE_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 83);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Database", "schemaManager", "Lorg/hsqldb/SchemaManager;");
methodVisitor.visitIntInsn(BIPUSH, 8);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/SchemaManager", "databaseObjectIterator", "(I)Lorg/hsqldb/lib/Iterator;", false);
methodVisitor.visitVarInsn(ASTORE, 10);
Label label4 = new Label();
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_FULL, 11, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "hasNext", "()Z", true);
Label label5 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label5);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "next", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/TriggerDef");
methodVisitor.visitVarInsn(ASTORE, 12);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getGrantee", "()Lorg/hsqldb/rights/Grantee;", false);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/TriggerDef", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "isFullyAccessibleByRole", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Z", false);
Label label6 = new Label();
methodVisitor.visitJumpInsn(IFNE, label6);
methodVisitor.visitJumpInsn(GOTO, label4);
methodVisitor.visitLabel(label6);
methodVisitor.visitFrame(Opcodes.F_APPEND,2, new Object[] {Opcodes.TOP, "org/hsqldb/TriggerDef"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/TriggerDef", "getReferences", "()Lorg/hsqldb/lib/OrderedHashSet;", false);
methodVisitor.visitVarInsn(ASTORE, 13);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 14);
Label label7 = new Label();
methodVisitor.visitLabel(label7);
methodVisitor.visitFrame(Opcodes.F_APPEND,2, new Object[] {"org/hsqldb/lib/OrderedHashSet", Opcodes.INTEGER}, 0, null);
methodVisitor.visitVarInsn(ILOAD, 14);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/OrderedHashSet", "size", "()I", false);
Label label8 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPGE, label8);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitVarInsn(ILOAD, 14);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/OrderedHashSet", "get", "(I)Ljava/lang/Object;", false);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/HsqlNameManager$HsqlName");
methodVisitor.visitVarInsn(ASTORE, 15);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "type", "I");
methodVisitor.visitIntInsn(BIPUSH, 7);
Label label9 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPEQ, label9);
Label label10 = new Label();
methodVisitor.visitJumpInsn(GOTO, label10);
methodVisitor.visitLabel(label9);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/HsqlNameManager$HsqlName"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 11);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/TriggerDef", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/TriggerDef", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "schema", "Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitLabel(label1);
methodVisitor.visitJumpInsn(GOTO, label10);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_FULL, 16, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "[Ljava/lang/Object;", "org/hsqldb/TriggerDef", "org/hsqldb/lib/OrderedHashSet", Opcodes.INTEGER, "org/hsqldb/HsqlNameManager$HsqlName"}, 1, new Object[] {"org/hsqldb/HsqlException"});
methodVisitor.visitVarInsn(ASTORE, 16);
methodVisitor.visitLabel(label10);
methodVisitor.visitFrame(Opcodes.F_FULL, 15, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", Opcodes.TOP, "org/hsqldb/TriggerDef", "org/hsqldb/lib/OrderedHashSet", Opcodes.INTEGER}, 0, new Object[] {});
methodVisitor.visitIincInsn(14, 1);
methodVisitor.visitJumpInsn(GOTO, label7);
methodVisitor.visitLabel(label8);
methodVisitor.visitFrame(Opcodes.F_FULL, 11, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitJumpInsn(GOTO, label4);
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 17);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "TRIGGER_TABLE_USAGE", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "org/hsqldb/HsqlException");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 84);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label3 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 84);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TRIGGER_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TRIGGER_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TRIGGER_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TABLE_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TABLE_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TABLE_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 84);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Database", "schemaManager", "Lorg/hsqldb/SchemaManager;");
methodVisitor.visitIntInsn(BIPUSH, 8);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/SchemaManager", "databaseObjectIterator", "(I)Lorg/hsqldb/lib/Iterator;", false);
methodVisitor.visitVarInsn(ASTORE, 10);
Label label4 = new Label();
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_FULL, 11, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "hasNext", "()Z", true);
Label label5 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label5);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "next", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/TriggerDef");
methodVisitor.visitVarInsn(ASTORE, 12);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getGrantee", "()Lorg/hsqldb/rights/Grantee;", false);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/TriggerDef", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "isFullyAccessibleByRole", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Z", false);
Label label6 = new Label();
methodVisitor.visitJumpInsn(IFNE, label6);
methodVisitor.visitJumpInsn(GOTO, label4);
methodVisitor.visitLabel(label6);
methodVisitor.visitFrame(Opcodes.F_APPEND,2, new Object[] {Opcodes.TOP, "org/hsqldb/TriggerDef"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/TriggerDef", "getReferences", "()Lorg/hsqldb/lib/OrderedHashSet;", false);
methodVisitor.visitVarInsn(ASTORE, 13);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 14);
Label label7 = new Label();
methodVisitor.visitLabel(label7);
methodVisitor.visitFrame(Opcodes.F_APPEND,2, new Object[] {"org/hsqldb/lib/OrderedHashSet", Opcodes.INTEGER}, 0, null);
methodVisitor.visitVarInsn(ILOAD, 14);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/OrderedHashSet", "size", "()I", false);
Label label8 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPGE, label8);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitVarInsn(ILOAD, 14);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/OrderedHashSet", "get", "(I)Ljava/lang/Object;", false);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/HsqlNameManager$HsqlName");
methodVisitor.visitVarInsn(ASTORE, 15);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "type", "I");
methodVisitor.visitInsn(ICONST_3);
Label label9 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPEQ, label9);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "type", "I");
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitJumpInsn(IF_ICMPEQ, label9);
Label label10 = new Label();
methodVisitor.visitJumpInsn(GOTO, label10);
methodVisitor.visitLabel(label9);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/HsqlNameManager$HsqlName"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 11);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/TriggerDef", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/TriggerDef", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "schema", "Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitLabel(label1);
methodVisitor.visitJumpInsn(GOTO, label10);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_FULL, 16, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "[Ljava/lang/Object;", "org/hsqldb/TriggerDef", "org/hsqldb/lib/OrderedHashSet", Opcodes.INTEGER, "org/hsqldb/HsqlNameManager$HsqlName"}, 1, new Object[] {"org/hsqldb/HsqlException"});
methodVisitor.visitVarInsn(ASTORE, 16);
methodVisitor.visitLabel(label10);
methodVisitor.visitFrame(Opcodes.F_FULL, 15, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", Opcodes.TOP, "org/hsqldb/TriggerDef", "org/hsqldb/lib/OrderedHashSet", Opcodes.INTEGER}, 0, new Object[] {});
methodVisitor.visitIincInsn(14, 1);
methodVisitor.visitJumpInsn(GOTO, label7);
methodVisitor.visitLabel(label8);
methodVisitor.visitFrame(Opcodes.F_FULL, 11, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitJumpInsn(GOTO, label4);
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 17);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "TRIGGERS", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 86);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 86);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TRIGGER_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TRIGGER_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TRIGGER_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("EVENT_MANIPULATION");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("EVENT_OBJECT_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("EVENT_OBJECT_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("EVENT_OBJECT_TABLE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("ACTION_ORDER");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("ACTION_CONDITION");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("ACTION_STATEMENT");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("ACTION_ORIENTATION");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("ACTION_TIMING");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("ACTION_REFERENCE_OLD_TABLE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("ACTION_REFERENCE_NEW_TABLE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("ACTION_REFERENCE_OLD_ROW");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("ACTION_REFERENCE_NEW_ROW");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CREATED");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "TIME_STAMP", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 86);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Database", "schemaManager", "Lorg/hsqldb/SchemaManager;");
methodVisitor.visitIntInsn(BIPUSH, 8);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/SchemaManager", "databaseObjectIterator", "(I)Lorg/hsqldb/lib/Iterator;", false);
methodVisitor.visitVarInsn(ASTORE, 21);
Label label1 = new Label();
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_FULL, 22, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 21);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "hasNext", "()Z", true);
Label label2 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label2);
methodVisitor.visitVarInsn(ALOAD, 21);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "next", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/TriggerDef");
methodVisitor.visitVarInsn(ASTORE, 23);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getGrantee", "()Lorg/hsqldb/rights/Grantee;", false);
methodVisitor.visitVarInsn(ALOAD, 23);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/TriggerDef", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "isFullyAccessibleByRole", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Z", false);
methodVisitor.visitVarInsn(ISTORE, 24);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getGrantee", "()Lorg/hsqldb/rights/Grantee;", false);
methodVisitor.visitVarInsn(ALOAD, 23);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/TriggerDef", "getTable", "()Lorg/hsqldb/Table;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "hasNonSelectTableRight", "(Lorg/hsqldb/SchemaObject;)Z", false);
Label label3 = new Label();
methodVisitor.visitJumpInsn(IFNE, label3);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_APPEND,3, new Object[] {Opcodes.TOP, "org/hsqldb/TriggerDef", Opcodes.INTEGER}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 22);
methodVisitor.visitVarInsn(ALOAD, 22);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 22);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 23);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/TriggerDef", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 22);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitVarInsn(ALOAD, 23);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/TriggerDef", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 22);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitVarInsn(ALOAD, 23);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/TriggerDef", "getEventTypeString", "()Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 22);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 22);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitVarInsn(ALOAD, 23);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/TriggerDef", "getTable", "()Lorg/hsqldb/Table;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 22);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitVarInsn(ALOAD, 23);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/TriggerDef", "getTable", "()Lorg/hsqldb/Table;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 23);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/TriggerDef", "getTable", "()Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ALOAD, 23);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/TriggerDef", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getTriggerIndex", "(Ljava/lang/String;)I", false);
methodVisitor.visitVarInsn(ISTORE, 25);
methodVisitor.visitVarInsn(ALOAD, 22);
methodVisitor.visitIntInsn(BIPUSH, 7);
methodVisitor.visitVarInsn(ILOAD, 25);
methodVisitor.visitInsn(I2L);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 22);
methodVisitor.visitIntInsn(BIPUSH, 8);
methodVisitor.visitVarInsn(ILOAD, 24);
Label label4 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label4);
methodVisitor.visitVarInsn(ALOAD, 23);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/TriggerDef", "getConditionSQL", "()Ljava/lang/String;", false);
Label label5 = new Label();
methodVisitor.visitJumpInsn(GOTO, label5);
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_FULL, 26, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "[Ljava/lang/Object;", "org/hsqldb/TriggerDef", Opcodes.INTEGER, Opcodes.INTEGER}, 2, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER});
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_FULL, 26, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "[Ljava/lang/Object;", "org/hsqldb/TriggerDef", Opcodes.INTEGER, Opcodes.INTEGER}, 3, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER, "java/lang/String"});
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 22);
methodVisitor.visitIntInsn(BIPUSH, 9);
methodVisitor.visitVarInsn(ILOAD, 24);
Label label6 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label6);
methodVisitor.visitVarInsn(ALOAD, 23);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/TriggerDef", "getProcedureSQL", "()Ljava/lang/String;", false);
Label label7 = new Label();
methodVisitor.visitJumpInsn(GOTO, label7);
methodVisitor.visitLabel(label6);
methodVisitor.visitFrame(Opcodes.F_FULL, 26, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "[Ljava/lang/Object;", "org/hsqldb/TriggerDef", Opcodes.INTEGER, Opcodes.INTEGER}, 2, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER});
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitLabel(label7);
methodVisitor.visitFrame(Opcodes.F_FULL, 26, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "[Ljava/lang/Object;", "org/hsqldb/TriggerDef", Opcodes.INTEGER, Opcodes.INTEGER}, 3, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER, "java/lang/String"});
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 22);
methodVisitor.visitIntInsn(BIPUSH, 10);
methodVisitor.visitVarInsn(ALOAD, 23);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/TriggerDef", "getActionOrientationString", "()Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 22);
methodVisitor.visitIntInsn(BIPUSH, 11);
methodVisitor.visitVarInsn(ALOAD, 23);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/TriggerDef", "getActionTimingString", "()Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 22);
methodVisitor.visitIntInsn(BIPUSH, 12);
methodVisitor.visitVarInsn(ALOAD, 23);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/TriggerDef", "getOldTransitionTableName", "()Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 22);
methodVisitor.visitIntInsn(BIPUSH, 13);
methodVisitor.visitVarInsn(ALOAD, 23);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/TriggerDef", "getNewTransitionTableName", "()Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 22);
methodVisitor.visitIntInsn(BIPUSH, 14);
methodVisitor.visitVarInsn(ALOAD, 23);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/TriggerDef", "getOldTransitionRowName", "()Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 22);
methodVisitor.visitIntInsn(BIPUSH, 15);
methodVisitor.visitVarInsn(ALOAD, 23);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/TriggerDef", "getNewTransitionRowName", "()Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 22);
methodVisitor.visitIntInsn(BIPUSH, 16);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 22);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_FULL, 22, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 26);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "TRIGGERED_UPDATE_COLUMNS", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 85);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 85);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TRIGGER_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TRIGGER_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TRIGGER_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("EVENT_OBJECT_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("EVENT_OBJECT_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("EVENT_OBJECT_TABLE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("EVENT_OBJECT_COLUMN");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 85);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitIntInsn(BIPUSH, 7);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Database", "schemaManager", "Lorg/hsqldb/SchemaManager;");
methodVisitor.visitIntInsn(BIPUSH, 8);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/SchemaManager", "databaseObjectIterator", "(I)Lorg/hsqldb/lib/Iterator;", false);
methodVisitor.visitVarInsn(ASTORE, 11);
Label label1 = new Label();
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_FULL, 12, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "hasNext", "()Z", true);
Label label2 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label2);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "next", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/TriggerDef");
methodVisitor.visitVarInsn(ASTORE, 13);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getGrantee", "()Lorg/hsqldb/rights/Grantee;", false);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "isAccessible", "(Lorg/hsqldb/SchemaObject;)Z", false);
Label label3 = new Label();
methodVisitor.visitJumpInsn(IFNE, label3);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_APPEND,2, new Object[] {Opcodes.TOP, "org/hsqldb/TriggerDef"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/TriggerDef", "getUpdateColumnIndexes", "()[I", false);
methodVisitor.visitVarInsn(ASTORE, 14);
methodVisitor.visitVarInsn(ALOAD, 14);
Label label4 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label4);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"[I"}, 0, null);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 15);
Label label5 = new Label();
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
methodVisitor.visitVarInsn(ILOAD, 15);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitInsn(ARRAYLENGTH);
Label label6 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPGE, label6);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/TriggerDef", "getTable", "()Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitVarInsn(ILOAD, 15);
methodVisitor.visitInsn(IALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getColumn", "(I)Lorg/hsqldb/ColumnSchema;", false);
methodVisitor.visitVarInsn(ASTORE, 16);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 12);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/TriggerDef", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/TriggerDef", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/TriggerDef", "getTable", "()Lorg/hsqldb/Table;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/TriggerDef", "getTable", "()Lorg/hsqldb/Table;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitVarInsn(ALOAD, 16);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/ColumnSchema", "getNameString", "()Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitIincInsn(15, 1);
methodVisitor.visitJumpInsn(GOTO, label5);
methodVisitor.visitLabel(label6);
methodVisitor.visitFrame(Opcodes.F_FULL, 12, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 17);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "UDT_PRIVILEGES", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "org/hsqldb/HsqlException");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 88);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label3 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 88);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("GRANTOR");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("GRANTEE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("UDT_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("UDT_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("UDT_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("PRIVILEGE_TYPE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("IS_GRANTABLE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "YES_OR_NO", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 88);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Database", "schemaManager", "Lorg/hsqldb/SchemaManager;");
methodVisitor.visitIntInsn(BIPUSH, 12);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/SchemaManager", "databaseObjectIterator", "(I)Lorg/hsqldb/lib/Iterator;", false);
methodVisitor.visitVarInsn(ASTORE, 11);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getGrantee", "()Lorg/hsqldb/rights/Grantee;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "getGranteeAndAllRolesWithPublic", "()Lorg/hsqldb/lib/OrderedHashSet;", false);
methodVisitor.visitVarInsn(ASTORE, 12);
Label label4 = new Label();
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_FULL, 13, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "org/hsqldb/lib/OrderedHashSet"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "hasNext", "()Z", true);
Label label5 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label5);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "next", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/SchemaObject");
methodVisitor.visitVarInsn(ASTORE, 13);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/SchemaObject", "getType", "()I", true);
methodVisitor.visitIntInsn(BIPUSH, 12);
Label label6 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPEQ, label6);
methodVisitor.visitJumpInsn(GOTO, label4);
methodVisitor.visitLabel(label6);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/SchemaObject"}, 0, null);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 14);
Label label7 = new Label();
methodVisitor.visitLabel(label7);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
methodVisitor.visitVarInsn(ILOAD, 14);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/OrderedHashSet", "size", "()I", false);
Label label8 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPGE, label8);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitVarInsn(ILOAD, 14);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/OrderedHashSet", "get", "(I)Ljava/lang/Object;", false);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/rights/Grantee");
methodVisitor.visitVarInsn(ASTORE, 15);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "getAllDirectPrivileges", "(Lorg/hsqldb/SchemaObject;)Lorg/hsqldb/lib/OrderedHashSet;", false);
methodVisitor.visitVarInsn(ASTORE, 16);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "getAllGrantedPrivileges", "(Lorg/hsqldb/SchemaObject;)Lorg/hsqldb/lib/OrderedHashSet;", false);
methodVisitor.visitVarInsn(ASTORE, 17);
methodVisitor.visitVarInsn(ALOAD, 17);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/OrderedHashSet", "isEmpty", "()Z", false);
Label label9 = new Label();
methodVisitor.visitJumpInsn(IFNE, label9);
methodVisitor.visitVarInsn(ALOAD, 17);
methodVisitor.visitVarInsn(ALOAD, 16);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/OrderedHashSet", "addAll", "(Lorg/hsqldb/lib/Collection;)Z", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitVarInsn(ALOAD, 17);
methodVisitor.visitVarInsn(ASTORE, 16);
methodVisitor.visitLabel(label9);
methodVisitor.visitFrame(Opcodes.F_APPEND,3, new Object[] {"org/hsqldb/rights/Grantee", "org/hsqldb/lib/OrderedHashSet", "org/hsqldb/lib/OrderedHashSet"}, 0, null);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 18);
Label label10 = new Label();
methodVisitor.visitLabel(label10);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
methodVisitor.visitVarInsn(ILOAD, 18);
methodVisitor.visitVarInsn(ALOAD, 16);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/OrderedHashSet", "size", "()I", false);
Label label11 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPGE, label11);
methodVisitor.visitVarInsn(ALOAD, 16);
methodVisitor.visitVarInsn(ILOAD, 18);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/OrderedHashSet", "get", "(I)Ljava/lang/Object;", false);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/rights/Right");
methodVisitor.visitVarInsn(ASTORE, 19);
methodVisitor.visitVarInsn(ALOAD, 19);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Right", "getGrantableRights", "()Lorg/hsqldb/rights/Right;", false);
methodVisitor.visitVarInsn(ASTORE, 20);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 21);
methodVisitor.visitVarInsn(ALOAD, 21);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 19);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Right", "getGrantor", "()Lorg/hsqldb/rights/Grantee;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 21);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 19);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Right", "getGrantee", "()Lorg/hsqldb/rights/Grantee;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 21);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 21);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/SchemaObject", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", true);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 21);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/SchemaObject", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", true);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 21);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitLdcInsn("USAGE");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 21);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitVarInsn(ALOAD, 19);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Right", "getGrantee", "()Lorg/hsqldb/rights/Grantee;", false);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/SchemaObject", "getOwner", "()Lorg/hsqldb/rights/Grantee;", true);
Label label12 = new Label();
methodVisitor.visitJumpInsn(IF_ACMPEQ, label12);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Right", "isFull", "()Z", false);
Label label13 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label13);
methodVisitor.visitLabel(label12);
methodVisitor.visitFrame(Opcodes.F_FULL, 22, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "org/hsqldb/lib/OrderedHashSet", "org/hsqldb/SchemaObject", Opcodes.INTEGER, "org/hsqldb/rights/Grantee", "org/hsqldb/lib/OrderedHashSet", "org/hsqldb/lib/OrderedHashSet", Opcodes.INTEGER, "org/hsqldb/rights/Right", "org/hsqldb/rights/Right", "[Ljava/lang/Object;"}, 2, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER});
methodVisitor.visitLdcInsn("YES");
Label label14 = new Label();
methodVisitor.visitJumpInsn(GOTO, label14);
methodVisitor.visitLabel(label13);
methodVisitor.visitFrame(Opcodes.F_FULL, 22, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "org/hsqldb/lib/OrderedHashSet", "org/hsqldb/SchemaObject", Opcodes.INTEGER, "org/hsqldb/rights/Grantee", "org/hsqldb/lib/OrderedHashSet", "org/hsqldb/lib/OrderedHashSet", Opcodes.INTEGER, "org/hsqldb/rights/Right", "org/hsqldb/rights/Right", "[Ljava/lang/Object;"}, 2, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER});
methodVisitor.visitLdcInsn("NO");
methodVisitor.visitLabel(label14);
methodVisitor.visitFrame(Opcodes.F_FULL, 22, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "org/hsqldb/lib/OrderedHashSet", "org/hsqldb/SchemaObject", Opcodes.INTEGER, "org/hsqldb/rights/Grantee", "org/hsqldb/lib/OrderedHashSet", "org/hsqldb/lib/OrderedHashSet", Opcodes.INTEGER, "org/hsqldb/rights/Right", "org/hsqldb/rights/Right", "[Ljava/lang/Object;"}, 3, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER, "java/lang/String"});
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 21);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitLabel(label1);
Label label15 = new Label();
methodVisitor.visitJumpInsn(GOTO, label15);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"org/hsqldb/HsqlException"});
methodVisitor.visitVarInsn(ASTORE, 22);
methodVisitor.visitLabel(label15);
methodVisitor.visitFrame(Opcodes.F_CHOP,3, null, 0, null);
methodVisitor.visitIincInsn(18, 1);
methodVisitor.visitJumpInsn(GOTO, label10);
methodVisitor.visitLabel(label11);
methodVisitor.visitFrame(Opcodes.F_FULL, 15, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "org/hsqldb/lib/OrderedHashSet", "org/hsqldb/SchemaObject", Opcodes.INTEGER}, 0, new Object[] {});
methodVisitor.visitIincInsn(14, 1);
methodVisitor.visitJumpInsn(GOTO, label7);
methodVisitor.visitLabel(label8);
methodVisitor.visitFrame(Opcodes.F_CHOP,2, null, 0, null);
methodVisitor.visitJumpInsn(GOTO, label4);
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 23);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "USAGE_PRIVILEGES", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "org/hsqldb/HsqlException");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 89);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label3 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 89);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("GRANTOR");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("GRANTEE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("OBJECT_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("OBJECT_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("OBJECT_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("OBJECT_TYPE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("PRIVILEGE_TYPE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("IS_GRANTABLE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "YES_OR_NO", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 89);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitIntInsn(BIPUSH, 8);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitIntInsn(BIPUSH, 7);
methodVisitor.visitIntInsn(BIPUSH, 7);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitTypeInsn(NEW, "org/hsqldb/lib/WrapperIterator");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Database", "schemaManager", "Lorg/hsqldb/SchemaManager;");
methodVisitor.visitIntInsn(BIPUSH, 7);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/SchemaManager", "databaseObjectIterator", "(I)Lorg/hsqldb/lib/Iterator;", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Database", "schemaManager", "Lorg/hsqldb/SchemaManager;");
methodVisitor.visitIntInsn(BIPUSH, 15);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/SchemaManager", "databaseObjectIterator", "(I)Lorg/hsqldb/lib/Iterator;", false);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/hsqldb/lib/WrapperIterator", "<init>", "(Lorg/hsqldb/lib/Iterator;Lorg/hsqldb/lib/Iterator;)V", false);
methodVisitor.visitVarInsn(ASTORE, 13);
methodVisitor.visitTypeInsn(NEW, "org/hsqldb/lib/WrapperIterator");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Database", "schemaManager", "Lorg/hsqldb/SchemaManager;");
methodVisitor.visitIntInsn(BIPUSH, 14);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/SchemaManager", "databaseObjectIterator", "(I)Lorg/hsqldb/lib/Iterator;", false);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/hsqldb/lib/WrapperIterator", "<init>", "(Lorg/hsqldb/lib/Iterator;Lorg/hsqldb/lib/Iterator;)V", false);
methodVisitor.visitVarInsn(ASTORE, 13);
methodVisitor.visitTypeInsn(NEW, "org/hsqldb/lib/WrapperIterator");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Database", "schemaManager", "Lorg/hsqldb/SchemaManager;");
methodVisitor.visitIntInsn(BIPUSH, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/SchemaManager", "databaseObjectIterator", "(I)Lorg/hsqldb/lib/Iterator;", false);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/hsqldb/lib/WrapperIterator", "<init>", "(Lorg/hsqldb/lib/Iterator;Lorg/hsqldb/lib/Iterator;)V", false);
methodVisitor.visitVarInsn(ASTORE, 13);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getGrantee", "()Lorg/hsqldb/rights/Grantee;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "getGranteeAndAllRolesWithPublic", "()Lorg/hsqldb/lib/OrderedHashSet;", false);
methodVisitor.visitVarInsn(ASTORE, 14);
Label label4 = new Label();
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_FULL, 15, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "org/hsqldb/lib/OrderedHashSet"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "hasNext", "()Z", true);
Label label5 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label5);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "next", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/SchemaObject");
methodVisitor.visitVarInsn(ASTORE, 15);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 16);
Label label6 = new Label();
methodVisitor.visitLabel(label6);
methodVisitor.visitFrame(Opcodes.F_APPEND,2, new Object[] {"org/hsqldb/SchemaObject", Opcodes.INTEGER}, 0, null);
methodVisitor.visitVarInsn(ILOAD, 16);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/OrderedHashSet", "size", "()I", false);
Label label7 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPGE, label7);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitVarInsn(ILOAD, 16);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/OrderedHashSet", "get", "(I)Ljava/lang/Object;", false);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/rights/Grantee");
methodVisitor.visitVarInsn(ASTORE, 17);
methodVisitor.visitVarInsn(ALOAD, 17);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "getAllDirectPrivileges", "(Lorg/hsqldb/SchemaObject;)Lorg/hsqldb/lib/OrderedHashSet;", false);
methodVisitor.visitVarInsn(ASTORE, 18);
methodVisitor.visitVarInsn(ALOAD, 17);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "getAllGrantedPrivileges", "(Lorg/hsqldb/SchemaObject;)Lorg/hsqldb/lib/OrderedHashSet;", false);
methodVisitor.visitVarInsn(ASTORE, 19);
methodVisitor.visitVarInsn(ALOAD, 19);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/OrderedHashSet", "isEmpty", "()Z", false);
Label label8 = new Label();
methodVisitor.visitJumpInsn(IFNE, label8);
methodVisitor.visitVarInsn(ALOAD, 19);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/OrderedHashSet", "addAll", "(Lorg/hsqldb/lib/Collection;)Z", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitVarInsn(ALOAD, 19);
methodVisitor.visitVarInsn(ASTORE, 18);
methodVisitor.visitLabel(label8);
methodVisitor.visitFrame(Opcodes.F_APPEND,3, new Object[] {"org/hsqldb/rights/Grantee", "org/hsqldb/lib/OrderedHashSet", "org/hsqldb/lib/OrderedHashSet"}, 0, null);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 20);
Label label9 = new Label();
methodVisitor.visitLabel(label9);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
methodVisitor.visitVarInsn(ILOAD, 20);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/OrderedHashSet", "size", "()I", false);
Label label10 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPGE, label10);
methodVisitor.visitVarInsn(ALOAD, 18);
methodVisitor.visitVarInsn(ILOAD, 20);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/OrderedHashSet", "get", "(I)Ljava/lang/Object;", false);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/rights/Right");
methodVisitor.visitVarInsn(ASTORE, 21);
methodVisitor.visitVarInsn(ALOAD, 21);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Right", "getGrantableRights", "()Lorg/hsqldb/rights/Right;", false);
methodVisitor.visitVarInsn(ASTORE, 22);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 21);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Right", "getGrantor", "()Lorg/hsqldb/rights/Grantee;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 21);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Right", "getGrantee", "()Lorg/hsqldb/rights/Grantee;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/SchemaObject", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", true);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/SchemaObject", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", true);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/SchemaObject", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", true);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "type", "I");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/SchemaObjectSet", "getName", "(I)Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitLdcInsn("USAGE");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitIntInsn(BIPUSH, 7);
methodVisitor.visitVarInsn(ALOAD, 21);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Right", "getGrantee", "()Lorg/hsqldb/rights/Grantee;", false);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/SchemaObject", "getOwner", "()Lorg/hsqldb/rights/Grantee;", true);
Label label11 = new Label();
methodVisitor.visitJumpInsn(IF_ACMPEQ, label11);
methodVisitor.visitVarInsn(ALOAD, 22);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Right", "isFull", "()Z", false);
Label label12 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label12);
methodVisitor.visitLabel(label11);
methodVisitor.visitFrame(Opcodes.F_FULL, 23, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", "[Ljava/lang/Object;", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "org/hsqldb/lib/OrderedHashSet", "org/hsqldb/SchemaObject", Opcodes.INTEGER, "org/hsqldb/rights/Grantee", "org/hsqldb/lib/OrderedHashSet", "org/hsqldb/lib/OrderedHashSet", Opcodes.INTEGER, "org/hsqldb/rights/Right", "org/hsqldb/rights/Right"}, 2, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER});
methodVisitor.visitLdcInsn("YES");
Label label13 = new Label();
methodVisitor.visitJumpInsn(GOTO, label13);
methodVisitor.visitLabel(label12);
methodVisitor.visitFrame(Opcodes.F_FULL, 23, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", "[Ljava/lang/Object;", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "org/hsqldb/lib/OrderedHashSet", "org/hsqldb/SchemaObject", Opcodes.INTEGER, "org/hsqldb/rights/Grantee", "org/hsqldb/lib/OrderedHashSet", "org/hsqldb/lib/OrderedHashSet", Opcodes.INTEGER, "org/hsqldb/rights/Right", "org/hsqldb/rights/Right"}, 2, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER});
methodVisitor.visitLdcInsn("NO");
methodVisitor.visitLabel(label13);
methodVisitor.visitFrame(Opcodes.F_FULL, 23, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", "[Ljava/lang/Object;", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "org/hsqldb/lib/OrderedHashSet", "org/hsqldb/SchemaObject", Opcodes.INTEGER, "org/hsqldb/rights/Grantee", "org/hsqldb/lib/OrderedHashSet", "org/hsqldb/lib/OrderedHashSet", Opcodes.INTEGER, "org/hsqldb/rights/Right", "org/hsqldb/rights/Right"}, 3, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER, "java/lang/String"});
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitLabel(label1);
Label label14 = new Label();
methodVisitor.visitJumpInsn(GOTO, label14);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"org/hsqldb/HsqlException"});
methodVisitor.visitVarInsn(ASTORE, 23);
methodVisitor.visitLabel(label14);
methodVisitor.visitFrame(Opcodes.F_CHOP,2, null, 0, null);
methodVisitor.visitIincInsn(20, 1);
methodVisitor.visitJumpInsn(GOTO, label9);
methodVisitor.visitLabel(label10);
methodVisitor.visitFrame(Opcodes.F_FULL, 17, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "org/hsqldb/lib/OrderedHashSet", "org/hsqldb/SchemaObject", Opcodes.INTEGER}, 0, new Object[] {});
methodVisitor.visitIincInsn(16, 1);
methodVisitor.visitJumpInsn(GOTO, label6);
methodVisitor.visitLabel(label7);
methodVisitor.visitFrame(Opcodes.F_CHOP,2, null, 0, null);
methodVisitor.visitJumpInsn(GOTO, label4);
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 24);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "USER_DEFINED_TYPES", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 90);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 90);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("USER_DEFINED_TYPE_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("USER_DEFINED_TYPE_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("USER_DEFINED_TYPE_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("USER_DEFINED_TYPE_CATEGORY");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("IS_INSTANTIABLE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "YES_OR_NO", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("IS_FINAL");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "YES_OR_NO", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("ORDERING_FORM");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("ORDERING_CATEGORY");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("ORDERING_ROUTINE_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("ORDERING_ROUTINE_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("ORDERING_ROUTINE_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("REFERENCE_TYPE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("DATA_TYPE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CHARACTER_MAXIMUM_LENGTH");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CHARACTER_OCTET_LENGTH");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CHARACTER_SET_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CHARACTER_SET_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CHARACTER_SET_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("COLLATION_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("COLLATION_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("COLLATION_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("NUMERIC_PRECISION");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("NUMERIC_PRECISION_RADIX");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("NUMERIC_SCALE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("DATETIME_PRECISION");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("INTERVAL_TYPE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("INTERVAL_PRECISION");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SOURCE_DTD_IDENTIFIER");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("REF_DTD_IDENTIFIER");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("DECLARED_DATA_TYPE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("DECLARED_NUMERIC_PRECISION");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("DECLARED_NUMERIC_SCALE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("MAXIMUM_CARDINALITY");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CARDINAL_NUMBER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("EXTERNAL_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("EXTERNAL_LANGUAGE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("JAVA_INTERFACE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 90);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Database", "schemaManager", "Lorg/hsqldb/SchemaManager;");
methodVisitor.visitIntInsn(BIPUSH, 12);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/SchemaManager", "databaseObjectIterator", "(I)Lorg/hsqldb/lib/Iterator;", false);
methodVisitor.visitVarInsn(ASTORE, 37);
Label label1 = new Label();
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_FULL, 38, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 37);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "hasNext", "()Z", true);
Label label2 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label2);
methodVisitor.visitVarInsn(ALOAD, 37);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "next", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/types/Type");
methodVisitor.visitVarInsn(ASTORE, 38);
methodVisitor.visitVarInsn(ALOAD, 38);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isDistinctType", "()Z", false);
Label label3 = new Label();
methodVisitor.visitJumpInsn(IFNE, label3);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/types/Type"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 39);
methodVisitor.visitVarInsn(ALOAD, 39);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 39);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 38);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 39);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitVarInsn(ALOAD, 38);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 39);
methodVisitor.visitIntInsn(BIPUSH, 12);
methodVisitor.visitVarInsn(ALOAD, 38);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "getFullNameString", "()Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 39);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitLdcInsn("DISTINCT");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 39);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitLdcInsn("YES");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 39);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitLdcInsn("YES");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 39);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitLdcInsn("FULL");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 38);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isCharacterType", "()Z", false);
Label label4 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label4);
methodVisitor.visitVarInsn(ALOAD, 39);
methodVisitor.visitIntInsn(BIPUSH, 13);
methodVisitor.visitVarInsn(ALOAD, 38);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "precision", "J");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 39);
methodVisitor.visitIntInsn(BIPUSH, 14);
methodVisitor.visitVarInsn(ALOAD, 38);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "precision", "J");
methodVisitor.visitLdcInsn(new Long(2L));
methodVisitor.visitInsn(LMUL);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 39);
methodVisitor.visitIntInsn(BIPUSH, 15);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 39);
methodVisitor.visitIntInsn(BIPUSH, 16);
methodVisitor.visitVarInsn(ALOAD, 38);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/types/CharacterType");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/CharacterType", "getCharacterSet", "()Lorg/hsqldb/types/Charset;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Charset", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 39);
methodVisitor.visitIntInsn(BIPUSH, 17);
methodVisitor.visitVarInsn(ALOAD, 38);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/types/CharacterType");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/CharacterType", "getCharacterSet", "()Lorg/hsqldb/types/Charset;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Charset", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 39);
methodVisitor.visitIntInsn(BIPUSH, 18);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 39);
methodVisitor.visitIntInsn(BIPUSH, 19);
methodVisitor.visitVarInsn(ALOAD, 38);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/types/CharacterType");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/CharacterType", "getCollation", "()Lorg/hsqldb/types/Collation;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Collation", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 39);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitVarInsn(ALOAD, 38);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/types/CharacterType");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/CharacterType", "getCollation", "()Lorg/hsqldb/types/Collation;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Collation", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
Label label5 = new Label();
methodVisitor.visitJumpInsn(GOTO, label5);
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"[Ljava/lang/Object;"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 38);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isNumberType", "()Z", false);
Label label6 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label6);
methodVisitor.visitVarInsn(ALOAD, 39);
methodVisitor.visitIntInsn(BIPUSH, 21);
methodVisitor.visitVarInsn(ALOAD, 38);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/types/NumberType");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/NumberType", "getNumericPrecisionInRadix", "()I", false);
methodVisitor.visitInsn(I2L);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 39);
methodVisitor.visitIntInsn(BIPUSH, 30);
methodVisitor.visitVarInsn(ALOAD, 38);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/types/NumberType");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/NumberType", "getNumericPrecisionInRadix", "()I", false);
methodVisitor.visitInsn(I2L);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 38);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isExactNumberType", "()Z", false);
Label label7 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label7);
methodVisitor.visitVarInsn(ALOAD, 39);
methodVisitor.visitIntInsn(BIPUSH, 23);
methodVisitor.visitVarInsn(ALOAD, 39);
methodVisitor.visitIntInsn(BIPUSH, 31);
methodVisitor.visitVarInsn(ALOAD, 38);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "scale", "I");
methodVisitor.visitInsn(I2L);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(DUP_X2);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLabel(label7);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 39);
methodVisitor.visitIntInsn(BIPUSH, 22);
methodVisitor.visitVarInsn(ALOAD, 38);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "getPrecisionRadix", "()I", false);
methodVisitor.visitInsn(I2L);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitJumpInsn(GOTO, label5);
methodVisitor.visitLabel(label6);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 38);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isBooleanType", "()Z", false);
Label label8 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label8);
methodVisitor.visitJumpInsn(GOTO, label5);
methodVisitor.visitLabel(label8);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 38);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isDateTimeType", "()Z", false);
Label label9 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label9);
methodVisitor.visitVarInsn(ALOAD, 39);
methodVisitor.visitIntInsn(BIPUSH, 24);
methodVisitor.visitVarInsn(ALOAD, 38);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "scale", "I");
methodVisitor.visitInsn(I2L);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitJumpInsn(GOTO, label5);
methodVisitor.visitLabel(label9);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 38);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isIntervalType", "()Z", false);
Label label10 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label10);
methodVisitor.visitVarInsn(ALOAD, 39);
methodVisitor.visitIntInsn(BIPUSH, 12);
methodVisitor.visitLdcInsn("INTERVAL");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 39);
methodVisitor.visitIntInsn(BIPUSH, 25);
methodVisitor.visitVarInsn(ALOAD, 38);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/types/IntervalType");
methodVisitor.visitInsn(POP);
methodVisitor.visitVarInsn(ALOAD, 38);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "typeCode", "I");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/types/IntervalType", "getQualifier", "(I)Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 39);
methodVisitor.visitIntInsn(BIPUSH, 26);
methodVisitor.visitVarInsn(ALOAD, 38);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "precision", "J");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 39);
methodVisitor.visitIntInsn(BIPUSH, 24);
methodVisitor.visitVarInsn(ALOAD, 38);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "scale", "I");
methodVisitor.visitInsn(I2L);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitJumpInsn(GOTO, label5);
methodVisitor.visitLabel(label10);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 38);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isBinaryType", "()Z", false);
Label label11 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label11);
methodVisitor.visitVarInsn(ALOAD, 39);
methodVisitor.visitIntInsn(BIPUSH, 13);
methodVisitor.visitVarInsn(ALOAD, 38);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "precision", "J");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 39);
methodVisitor.visitIntInsn(BIPUSH, 14);
methodVisitor.visitVarInsn(ALOAD, 38);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "precision", "J");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitJumpInsn(GOTO, label5);
methodVisitor.visitLabel(label11);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 38);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isBitType", "()Z", false);
Label label12 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label12);
methodVisitor.visitVarInsn(ALOAD, 39);
methodVisitor.visitIntInsn(BIPUSH, 13);
methodVisitor.visitVarInsn(ALOAD, 38);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "precision", "J");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 39);
methodVisitor.visitIntInsn(BIPUSH, 14);
methodVisitor.visitVarInsn(ALOAD, 38);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/types/Type", "precision", "J");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitJumpInsn(GOTO, label5);
methodVisitor.visitLabel(label12);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 38);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "isArrayType", "()Z", false);
methodVisitor.visitJumpInsn(IFEQ, label5);
methodVisitor.visitVarInsn(ALOAD, 39);
methodVisitor.visitIntInsn(BIPUSH, 32);
methodVisitor.visitVarInsn(ALOAD, 38);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "arrayLimitCardinality", "()I", false);
methodVisitor.visitInsn(I2L);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/map/ValuePool", "getLong", "(J)Ljava/lang/Long;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 39);
methodVisitor.visitIntInsn(BIPUSH, 12);
methodVisitor.visitLdcInsn("ARRAY");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 39);
methodVisitor.visitIntInsn(BIPUSH, 27);
methodVisitor.visitVarInsn(ALOAD, 38);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/types/Type", "getDefinition", "()Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 39);
methodVisitor.visitIntInsn(BIPUSH, 29);
methodVisitor.visitVarInsn(ALOAD, 39);
methodVisitor.visitIntInsn(BIPUSH, 12);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 39);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_CHOP,2, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 40);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "VIEW_COLUMN_USAGE", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "org/hsqldb/HsqlException");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 91);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label3 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 91);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("VIEW_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("VIEW_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("VIEW_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TABLE_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TABLE_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TABLE_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("COLUMN_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 91);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitIntInsn(BIPUSH, 7);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Database", "schemaManager", "Lorg/hsqldb/SchemaManager;");
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/SchemaManager", "databaseObjectIterator", "(I)Lorg/hsqldb/lib/Iterator;", false);
methodVisitor.visitVarInsn(ASTORE, 7);
Label label4 = new Label();
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_FULL, 8, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "hasNext", "()Z", true);
Label label5 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label5);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "next", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/Table");
methodVisitor.visitVarInsn(ASTORE, 9);
methodVisitor.visitVarInsn(ALOAD, 9);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "isView", "()Z", false);
methodVisitor.visitJumpInsn(IFEQ, label4);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getGrantee", "()Lorg/hsqldb/rights/Grantee;", false);
methodVisitor.visitVarInsn(ALOAD, 9);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "isFullyAccessibleByRole", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Z", false);
methodVisitor.visitJumpInsn(IFEQ, label4);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 9);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 9);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 9);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/View");
methodVisitor.visitVarInsn(ASTORE, 8);
methodVisitor.visitVarInsn(ALOAD, 8);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/View", "getReferences", "()Lorg/hsqldb/lib/OrderedHashSet;", false);
methodVisitor.visitVarInsn(ASTORE, 19);
methodVisitor.visitVarInsn(ALOAD, 19);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/OrderedHashSet", "iterator", "()Lorg/hsqldb/lib/Iterator;", false);
methodVisitor.visitVarInsn(ASTORE, 11);
Label label6 = new Label();
methodVisitor.visitLabel(label6);
methodVisitor.visitFrame(Opcodes.F_FULL, 20, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", "java/lang/String", "java/lang/String", "java/lang/String", "org/hsqldb/lib/Iterator", "org/hsqldb/View", "org/hsqldb/Table", Opcodes.TOP, "org/hsqldb/lib/Iterator", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/OrderedHashSet"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "hasNext", "()Z", true);
Label label7 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label7);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "next", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/HsqlNameManager$HsqlName");
methodVisitor.visitVarInsn(ASTORE, 20);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "type", "I");
methodVisitor.visitIntInsn(BIPUSH, 9);
Label label8 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPEQ, label8);
methodVisitor.visitJumpInsn(GOTO, label6);
methodVisitor.visitLabel(label8);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/HsqlNameManager$HsqlName"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 10);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "parent", "Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "schema", "Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "parent", "Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitVarInsn(ALOAD, 20);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitLabel(label1);
Label label9 = new Label();
methodVisitor.visitJumpInsn(GOTO, label9);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_FULL, 21, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", "java/lang/String", "java/lang/String", "java/lang/String", "org/hsqldb/lib/Iterator", "org/hsqldb/View", "org/hsqldb/Table", "[Ljava/lang/Object;", "org/hsqldb/lib/Iterator", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/OrderedHashSet", "org/hsqldb/HsqlNameManager$HsqlName"}, 1, new Object[] {"org/hsqldb/HsqlException"});
methodVisitor.visitVarInsn(ASTORE, 21);
methodVisitor.visitLabel(label9);
methodVisitor.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
methodVisitor.visitJumpInsn(GOTO, label6);
methodVisitor.visitLabel(label7);
methodVisitor.visitFrame(Opcodes.F_FULL, 12, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", "java/lang/String", "java/lang/String", "java/lang/String", "org/hsqldb/lib/Iterator", "org/hsqldb/View", "org/hsqldb/Table", Opcodes.TOP, "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitJumpInsn(GOTO, label4);
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_FULL, 8, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 22);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "VIEW_ROUTINE_USAGE", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "org/hsqldb/HsqlException");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 92);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label3 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 92);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("VIEW_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("VIEW_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("VIEW_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SPECIFIC_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SPECIFIC_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("SPECIFIC_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 92);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Database", "schemaManager", "Lorg/hsqldb/SchemaManager;");
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/SchemaManager", "databaseObjectIterator", "(I)Lorg/hsqldb/lib/Iterator;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
Label label4 = new Label();
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/lib/Iterator"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "hasNext", "()Z", true);
Label label5 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label5);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "next", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/Table");
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "isView", "()Z", false);
Label label6 = new Label();
methodVisitor.visitJumpInsn(IFNE, label6);
methodVisitor.visitJumpInsn(GOTO, label4);
methodVisitor.visitLabel(label6);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getReferences", "()Lorg/hsqldb/lib/OrderedHashSet;", false);
methodVisitor.visitVarInsn(ASTORE, 13);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 14);
Label label7 = new Label();
methodVisitor.visitLabel(label7);
methodVisitor.visitFrame(Opcodes.F_FULL, 15, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", "org/hsqldb/lib/Iterator", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/OrderedHashSet", Opcodes.INTEGER}, 0, new Object[] {});
methodVisitor.visitVarInsn(ILOAD, 14);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/OrderedHashSet", "size", "()I", false);
Label label8 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPGE, label8);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitVarInsn(ILOAD, 14);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/OrderedHashSet", "get", "(I)Ljava/lang/Object;", false);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/HsqlNameManager$HsqlName");
methodVisitor.visitVarInsn(ASTORE, 15);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "type", "I");
methodVisitor.visitIntInsn(BIPUSH, 24);
Label label9 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPEQ, label9);
Label label10 = new Label();
methodVisitor.visitJumpInsn(GOTO, label10);
methodVisitor.visitLabel(label9);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/HsqlNameManager$HsqlName"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getGrantee", "()Lorg/hsqldb/rights/Grantee;", false);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "isFullyAccessibleByRole", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Z", false);
Label label11 = new Label();
methodVisitor.visitJumpInsn(IFNE, label11);
methodVisitor.visitJumpInsn(GOTO, label10);
methodVisitor.visitLabel(label11);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "schema", "Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitLabel(label1);
methodVisitor.visitJumpInsn(GOTO, label10);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_FULL, 16, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", "org/hsqldb/lib/Iterator", "org/hsqldb/Table", "[Ljava/lang/Object;", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/OrderedHashSet", Opcodes.INTEGER, "org/hsqldb/HsqlNameManager$HsqlName"}, 1, new Object[] {"org/hsqldb/HsqlException"});
methodVisitor.visitVarInsn(ASTORE, 16);
methodVisitor.visitLabel(label10);
methodVisitor.visitFrame(Opcodes.F_FULL, 15, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", "org/hsqldb/lib/Iterator", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/OrderedHashSet", Opcodes.INTEGER}, 0, new Object[] {});
methodVisitor.visitIincInsn(14, 1);
methodVisitor.visitJumpInsn(GOTO, label7);
methodVisitor.visitLabel(label8);
methodVisitor.visitFrame(Opcodes.F_FULL, 6, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", "org/hsqldb/lib/Iterator", "org/hsqldb/Table"}, 0, new Object[] {});
methodVisitor.visitJumpInsn(GOTO, label4);
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 17);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "VIEW_TABLE_USAGE", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "org/hsqldb/HsqlException");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 93);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label3 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 93);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("VIEW_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("VIEW_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("VIEW_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TABLE_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TABLE_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TABLE_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 93);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/Database", "schemaManager", "Lorg/hsqldb/SchemaManager;");
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/SchemaManager", "databaseObjectIterator", "(I)Lorg/hsqldb/lib/Iterator;", false);
methodVisitor.visitVarInsn(ASTORE, 10);
Label label4 = new Label();
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_FULL, 11, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "hasNext", "()Z", true);
Label label5 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label5);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "next", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/Table");
methodVisitor.visitVarInsn(ASTORE, 11);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "isView", "()Z", false);
Label label6 = new Label();
methodVisitor.visitJumpInsn(IFNE, label6);
methodVisitor.visitJumpInsn(GOTO, label4);
methodVisitor.visitLabel(label6);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getReferences", "()Lorg/hsqldb/lib/OrderedHashSet;", false);
methodVisitor.visitVarInsn(ASTORE, 13);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 14);
Label label7 = new Label();
methodVisitor.visitLabel(label7);
methodVisitor.visitFrame(Opcodes.F_APPEND,3, new Object[] {Opcodes.TOP, "org/hsqldb/lib/OrderedHashSet", Opcodes.INTEGER}, 0, null);
methodVisitor.visitVarInsn(ILOAD, 14);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/OrderedHashSet", "size", "()I", false);
Label label8 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPGE, label8);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitVarInsn(ILOAD, 14);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/OrderedHashSet", "get", "(I)Ljava/lang/Object;", false);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/HsqlNameManager$HsqlName");
methodVisitor.visitVarInsn(ASTORE, 15);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "type", "I");
methodVisitor.visitInsn(ICONST_3);
Label label9 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPEQ, label9);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "type", "I");
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitJumpInsn(IF_ICMPEQ, label9);
Label label10 = new Label();
methodVisitor.visitJumpInsn(GOTO, label10);
methodVisitor.visitLabel(label9);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/HsqlNameManager$HsqlName"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getGrantee", "()Lorg/hsqldb/rights/Grantee;", false);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "isFullyAccessibleByRole", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Z", false);
Label label11 = new Label();
methodVisitor.visitJumpInsn(IFNE, label11);
methodVisitor.visitJumpInsn(GOTO, label10);
methodVisitor.visitLabel(label11);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 12);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "schema", "Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitLabel(label1);
methodVisitor.visitJumpInsn(GOTO, label10);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_FULL, 16, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "org/hsqldb/Table", "[Ljava/lang/Object;", "org/hsqldb/lib/OrderedHashSet", Opcodes.INTEGER, "org/hsqldb/HsqlNameManager$HsqlName"}, 1, new Object[] {"org/hsqldb/HsqlException"});
methodVisitor.visitVarInsn(ASTORE, 16);
methodVisitor.visitLabel(label10);
methodVisitor.visitFrame(Opcodes.F_FULL, 15, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "org/hsqldb/lib/Iterator", "org/hsqldb/Table", Opcodes.TOP, "org/hsqldb/lib/OrderedHashSet", Opcodes.INTEGER}, 0, new Object[] {});
methodVisitor.visitIincInsn(14, 1);
methodVisitor.visitJumpInsn(GOTO, label7);
methodVisitor.visitLabel(label8);
methodVisitor.visitFrame(Opcodes.F_CHOP,3, null, 0, null);
methodVisitor.visitJumpInsn(GOTO, label4);
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 17);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "VIEWS", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 94);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 94);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TABLE_CATALOG");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TABLE_SCHEMA");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("TABLE_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("VIEW_DEFINITION");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("CHECK_OPTION");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "CHARACTER_DATA", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("IS_UPDATABLE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "YES_OR_NO", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("INSERTABLE_INTO");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "YES_OR_NO", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("IS_TRIGGER_UPDATABLE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "YES_OR_NO", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("IS_TRIGGER_DELETABLE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "YES_OR_NO", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("IS_TRIGGER_INSERTABLE_INTO");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "YES_OR_NO", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 94);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "allTables", "()Lorg/hsqldb/lib/Iterator;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
Label label1 = new Label();
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/lib/Iterator"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "hasNext", "()Z", true);
Label label2 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label2);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "next", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/Table");
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "isView", "()Z", false);
Label label3 = new Label();
methodVisitor.visitJumpInsn(IFNE, label3);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/SqlInvariants", "INFORMATION_SCHEMA_HSQLNAME", "Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitJumpInsn(IF_ACMPEQ, label3);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "isAccessibleTable", "(Lorg/hsqldb/Session;Lorg/hsqldb/Table;)Z", false);
Label label4 = new Label();
methodVisitor.visitJumpInsn(IFNE, label4);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "database", "Lorg/hsqldb/Database;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Database", "getCatalogName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getSchemaName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLdcInsn("NONE");
methodVisitor.visitVarInsn(ASTORE, 17);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitTypeInsn(INSTANCEOF, "org/hsqldb/View");
Label label5 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label5);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getGrantee", "()Lorg/hsqldb/rights/Grantee;", false);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "isFullyAccessibleByRole", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Z", false);
Label label6 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label6);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/View");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/View", "getStatement", "()Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLabel(label6);
methodVisitor.visitFrame(Opcodes.F_FULL, 18, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", "org/hsqldb/lib/Iterator", "org/hsqldb/Table", "[Ljava/lang/Object;", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "java/lang/String"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/View");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/View", "getCheckOption", "()I", false);
Label label7 = new Label();
Label label8 = new Label();
Label label9 = new Label();
methodVisitor.visitTableSwitchInsn(0, 2, label5, new Label[] { label7, label8, label9 });
methodVisitor.visitLabel(label7);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitJumpInsn(GOTO, label5);
methodVisitor.visitLabel(label8);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitLdcInsn("LOCAL");
methodVisitor.visitVarInsn(ASTORE, 17);
methodVisitor.visitJumpInsn(GOTO, label5);
methodVisitor.visitLabel(label9);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitLdcInsn("CASCADED");
methodVisitor.visitVarInsn(ASTORE, 17);
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitVarInsn(ALOAD, 17);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitInsn(ICONST_5);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "isUpdatable", "()Z", false);
Label label10 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label10);
methodVisitor.visitLdcInsn("YES");
Label label11 = new Label();
methodVisitor.visitJumpInsn(GOTO, label11);
methodVisitor.visitLabel(label10);
methodVisitor.visitFrame(Opcodes.F_FULL, 18, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", "org/hsqldb/lib/Iterator", "org/hsqldb/Table", "[Ljava/lang/Object;", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "java/lang/String"}, 2, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER});
methodVisitor.visitLdcInsn("NO");
methodVisitor.visitLabel(label11);
methodVisitor.visitFrame(Opcodes.F_FULL, 18, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", "org/hsqldb/lib/Iterator", "org/hsqldb/Table", "[Ljava/lang/Object;", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "java/lang/String"}, 3, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER, "java/lang/String"});
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitIntInsn(BIPUSH, 6);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "isInsertable", "()Z", false);
Label label12 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label12);
methodVisitor.visitLdcInsn("YES");
Label label13 = new Label();
methodVisitor.visitJumpInsn(GOTO, label13);
methodVisitor.visitLabel(label12);
methodVisitor.visitFrame(Opcodes.F_FULL, 18, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", "org/hsqldb/lib/Iterator", "org/hsqldb/Table", "[Ljava/lang/Object;", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "java/lang/String"}, 2, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER});
methodVisitor.visitLdcInsn("NO");
methodVisitor.visitLabel(label13);
methodVisitor.visitFrame(Opcodes.F_FULL, 18, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", "org/hsqldb/lib/Iterator", "org/hsqldb/Table", "[Ljava/lang/Object;", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "java/lang/String"}, 3, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER, "java/lang/String"});
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitIntInsn(BIPUSH, 7);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "isTriggerUpdatable", "()Z", false);
Label label14 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label14);
methodVisitor.visitLdcInsn("YES");
Label label15 = new Label();
methodVisitor.visitJumpInsn(GOTO, label15);
methodVisitor.visitLabel(label14);
methodVisitor.visitFrame(Opcodes.F_FULL, 18, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", "org/hsqldb/lib/Iterator", "org/hsqldb/Table", "[Ljava/lang/Object;", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "java/lang/String"}, 2, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER});
methodVisitor.visitLdcInsn("NO");
methodVisitor.visitLabel(label15);
methodVisitor.visitFrame(Opcodes.F_FULL, 18, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", "org/hsqldb/lib/Iterator", "org/hsqldb/Table", "[Ljava/lang/Object;", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "java/lang/String"}, 3, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER, "java/lang/String"});
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitIntInsn(BIPUSH, 8);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "isTriggerDeletable", "()Z", false);
Label label16 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label16);
methodVisitor.visitLdcInsn("YES");
Label label17 = new Label();
methodVisitor.visitJumpInsn(GOTO, label17);
methodVisitor.visitLabel(label16);
methodVisitor.visitFrame(Opcodes.F_FULL, 18, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", "org/hsqldb/lib/Iterator", "org/hsqldb/Table", "[Ljava/lang/Object;", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "java/lang/String"}, 2, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER});
methodVisitor.visitLdcInsn("NO");
methodVisitor.visitLabel(label17);
methodVisitor.visitFrame(Opcodes.F_FULL, 18, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", "org/hsqldb/lib/Iterator", "org/hsqldb/Table", "[Ljava/lang/Object;", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "java/lang/String"}, 3, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER, "java/lang/String"});
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitIntInsn(BIPUSH, 9);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "isTriggerInsertable", "()Z", false);
Label label18 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label18);
methodVisitor.visitLdcInsn("YES");
Label label19 = new Label();
methodVisitor.visitJumpInsn(GOTO, label19);
methodVisitor.visitLabel(label18);
methodVisitor.visitFrame(Opcodes.F_FULL, 18, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", "org/hsqldb/lib/Iterator", "org/hsqldb/Table", "[Ljava/lang/Object;", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "java/lang/String"}, 2, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER});
methodVisitor.visitLdcInsn("NO");
methodVisitor.visitLabel(label19);
methodVisitor.visitFrame(Opcodes.F_FULL, 18, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", "org/hsqldb/lib/Iterator", "org/hsqldb/Table", "[Ljava/lang/Object;", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "java/lang/String"}, 3, new Object[] {"[Ljava/lang/Object;", Opcodes.INTEGER, "java/lang/String"});
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_FULL, 5, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 18);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "ROLE_AUTHORIZATION_DESCRIPTORS", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;)Lorg/hsqldb/Table;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTables", "[Lorg/hsqldb/Table;");
methodVisitor.visitIntInsn(BIPUSH, 55);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 55);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "createBlankTable", "(Lorg/hsqldb/HsqlNameManager$HsqlName;)Lorg/hsqldb/Table;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("ROLE_NAME");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("GRANTEE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("GRANTOR");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "SQL_IDENTIFIER", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("IS_GRANTABLE");
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "YES_OR_NO", "Lorg/hsqldb/types/Type;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/dbinfo/DatabaseInformationFull", "addColumn", "(Lorg/hsqldb/Table;Ljava/lang/String;Lorg/hsqldb/types/Type;)V", false);
methodVisitor.visitFieldInsn(GETSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "sysTableHsqlNames", "[Lorg/hsqldb/HsqlNameManager$HsqlName;");
methodVisitor.visitIntInsn(BIPUSH, 55);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitFieldInsn(GETFIELD, "org/hsqldb/HsqlNameManager$HsqlName", "name", "Ljava/lang/String;");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitIntInsn(BIPUSH, 20);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/hsqldb/HsqlNameManager", "newInfoSchemaObjectName", "(Ljava/lang/String;ZI)Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "createPrimaryKeyConstraint", "(Lorg/hsqldb/HsqlNameManager$HsqlName;[IZ)V", false);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/hsqldb/Table"}, 0, null);
methodVisitor.visitLdcInsn("_SYSTEM");
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Session", "getGrantee", "()Lorg/hsqldb/rights/Grantee;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "visibleGrantees", "()Lorg/hsqldb/lib/OrderedHashSet;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/OrderedHashSet", "iterator", "()Lorg/hsqldb/lib/Iterator;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
Label label1 = new Label();
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_APPEND,2, new Object[] {"java/lang/String", "org/hsqldb/lib/Iterator"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "hasNext", "()Z", true);
Label label2 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label2);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "next", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/rights/Grantee");
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/HsqlNameManager$HsqlName", "getNameString", "()Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ASTORE, 7);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "getDirectRoles", "()Lorg/hsqldb/lib/OrderedHashSet;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/OrderedHashSet", "iterator", "()Lorg/hsqldb/lib/Iterator;", false);
methodVisitor.visitVarInsn(ASTORE, 8);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "isAdmin", "()Z", false);
Label label3 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label3);
methodVisitor.visitLdcInsn("YES");
Label label4 = new Label();
methodVisitor.visitJumpInsn(GOTO, label4);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_APPEND,3, new Object[] {"org/hsqldb/rights/Grantee", "java/lang/String", "org/hsqldb/lib/Iterator"}, 0, null);
methodVisitor.visitLdcInsn("NO");
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/String"});
methodVisitor.visitVarInsn(ASTORE, 9);
Label label5 = new Label();
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"java/lang/String"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 8);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "hasNext", "()Z", true);
methodVisitor.visitJumpInsn(IFEQ, label1);
methodVisitor.visitVarInsn(ALOAD, 8);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/hsqldb/lib/Iterator", "next", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/hsqldb/rights/Grantee");
methodVisitor.visitVarInsn(ASTORE, 15);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "getEmptyRowData", "()[Ljava/lang/Object;", false);
methodVisitor.visitVarInsn(ASTORE, 10);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/rights/Grantee", "getName", "()Lorg/hsqldb/HsqlNameManager$HsqlName;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/HsqlNameManager$HsqlName", "getNameString", "()Ljava/lang/String;", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitVarInsn(ALOAD, 9);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/Table", "insertSys", "(Lorg/hsqldb/Session;Lorg/hsqldb/persist/PersistentStore;[Ljava/lang/Object;)V", false);
methodVisitor.visitJumpInsn(GOTO, label5);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_FULL, 6, new Object[] {"org/hsqldb/dbinfo/DatabaseInformationFull", "org/hsqldb/Session", "org/hsqldb/persist/PersistentStore", "org/hsqldb/Table", "java/lang/String", "org/hsqldb/lib/Iterator"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(6, 16);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_STATIC, "<clinit>", "()V", null, null);
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/lang/Exception");
Label label3 = new Label();
Label label4 = new Label();
Label label5 = new Label();
methodVisitor.visitTryCatchBlock(label3, label4, label5, null);
Label label6 = new Label();
methodVisitor.visitTryCatchBlock(label5, label6, label5, null);
methodVisitor.visitLdcInsn(Type.getType("Lorg/hsqldb/dbinfo/DatabaseInformationFull;"));
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ASTORE, 0);
methodVisitor.visitInsn(MONITORENTER);
methodVisitor.visitLabel(label3);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/String");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitLdcInsn("/*");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitTypeInsn(NEW, "org/hsqldb/dbinfo/DatabaseInformationFull$1");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/hsqldb/dbinfo/DatabaseInformationFull$1", "<init>", "()V", false);
methodVisitor.visitMethodInsn(INVOKESTATIC, "java/security/AccessController", "doPrivileged", "(Ljava/security/PrivilegedAction;)Ljava/lang/Object;", false);
methodVisitor.visitTypeInsn(CHECKCAST, "java/io/InputStream");
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitLabel(label0);
methodVisitor.visitTypeInsn(NEW, "java/io/InputStreamReader");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitLdcInsn("ISO-8859-1");
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/io/InputStreamReader", "<init>", "(Ljava/io/InputStream;Ljava/lang/String;)V", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitLabel(label1);
Label label7 = new Label();
methodVisitor.visitJumpInsn(GOTO, label7);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_FULL, 5, new Object[] {"java/lang/Object", Opcodes.TOP, "[Ljava/lang/String;", "java/io/InputStream", "java/io/InputStreamReader"}, 1, new Object[] {"java/lang/Exception"});
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitLabel(label7);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitTypeInsn(NEW, "java/io/LineNumberReader");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/io/LineNumberReader", "<init>", "(Ljava/io/Reader;)V", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitTypeInsn(NEW, "org/hsqldb/lib/LineGroupReader");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/hsqldb/lib/LineGroupReader", "<init>", "(Ljava/io/LineNumberReader;[Ljava/lang/String;)V", false);
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/LineGroupReader", "getAsMap", "()Lorg/hsqldb/lib/HashMappedList;", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/hsqldb/dbinfo/DatabaseInformationFull", "statementMap", "Lorg/hsqldb/lib/HashMappedList;");
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/hsqldb/lib/LineGroupReader", "close", "()V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitInsn(MONITOREXIT);
methodVisitor.visitLabel(label4);
Label label8 = new Label();
methodVisitor.visitJumpInsn(GOTO, label8);
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_FULL, 1, new Object[] {"java/lang/Object"}, 1, new Object[] {"java/lang/Throwable"});
methodVisitor.visitVarInsn(ASTORE, 7);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitInsn(MONITOREXIT);
methodVisitor.visitLabel(label6);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label8);
methodVisitor.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(4, 8);
methodVisitor.visitEnd();
}
classWriter.visitEnd();

return classWriter.toByteArray();
}
}
