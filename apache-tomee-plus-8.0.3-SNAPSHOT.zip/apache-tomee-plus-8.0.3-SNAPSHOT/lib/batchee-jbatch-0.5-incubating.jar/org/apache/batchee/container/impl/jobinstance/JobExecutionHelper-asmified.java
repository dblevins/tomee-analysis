package asm.org.apache.batchee.container.impl.jobinstance;
import org.objectweb.asm.AnnotationVisitor;
import org.objectweb.asm.Attribute;
import org.objectweb.asm.ClassReader;
import org.objectweb.asm.ClassWriter;
import org.objectweb.asm.ConstantDynamic;
import org.objectweb.asm.FieldVisitor;
import org.objectweb.asm.Handle;
import org.objectweb.asm.Label;
import org.objectweb.asm.MethodVisitor;
import org.objectweb.asm.Opcodes;
import org.objectweb.asm.RecordComponentVisitor;
import org.objectweb.asm.Type;
import org.objectweb.asm.TypePath;
public class JobExecutionHelperDump implements Opcodes {

public static byte[] dump () throws Exception {

ClassWriter classWriter = new ClassWriter(0);
FieldVisitor fieldVisitor;
RecordComponentVisitor recordComponentVisitor;
MethodVisitor methodVisitor;
AnnotationVisitor annotationVisitor0;

classWriter.visit(V1_6, ACC_PUBLIC | ACC_SUPER, "org/apache/batchee/container/impl/jobinstance/JobExecutionHelper", null, "java/lang/Object", null);

{
methodVisitor = classWriter.visitMethod(ACC_PRIVATE, "<init>", "()V", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/Object", "<init>", "()V", false);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(1, 1);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PRIVATE | ACC_STATIC, "getResolvedJobNavigator", "(Ljava/lang/String;Ljava/util/Properties;Z)Lorg/apache/batchee/container/navigator/ModelNavigator;", "(Ljava/lang/String;Ljava/util/Properties;Z)Lorg/apache/batchee/container/navigator/ModelNavigator<Lorg/apache/batchee/jaxb/JSLJob;>;", null);
methodVisitor.visitCode();
methodVisitor.visitTypeInsn(NEW, "org/apache/batchee/container/jsl/JobModelResolver");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/batchee/container/jsl/JobModelResolver", "<init>", "()V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/batchee/container/jsl/JobModelResolver", "resolveModel", "(Ljava/lang/String;)Lorg/apache/batchee/jaxb/JSLJob;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ILOAD, 2);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/batchee/container/modelresolver/PropertyResolverFactory", "createJobPropertyResolver", "(Z)Lorg/apache/batchee/container/modelresolver/PropertyResolver;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/batchee/container/modelresolver/PropertyResolver", "substituteProperties", "(Ljava/lang/Object;Ljava/util/Properties;)Ljava/lang/Object;", true);
methodVisitor.visitInsn(POP);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/batchee/container/navigator/NavigatorFactory", "createJobNavigator", "(Lorg/apache/batchee/jaxb/JSLJob;)Lorg/apache/batchee/container/navigator/JobNavigator;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(3, 5);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PRIVATE | ACC_STATIC, "getResolvedJobNavigator", "(Lorg/apache/batchee/jaxb/JSLJob;Ljava/util/Properties;Z)Lorg/apache/batchee/container/navigator/ModelNavigator;", "(Lorg/apache/batchee/jaxb/JSLJob;Ljava/util/Properties;Z)Lorg/apache/batchee/container/navigator/ModelNavigator<Lorg/apache/batchee/jaxb/JSLJob;>;", null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ILOAD, 2);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/batchee/container/modelresolver/PropertyResolverFactory", "createJobPropertyResolver", "(Z)Lorg/apache/batchee/container/modelresolver/PropertyResolver;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/batchee/container/modelresolver/PropertyResolver", "substituteProperties", "(Ljava/lang/Object;Ljava/util/Properties;)Ljava/lang/Object;", true);
methodVisitor.visitInsn(POP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/batchee/container/navigator/NavigatorFactory", "createJobNavigator", "(Lorg/apache/batchee/jaxb/JSLJob;)Lorg/apache/batchee/container/navigator/JobNavigator;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(3, 4);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PRIVATE | ACC_STATIC, "getJobContext", "(Lorg/apache/batchee/container/navigator/ModelNavigator;)Lorg/apache/batchee/container/impl/JobContextImpl;", "(Lorg/apache/batchee/container/navigator/ModelNavigator<Lorg/apache/batchee/jaxb/JSLJob;>;)Lorg/apache/batchee/container/impl/JobContextImpl;", null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/batchee/container/navigator/ModelNavigator", "getRootModelElement", "()Ljava/lang/Object;", true);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/batchee/container/navigator/ModelNavigator", "getRootModelElement", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/apache/batchee/jaxb/JSLJob");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/batchee/jaxb/JSLJob", "getProperties", "()Lorg/apache/batchee/jaxb/JSLProperties;", false);
methodVisitor.visitVarInsn(ASTORE, 1);
Label label1 = new Label();
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitTypeInsn(NEW, "org/apache/batchee/jaxb/JSLProperties");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/batchee/jaxb/JSLProperties", "<init>", "()V", false);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/apache/batchee/jaxb/JSLProperties"}, 0, null);
methodVisitor.visitTypeInsn(NEW, "org/apache/batchee/container/impl/JobContextImpl");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/batchee/container/impl/JobContextImpl", "<init>", "(Lorg/apache/batchee/container/navigator/ModelNavigator;Lorg/apache/batchee/jaxb/JSLProperties;)V", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(4, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PRIVATE | ACC_STATIC, "getNewJobInstance", "(Lorg/apache/batchee/container/services/ServicesManager;Ljava/lang/String;Ljava/lang/String;)Ljavax/batch/runtime/JobInstance;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitLdcInsn(Type.getType("Lorg/apache/batchee/spi/PersistenceManagerService;"));
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/batchee/container/services/ServicesManager", "service", "(Ljava/lang/Class;)Lorg/apache/batchee/spi/BatchService;", false);
methodVisitor.visitTypeInsn(CHECKCAST, "org/apache/batchee/spi/PersistenceManagerService");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/batchee/spi/PersistenceManagerService", "createJobInstance", "(Ljava/lang/String;Ljava/lang/String;)Ljavax/batch/runtime/JobInstance;", true);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(3, 3);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PRIVATE | ACC_STATIC, "getNewSubJobInstance", "(Lorg/apache/batchee/container/services/ServicesManager;Ljava/lang/String;)Ljavax/batch/runtime/JobInstance;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitLdcInsn(Type.getType("Lorg/apache/batchee/spi/PersistenceManagerService;"));
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/batchee/container/services/ServicesManager", "service", "(Ljava/lang/Class;)Lorg/apache/batchee/spi/BatchService;", false);
methodVisitor.visitTypeInsn(CHECKCAST, "org/apache/batchee/spi/PersistenceManagerService");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/batchee/spi/PersistenceManagerService", "createSubJobInstance", "(Ljava/lang/String;)Ljavax/batch/runtime/JobInstance;", true);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(2, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PRIVATE | ACC_STATIC, "createNewJobStatus", "(Lorg/apache/batchee/container/services/JobStatusManagerService;Ljavax/batch/runtime/JobInstance;)Lorg/apache/batchee/container/status/JobStatus;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "javax/batch/runtime/JobInstance", "getInstanceId", "()J", true);
methodVisitor.visitVarInsn(LSTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(LLOAD, 2);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/batchee/container/services/JobStatusManagerService", "createJobStatus", "(J)Lorg/apache/batchee/container/status/JobStatus;", true);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/batchee/container/status/JobStatus", "setJobInstance", "(Ljavax/batch/runtime/JobInstance;)V", false);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(3, 5);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PRIVATE | ACC_STATIC, "validateRestartableFalseJobsDoNotRestart", "(Lorg/apache/batchee/jaxb/JSLJob;)V", null, new String[] { "javax/batch/operations/JobRestartException" });
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/batchee/jaxb/JSLJob", "getRestartable", "()Ljava/lang/String;", false);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/batchee/jaxb/JSLJob", "getRestartable", "()Ljava/lang/String;", false);
methodVisitor.visitLdcInsn("false");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equalsIgnoreCase", "(Ljava/lang/String;)Z", false);
methodVisitor.visitJumpInsn(IFEQ, label0);
methodVisitor.visitTypeInsn(NEW, "javax/batch/operations/JobRestartException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("Job Restartable attribute is false, Job cannot be restarted.");
methodVisitor.visitMethodInsn(INVOKESPECIAL, "javax/batch/operations/JobRestartException", "<init>", "(Ljava/lang/String;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(3, 1);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC | ACC_STATIC, "startJob", "(Lorg/apache/batchee/container/services/ServicesManager;Ljava/lang/String;Ljava/util/Properties;)Lorg/apache/batchee/container/impl/jobinstance/RuntimeJobExecution;", null, new String[] { "javax/batch/operations/JobStartException" });
methodVisitor.visitCode();
methodVisitor.visitTypeInsn(NEW, "org/apache/batchee/container/jsl/JobModelResolver");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/batchee/container/jsl/JobModelResolver", "<init>", "()V", false);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/batchee/container/jsl/JobModelResolver", "resolveModel", "(Ljava/lang/String;)Lorg/apache/batchee/jaxb/JSLJob;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/batchee/container/impl/jobinstance/JobExecutionHelper", "getResolvedJobNavigator", "(Lorg/apache/batchee/jaxb/JSLJob;Ljava/util/Properties;Z)Lorg/apache/batchee/container/navigator/ModelNavigator;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/batchee/container/impl/jobinstance/JobExecutionHelper", "getJobContext", "(Lorg/apache/batchee/container/navigator/ModelNavigator;)Lorg/apache/batchee/container/impl/JobContextImpl;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/batchee/container/navigator/ModelNavigator", "getRootModelElement", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/apache/batchee/jaxb/JSLJob");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/batchee/jaxb/JSLJob", "getId", "()Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/batchee/container/impl/jobinstance/JobExecutionHelper", "getNewJobInstance", "(Lorg/apache/batchee/container/services/ServicesManager;Ljava/lang/String;Ljava/lang/String;)Ljavax/batch/runtime/JobInstance;", false);
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitLdcInsn(Type.getType("Lorg/apache/batchee/spi/PersistenceManagerService;"));
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/batchee/container/services/ServicesManager", "service", "(Ljava/lang/Class;)Lorg/apache/batchee/spi/BatchService;", false);
methodVisitor.visitTypeInsn(CHECKCAST, "org/apache/batchee/spi/PersistenceManagerService");
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/batchee/container/impl/JobContextImpl", "getBatchStatus", "()Ljavax/batch/runtime/BatchStatus;", false);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/batchee/spi/PersistenceManagerService", "createJobExecution", "(Ljavax/batch/runtime/JobInstance;Ljava/util/Properties;Ljavax/batch/runtime/BatchStatus;)Lorg/apache/batchee/container/impl/jobinstance/RuntimeJobExecution;", true);
methodVisitor.visitVarInsn(ASTORE, 7);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/batchee/container/impl/jobinstance/RuntimeJobExecution", "prepareForExecution", "(Lorg/apache/batchee/container/impl/JobContextImpl;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitLdcInsn(Type.getType("Lorg/apache/batchee/container/services/JobStatusManagerService;"));
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/batchee/container/services/ServicesManager", "service", "(Ljava/lang/Class;)Lorg/apache/batchee/spi/BatchService;", false);
methodVisitor.visitTypeInsn(CHECKCAST, "org/apache/batchee/container/services/JobStatusManagerService");
methodVisitor.visitVarInsn(ASTORE, 8);
methodVisitor.visitVarInsn(ALOAD, 8);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/batchee/container/impl/jobinstance/JobExecutionHelper", "createNewJobStatus", "(Lorg/apache/batchee/container/services/JobStatusManagerService;Ljavax/batch/runtime/JobInstance;)Lorg/apache/batchee/container/status/JobStatus;", false);
methodVisitor.visitVarInsn(ASTORE, 9);
methodVisitor.visitVarInsn(ALOAD, 8);
methodVisitor.visitVarInsn(ALOAD, 9);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/batchee/container/services/JobStatusManagerService", "updateJobStatus", "(Lorg/apache/batchee/container/status/JobStatus;)V", true);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(4, 10);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC | ACC_STATIC, "startFlowInSplit", "(Lorg/apache/batchee/container/services/ServicesManager;Lorg/apache/batchee/jaxb/JSLJob;)Lorg/apache/batchee/container/impl/jobinstance/RuntimeFlowInSplitExecution;", null, new String[] { "javax/batch/operations/JobStartException" });
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/batchee/container/impl/jobinstance/JobExecutionHelper", "getResolvedJobNavigator", "(Lorg/apache/batchee/jaxb/JSLJob;Ljava/util/Properties;Z)Lorg/apache/batchee/container/navigator/ModelNavigator;", false);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/batchee/container/impl/jobinstance/JobExecutionHelper", "getJobContext", "(Lorg/apache/batchee/container/navigator/ModelNavigator;)Lorg/apache/batchee/container/impl/JobContextImpl;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/batchee/container/navigator/ModelNavigator", "getRootModelElement", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/apache/batchee/jaxb/JSLJob");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/batchee/jaxb/JSLJob", "getId", "()Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/batchee/container/impl/jobinstance/JobExecutionHelper", "getNewSubJobInstance", "(Lorg/apache/batchee/container/services/ServicesManager;Ljava/lang/String;)Ljavax/batch/runtime/JobInstance;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitLdcInsn(Type.getType("Lorg/apache/batchee/spi/PersistenceManagerService;"));
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/batchee/container/services/ServicesManager", "service", "(Ljava/lang/Class;)Lorg/apache/batchee/spi/BatchService;", false);
methodVisitor.visitTypeInsn(CHECKCAST, "org/apache/batchee/spi/PersistenceManagerService");
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/batchee/container/impl/JobContextImpl", "getBatchStatus", "()Ljavax/batch/runtime/BatchStatus;", false);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/batchee/spi/PersistenceManagerService", "createFlowInSplitExecution", "(Ljavax/batch/runtime/JobInstance;Ljavax/batch/runtime/BatchStatus;)Lorg/apache/batchee/container/impl/jobinstance/RuntimeFlowInSplitExecution;", true);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/batchee/container/impl/jobinstance/RuntimeFlowInSplitExecution", "prepareForExecution", "(Lorg/apache/batchee/container/impl/JobContextImpl;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitLdcInsn(Type.getType("Lorg/apache/batchee/container/services/JobStatusManagerService;"));
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/batchee/container/services/ServicesManager", "service", "(Ljava/lang/Class;)Lorg/apache/batchee/spi/BatchService;", false);
methodVisitor.visitTypeInsn(CHECKCAST, "org/apache/batchee/container/services/JobStatusManagerService");
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/batchee/container/impl/jobinstance/JobExecutionHelper", "createNewJobStatus", "(Lorg/apache/batchee/container/services/JobStatusManagerService;Ljavax/batch/runtime/JobInstance;)Lorg/apache/batchee/container/status/JobStatus;", false);
methodVisitor.visitVarInsn(ASTORE, 7);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/batchee/container/services/JobStatusManagerService", "updateJobStatus", "(Lorg/apache/batchee/container/status/JobStatus;)V", true);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(3, 8);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC | ACC_STATIC, "startPartition", "(Lorg/apache/batchee/container/services/ServicesManager;Lorg/apache/batchee/jaxb/JSLJob;Ljava/util/Properties;)Lorg/apache/batchee/container/impl/jobinstance/RuntimeJobExecution;", null, new String[] { "javax/batch/operations/JobStartException" });
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/batchee/container/impl/jobinstance/JobExecutionHelper", "getResolvedJobNavigator", "(Lorg/apache/batchee/jaxb/JSLJob;Ljava/util/Properties;Z)Lorg/apache/batchee/container/navigator/ModelNavigator;", false);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/batchee/container/impl/jobinstance/JobExecutionHelper", "getJobContext", "(Lorg/apache/batchee/container/navigator/ModelNavigator;)Lorg/apache/batchee/container/impl/JobContextImpl;", false);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/batchee/container/navigator/ModelNavigator", "getRootModelElement", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/apache/batchee/jaxb/JSLJob");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/batchee/jaxb/JSLJob", "getId", "()Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/batchee/container/impl/jobinstance/JobExecutionHelper", "getNewSubJobInstance", "(Lorg/apache/batchee/container/services/ServicesManager;Ljava/lang/String;)Ljavax/batch/runtime/JobInstance;", false);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitLdcInsn(Type.getType("Lorg/apache/batchee/spi/PersistenceManagerService;"));
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/batchee/container/services/ServicesManager", "service", "(Ljava/lang/Class;)Lorg/apache/batchee/spi/BatchService;", false);
methodVisitor.visitTypeInsn(CHECKCAST, "org/apache/batchee/spi/PersistenceManagerService");
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/batchee/container/impl/JobContextImpl", "getBatchStatus", "()Ljavax/batch/runtime/BatchStatus;", false);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/batchee/spi/PersistenceManagerService", "createJobExecution", "(Ljavax/batch/runtime/JobInstance;Ljava/util/Properties;Ljavax/batch/runtime/BatchStatus;)Lorg/apache/batchee/container/impl/jobinstance/RuntimeJobExecution;", true);
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/batchee/container/impl/jobinstance/RuntimeJobExecution", "prepareForExecution", "(Lorg/apache/batchee/container/impl/JobContextImpl;)V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitLdcInsn(Type.getType("Lorg/apache/batchee/container/services/JobStatusManagerService;"));
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/batchee/container/services/ServicesManager", "service", "(Ljava/lang/Class;)Lorg/apache/batchee/spi/BatchService;", false);
methodVisitor.visitTypeInsn(CHECKCAST, "org/apache/batchee/container/services/JobStatusManagerService");
methodVisitor.visitVarInsn(ASTORE, 7);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/batchee/container/impl/jobinstance/JobExecutionHelper", "createNewJobStatus", "(Lorg/apache/batchee/container/services/JobStatusManagerService;Ljavax/batch/runtime/JobInstance;)Lorg/apache/batchee/container/status/JobStatus;", false);
methodVisitor.visitVarInsn(ASTORE, 8);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitVarInsn(ALOAD, 8);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/batchee/container/services/JobStatusManagerService", "updateJobStatus", "(Lorg/apache/batchee/container/status/JobStatus;)V", true);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(4, 9);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PRIVATE | ACC_STATIC, "validateJobInstanceNotCompleteOrAbandonded", "(Lorg/apache/batchee/container/status/JobStatus;)V", null, new String[] { "javax/batch/operations/JobRestartException", "javax/batch/operations/JobExecutionAlreadyCompleteException" });
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/batchee/container/status/JobStatus", "getBatchStatus", "()Ljavax/batch/runtime/BatchStatus;", false);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label0);
methodVisitor.visitTypeInsn(NEW, "java/lang/IllegalStateException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("On restart, we didn't find an earlier batch status.");
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/IllegalStateException", "<init>", "(Ljava/lang/String;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/batchee/container/status/JobStatus", "getBatchStatus", "()Ljavax/batch/runtime/BatchStatus;", false);
methodVisitor.visitFieldInsn(GETSTATIC, "javax/batch/runtime/BatchStatus", "COMPLETED", "Ljavax/batch/runtime/BatchStatus;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "javax/batch/runtime/BatchStatus", "equals", "(Ljava/lang/Object;)Z", false);
Label label1 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label1);
methodVisitor.visitTypeInsn(NEW, "javax/batch/operations/JobExecutionAlreadyCompleteException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitLdcInsn("Already completed job instance = ");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/batchee/container/status/JobStatus", "getJobInstanceId", "()J", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(J)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "javax/batch/operations/JobExecutionAlreadyCompleteException", "<init>", "(Ljava/lang/String;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/batchee/container/status/JobStatus", "getBatchStatus", "()Ljavax/batch/runtime/BatchStatus;", false);
methodVisitor.visitFieldInsn(GETSTATIC, "javax/batch/runtime/BatchStatus", "ABANDONED", "Ljavax/batch/runtime/BatchStatus;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "javax/batch/runtime/BatchStatus", "equals", "(Ljava/lang/Object;)Z", false);
Label label2 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label2);
methodVisitor.visitTypeInsn(NEW, "javax/batch/operations/JobRestartException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitLdcInsn("Abandoned job instance = ");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/batchee/container/status/JobStatus", "getJobInstanceId", "()J", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(J)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "javax/batch/operations/JobRestartException", "<init>", "(Ljava/lang/String;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(5, 1);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PRIVATE | ACC_STATIC, "validateJobExecutionIsMostRecent", "(Lorg/apache/batchee/spi/PersistenceManagerService;JJ)V", null, new String[] { "javax/batch/operations/JobExecutionNotMostRecentException" });
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(LLOAD, 1);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/batchee/spi/PersistenceManagerService", "getMostRecentExecutionId", "(J)J", true);
methodVisitor.visitVarInsn(LSTORE, 5);
methodVisitor.visitVarInsn(LLOAD, 5);
methodVisitor.visitVarInsn(LLOAD, 3);
methodVisitor.visitInsn(LCMP);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label0);
methodVisitor.visitTypeInsn(NEW, "javax/batch/operations/JobExecutionNotMostRecentException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitLdcInsn("ExecutionId: ");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(LLOAD, 3);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(J)Ljava/lang/StringBuilder;", false);
methodVisitor.visitLdcInsn(" is not the most recent execution.");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "javax/batch/operations/JobExecutionNotMostRecentException", "<init>", "(Ljava/lang/String;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.LONG}, 0, null);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(5, 7);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC | ACC_STATIC, "restartPartition", "(Lorg/apache/batchee/container/services/ServicesManager;JLorg/apache/batchee/jaxb/JSLJob;Ljava/util/Properties;)Lorg/apache/batchee/container/impl/jobinstance/RuntimeJobExecution;", null, new String[] { "javax/batch/operations/JobRestartException", "javax/batch/operations/JobExecutionAlreadyCompleteException", "javax/batch/operations/JobExecutionNotMostRecentException", "javax/batch/operations/NoSuchJobExecutionException" });
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(LLOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/batchee/container/impl/jobinstance/JobExecutionHelper", "restartExecution", "(Lorg/apache/batchee/container/services/ServicesManager;JLorg/apache/batchee/jaxb/JSLJob;Ljava/util/Properties;ZZ)Lorg/apache/batchee/container/impl/jobinstance/RuntimeJobExecution;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(7, 5);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC | ACC_STATIC, "restartFlowInSplit", "(Lorg/apache/batchee/container/services/ServicesManager;JLorg/apache/batchee/jaxb/JSLJob;)Lorg/apache/batchee/container/impl/jobinstance/RuntimeFlowInSplitExecution;", null, new String[] { "javax/batch/operations/JobRestartException", "javax/batch/operations/JobExecutionAlreadyCompleteException", "javax/batch/operations/JobExecutionNotMostRecentException", "javax/batch/operations/NoSuchJobExecutionException" });
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(LLOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/batchee/container/impl/jobinstance/JobExecutionHelper", "restartExecution", "(Lorg/apache/batchee/container/services/ServicesManager;JLorg/apache/batchee/jaxb/JSLJob;Ljava/util/Properties;ZZ)Lorg/apache/batchee/container/impl/jobinstance/RuntimeJobExecution;", false);
methodVisitor.visitTypeInsn(CHECKCAST, "org/apache/batchee/container/impl/jobinstance/RuntimeFlowInSplitExecution");
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(7, 4);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC | ACC_STATIC, "restartJob", "(Lorg/apache/batchee/container/services/ServicesManager;JLjava/util/Properties;)Lorg/apache/batchee/container/impl/jobinstance/RuntimeJobExecution;", null, new String[] { "javax/batch/operations/JobRestartException", "javax/batch/operations/JobExecutionAlreadyCompleteException", "javax/batch/operations/JobExecutionNotMostRecentException", "javax/batch/operations/NoSuchJobExecutionException" });
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(LLOAD, 1);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/batchee/container/impl/jobinstance/JobExecutionHelper", "restartExecution", "(Lorg/apache/batchee/container/services/ServicesManager;JLorg/apache/batchee/jaxb/JSLJob;Ljava/util/Properties;ZZ)Lorg/apache/batchee/container/impl/jobinstance/RuntimeJobExecution;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(7, 4);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PRIVATE | ACC_STATIC, "restartExecution", "(Lorg/apache/batchee/container/services/ServicesManager;JLorg/apache/batchee/jaxb/JSLJob;Ljava/util/Properties;ZZ)Lorg/apache/batchee/container/impl/jobinstance/RuntimeJobExecution;", null, new String[] { "javax/batch/operations/JobRestartException", "javax/batch/operations/JobExecutionAlreadyCompleteException", "javax/batch/operations/JobExecutionNotMostRecentException", "javax/batch/operations/NoSuchJobExecutionException" });
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitLdcInsn(Type.getType("Lorg/apache/batchee/spi/PersistenceManagerService;"));
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/batchee/container/services/ServicesManager", "service", "(Ljava/lang/Class;)Lorg/apache/batchee/spi/BatchService;", false);
methodVisitor.visitTypeInsn(CHECKCAST, "org/apache/batchee/spi/PersistenceManagerService");
methodVisitor.visitVarInsn(ASTORE, 7);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitLdcInsn(Type.getType("Lorg/apache/batchee/container/services/JobStatusManagerService;"));
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/batchee/container/services/ServicesManager", "service", "(Ljava/lang/Class;)Lorg/apache/batchee/spi/BatchService;", false);
methodVisitor.visitTypeInsn(CHECKCAST, "org/apache/batchee/container/services/JobStatusManagerService");
methodVisitor.visitVarInsn(ASTORE, 8);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitVarInsn(LLOAD, 1);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/batchee/spi/PersistenceManagerService", "getJobInstanceIdByExecutionId", "(J)J", true);
methodVisitor.visitVarInsn(LSTORE, 9);
methodVisitor.visitVarInsn(ALOAD, 8);
methodVisitor.visitVarInsn(LLOAD, 9);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/batchee/container/services/JobStatusManagerService", "getJobStatus", "(J)Lorg/apache/batchee/container/status/JobStatus;", true);
methodVisitor.visitVarInsn(ASTORE, 11);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitVarInsn(LLOAD, 9);
methodVisitor.visitVarInsn(LLOAD, 1);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/batchee/container/impl/jobinstance/JobExecutionHelper", "validateJobExecutionIsMostRecent", "(Lorg/apache/batchee/spi/PersistenceManagerService;JJ)V", false);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/batchee/container/impl/jobinstance/JobExecutionHelper", "validateJobInstanceNotCompleteOrAbandonded", "(Lorg/apache/batchee/container/status/JobStatus;)V", false);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/batchee/container/status/JobStatus", "getJobInstance", "()Lorg/apache/batchee/container/impl/JobInstanceImpl;", false);
methodVisitor.visitVarInsn(ASTORE, 12);
methodVisitor.visitVarInsn(ALOAD, 3);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label0);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/batchee/container/impl/JobInstanceImpl", "getJobXML", "()Ljava/lang/String;", false);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitVarInsn(ILOAD, 5);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/batchee/container/impl/jobinstance/JobExecutionHelper", "getResolvedJobNavigator", "(Ljava/lang/String;Ljava/util/Properties;Z)Lorg/apache/batchee/container/navigator/ModelNavigator;", false);
methodVisitor.visitVarInsn(ASTORE, 13);
Label label1 = new Label();
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_FULL, 11, new Object[] {"org/apache/batchee/container/services/ServicesManager", Opcodes.LONG, "org/apache/batchee/jaxb/JSLJob", "java/util/Properties", Opcodes.INTEGER, Opcodes.INTEGER, "org/apache/batchee/spi/PersistenceManagerService", "org/apache/batchee/container/services/JobStatusManagerService", Opcodes.LONG, "org/apache/batchee/container/status/JobStatus", "org/apache/batchee/container/impl/JobInstanceImpl"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitVarInsn(ILOAD, 5);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/batchee/container/impl/jobinstance/JobExecutionHelper", "getResolvedJobNavigator", "(Lorg/apache/batchee/jaxb/JSLJob;Ljava/util/Properties;Z)Lorg/apache/batchee/container/navigator/ModelNavigator;", false);
methodVisitor.visitVarInsn(ASTORE, 13);
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/apache/batchee/container/navigator/ModelNavigator"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/batchee/container/navigator/ModelNavigator", "getRootModelElement", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/apache/batchee/jaxb/JSLJob");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/batchee/container/impl/jobinstance/JobExecutionHelper", "validateRestartableFalseJobsDoNotRestart", "(Lorg/apache/batchee/jaxb/JSLJob;)V", false);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/batchee/container/impl/jobinstance/JobExecutionHelper", "getJobContext", "(Lorg/apache/batchee/container/navigator/ModelNavigator;)Lorg/apache/batchee/container/impl/JobContextImpl;", false);
methodVisitor.visitVarInsn(ASTORE, 14);
methodVisitor.visitVarInsn(ILOAD, 6);
Label label2 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label2);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/batchee/container/impl/JobContextImpl", "getBatchStatus", "()Ljavax/batch/runtime/BatchStatus;", false);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/batchee/spi/PersistenceManagerService", "createFlowInSplitExecution", "(Ljavax/batch/runtime/JobInstance;Ljavax/batch/runtime/BatchStatus;)Lorg/apache/batchee/container/impl/jobinstance/RuntimeFlowInSplitExecution;", true);
methodVisitor.visitVarInsn(ASTORE, 15);
Label label3 = new Label();
methodVisitor.visitJumpInsn(GOTO, label3);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/apache/batchee/container/impl/JobContextImpl"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/batchee/container/impl/JobContextImpl", "getBatchStatus", "()Ljavax/batch/runtime/BatchStatus;", false);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/batchee/spi/PersistenceManagerService", "createJobExecution", "(Ljavax/batch/runtime/JobInstance;Ljava/util/Properties;Ljavax/batch/runtime/BatchStatus;)Lorg/apache/batchee/container/impl/jobinstance/RuntimeJobExecution;", true);
methodVisitor.visitVarInsn(ASTORE, 15);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/apache/batchee/container/impl/jobinstance/RuntimeJobExecution"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/batchee/container/status/JobStatus", "getRestartOn", "()Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/batchee/container/impl/jobinstance/RuntimeJobExecution", "prepareForExecution", "(Lorg/apache/batchee/container/impl/JobContextImpl;Ljava/lang/String;)V", false);
methodVisitor.visitVarInsn(ALOAD, 8);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/batchee/container/impl/JobInstanceImpl", "getInstanceId", "()J", false);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/batchee/container/impl/jobinstance/RuntimeJobExecution", "getExecutionId", "()J", false);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/batchee/container/services/JobStatusManagerService", "updateJobStatusWithNewExecution", "(JJ)V", true);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(5, 16);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC | ACC_STATIC, "getPersistedJobOperatorJobExecution", "(Lorg/apache/batchee/spi/PersistenceManagerService;J)Lorg/apache/batchee/container/services/InternalJobExecution;", null, new String[] { "javax/batch/operations/NoSuchJobExecutionException" });
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(LLOAD, 1);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/batchee/spi/PersistenceManagerService", "jobOperatorGetJobExecution", "(J)Lorg/apache/batchee/container/services/InternalJobExecution;", true);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(3, 3);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC | ACC_STATIC, "getJobInstance", "(Lorg/apache/batchee/container/services/JobStatusManagerService;J)Ljavax/batch/runtime/JobInstance;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(LLOAD, 1);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/batchee/container/services/JobStatusManagerService", "getJobStatusFromExecutionId", "(J)Lorg/apache/batchee/container/status/JobStatus;", true);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/batchee/container/status/JobStatus", "getJobInstance", "()Lorg/apache/batchee/container/impl/JobInstanceImpl;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(3, 3);
methodVisitor.visitEnd();
}
classWriter.visitEnd();

return classWriter.toByteArray();
}
}
