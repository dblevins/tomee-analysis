package asm.org.apache.johnzon.jsonb;
import org.objectweb.asm.AnnotationVisitor;
import org.objectweb.asm.Attribute;
import org.objectweb.asm.ClassReader;
import org.objectweb.asm.ClassWriter;
import org.objectweb.asm.ConstantDynamic;
import org.objectweb.asm.FieldVisitor;
import org.objectweb.asm.Handle;
import org.objectweb.asm.Label;
import org.objectweb.asm.MethodVisitor;
import org.objectweb.asm.Opcodes;
import org.objectweb.asm.RecordComponentVisitor;
import org.objectweb.asm.Type;
import org.objectweb.asm.TypePath;
public class JsonbAccessMode$ReaderConvertersDump implements Opcodes {

public static byte[] dump () throws Exception {

ClassWriter classWriter = new ClassWriter(0);
FieldVisitor fieldVisitor;
RecordComponentVisitor recordComponentVisitor;
MethodVisitor methodVisitor;
AnnotationVisitor annotationVisitor0;

classWriter.visit(V1_8, ACC_SUPER, "org/apache/johnzon/jsonb/JsonbAccessMode$ReaderConverters", null, "java/lang/Object", null);

classWriter.visitInnerClass("org/apache/johnzon/jsonb/JsonbAccessMode$ReaderConverters", "org/apache/johnzon/jsonb/JsonbAccessMode", "ReaderConverters", ACC_PRIVATE);

classWriter.visitInnerClass("org/apache/johnzon/jsonb/JsonbAccessMode$ReaderConverters$1", null, null, 0);

classWriter.visitInnerClass("org/apache/johnzon/mapper/ObjectConverter$Reader", "org/apache/johnzon/mapper/ObjectConverter", "Reader", ACC_PUBLIC | ACC_STATIC | ACC_ABSTRACT | ACC_INTERFACE);

classWriter.visitInnerClass("org/apache/johnzon/mapper/access/AccessMode$DecoratedType", "org/apache/johnzon/mapper/access/AccessMode", "DecoratedType", ACC_PUBLIC | ACC_STATIC | ACC_ABSTRACT | ACC_INTERFACE);

classWriter.visitInnerClass("org/apache/johnzon/jsonb/spi/JohnzonAdapterFactory$Instance", "org/apache/johnzon/jsonb/spi/JohnzonAdapterFactory", "Instance", ACC_PUBLIC | ACC_STATIC | ACC_ABSTRACT | ACC_INTERFACE);

{
fieldVisitor = classWriter.visitField(ACC_PRIVATE, "converter", "Lorg/apache/johnzon/mapper/Adapter;", "Lorg/apache/johnzon/mapper/Adapter<**>;", null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE, "reader", "Lorg/apache/johnzon/mapper/ObjectConverter$Reader;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_FINAL | ACC_SYNTHETIC, "this$0", "Lorg/apache/johnzon/jsonb/JsonbAccessMode;", null, null);
fieldVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "<init>", "(Lorg/apache/johnzon/jsonb/JsonbAccessMode;Lorg/apache/johnzon/mapper/access/AccessMode$DecoratedType;)V", null, null);
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/lang/InstantiationException");
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/lang/IllegalAccessException");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/johnzon/jsonb/JsonbAccessMode$ReaderConverters", "this$0", "Lorg/apache/johnzon/jsonb/JsonbAccessMode;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/Object", "<init>", "()V", false);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/johnzon/mapper/access/AccessMode$DecoratedType", "getType", "()Ljava/lang/reflect/Type;", true);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/johnzon/jsonb/JsonbAccessMode", "access$600", "(Lorg/apache/johnzon/jsonb/JsonbAccessMode;Ljava/lang/reflect/Type;)Z", false);
methodVisitor.visitVarInsn(ISTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/johnzon/mapper/access/AccessMode$DecoratedType", "getType", "()Ljava/lang/reflect/Type;", true);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/johnzon/jsonb/JsonbAccessMode", "access$700", "(Lorg/apache/johnzon/jsonb/JsonbAccessMode;Ljava/lang/reflect/Type;)Z", false);
methodVisitor.visitVarInsn(ISTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/johnzon/mapper/access/AccessMode$DecoratedType", "getType", "()Ljava/lang/reflect/Type;", true);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/johnzon/jsonb/JsonbAccessMode", "access$800", "(Lorg/apache/johnzon/jsonb/JsonbAccessMode;Ljava/lang/reflect/Type;)Z", false);
methodVisitor.visitVarInsn(ISTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitLdcInsn(Type.getType("Ljavax/json/bind/annotation/JsonbTypeDeserializer;"));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/johnzon/mapper/access/AccessMode$DecoratedType", "getAnnotation", "(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "javax/json/bind/annotation/JsonbTypeDeserializer");
methodVisitor.visitVarInsn(ASTORE, 6);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitLdcInsn(Type.getType("Ljavax/json/bind/annotation/JsonbTypeAdapter;"));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/johnzon/mapper/access/AccessMode$DecoratedType", "getAnnotation", "(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "javax/json/bind/annotation/JsonbTypeAdapter");
methodVisitor.visitVarInsn(ASTORE, 7);
methodVisitor.visitVarInsn(ILOAD, 5);
Label label3 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/johnzon/mapper/access/AccessMode$DecoratedType", "getType", "()Ljava/lang/reflect/Type;", true);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/johnzon/jsonb/JsonbAccessMode", "access$900", "(Lorg/apache/johnzon/jsonb/JsonbAccessMode;Ljava/lang/reflect/Type;)Ljava/lang/Class;", false);
methodVisitor.visitLdcInsn(Type.getType("Ljavax/json/bind/annotation/JsonbTypeAdapter;"));
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getDeclaredAnnotation", "(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;", false);
methodVisitor.visitTypeInsn(CHECKCAST, "javax/json/bind/annotation/JsonbTypeAdapter");
Label label4 = new Label();
methodVisitor.visitJumpInsn(GOTO, label4);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_FULL, 8, new Object[] {"org/apache/johnzon/jsonb/JsonbAccessMode$ReaderConverters", "org/apache/johnzon/jsonb/JsonbAccessMode", "org/apache/johnzon/mapper/access/AccessMode$DecoratedType", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "javax/json/bind/annotation/JsonbTypeDeserializer", "javax/json/bind/annotation/JsonbTypeAdapter"}, 0, new Object[] {});
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"javax/json/bind/annotation/JsonbTypeAdapter"});
methodVisitor.visitVarInsn(ASTORE, 8);
methodVisitor.visitVarInsn(ILOAD, 4);
Label label5 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label5);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitLdcInsn(Type.getType("Ljavax/json/bind/annotation/JsonbDateFormat;"));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/johnzon/mapper/access/AccessMode$DecoratedType", "getAnnotation", "(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "javax/json/bind/annotation/JsonbDateFormat");
Label label6 = new Label();
methodVisitor.visitJumpInsn(GOTO, label6);
methodVisitor.visitLabel(label5);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"javax/json/bind/annotation/JsonbTypeAdapter"}, 0, null);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitLabel(label6);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"javax/json/bind/annotation/JsonbDateFormat"});
methodVisitor.visitVarInsn(ASTORE, 9);
methodVisitor.visitVarInsn(ILOAD, 3);
Label label7 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label7);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitLdcInsn(Type.getType("Ljavax/json/bind/annotation/JsonbNumberFormat;"));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/johnzon/mapper/access/AccessMode$DecoratedType", "getAnnotation", "(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "javax/json/bind/annotation/JsonbNumberFormat");
Label label8 = new Label();
methodVisitor.visitJumpInsn(GOTO, label8);
methodVisitor.visitLabel(label7);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"javax/json/bind/annotation/JsonbDateFormat"}, 0, null);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitLabel(label8);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"javax/json/bind/annotation/JsonbNumberFormat"});
methodVisitor.visitVarInsn(ASTORE, 10);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitLdcInsn(Type.getType("Lorg/apache/johnzon/mapper/JohnzonConverter;"));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/johnzon/mapper/access/AccessMode$DecoratedType", "getAnnotation", "(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/apache/johnzon/mapper/JohnzonConverter");
methodVisitor.visitVarInsn(ASTORE, 11);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitVarInsn(ALOAD, 9);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/johnzon/jsonb/JsonbAccessMode", "access$1000", "(Lorg/apache/johnzon/jsonb/JsonbAccessMode;Ljava/lang/Object;Ljavax/json/bind/annotation/JsonbTypeAdapter;Ljavax/json/bind/annotation/JsonbDateFormat;Ljavax/json/bind/annotation/JsonbNumberFormat;Lorg/apache/johnzon/mapper/JohnzonConverter;)V", false);
methodVisitor.visitVarInsn(ALOAD, 9);
Label label9 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label9);
methodVisitor.visitVarInsn(ILOAD, 4);
methodVisitor.visitJumpInsn(IFEQ, label9);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitLdcInsn(Type.getType("Ljavax/json/bind/annotation/JsonbDateFormat;"));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/johnzon/mapper/access/AccessMode$DecoratedType", "getClassOrPackageAnnotation", "(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "javax/json/bind/annotation/JsonbDateFormat");
methodVisitor.visitVarInsn(ASTORE, 9);
methodVisitor.visitLabel(label9);
methodVisitor.visitFrame(Opcodes.F_APPEND,2, new Object[] {"javax/json/bind/annotation/JsonbNumberFormat", "org/apache/johnzon/mapper/JohnzonConverter"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 10);
Label label10 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label10);
methodVisitor.visitVarInsn(ILOAD, 3);
methodVisitor.visitJumpInsn(IFEQ, label10);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitLdcInsn(Type.getType("Ljavax/json/bind/annotation/JsonbNumberFormat;"));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/johnzon/mapper/access/AccessMode$DecoratedType", "getClassOrPackageAnnotation", "(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "javax/json/bind/annotation/JsonbNumberFormat");
methodVisitor.visitVarInsn(ASTORE, 10);
methodVisitor.visitLabel(label10);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 7);
Label label11 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label11);
methodVisitor.visitVarInsn(ALOAD, 8);
methodVisitor.visitJumpInsn(IFNONNULL, label11);
methodVisitor.visitVarInsn(ALOAD, 9);
methodVisitor.visitJumpInsn(IFNONNULL, label11);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitJumpInsn(IFNONNULL, label11);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitJumpInsn(IFNONNULL, label11);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/johnzon/jsonb/JsonbAccessMode", "access$1100", "(Lorg/apache/johnzon/jsonb/JsonbAccessMode;)Ljava/util/Map;", false);
methodVisitor.visitTypeInsn(NEW, "org/apache/johnzon/mapper/internal/AdapterKey");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/johnzon/mapper/access/AccessMode$DecoratedType", "getType", "()Ljava/lang/reflect/Type;", true);
methodVisitor.visitLdcInsn(Type.getType("Ljava/lang/String;"));
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/johnzon/mapper/internal/AdapterKey", "<init>", "(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)V", false);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "get", "(Ljava/lang/Object;)Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "org/apache/johnzon/mapper/Adapter");
Label label12 = new Label();
methodVisitor.visitJumpInsn(GOTO, label12);
methodVisitor.visitLabel(label11);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"org/apache/johnzon/jsonb/JsonbAccessMode$ReaderConverters"});
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/johnzon/jsonb/JsonbAccessMode", "access$1200", "(Lorg/apache/johnzon/jsonb/JsonbAccessMode;)Lorg/apache/johnzon/core/Types;", false);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/johnzon/mapper/access/AccessMode$DecoratedType", "getType", "()Ljava/lang/reflect/Type;", true);
methodVisitor.visitVarInsn(ALOAD, 7);
Label label13 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label13);
methodVisitor.visitVarInsn(ALOAD, 7);
Label label14 = new Label();
methodVisitor.visitJumpInsn(GOTO, label14);
methodVisitor.visitLabel(label13);
methodVisitor.visitFrame(Opcodes.F_FULL, 12, new Object[] {"org/apache/johnzon/jsonb/JsonbAccessMode$ReaderConverters", "org/apache/johnzon/jsonb/JsonbAccessMode", "org/apache/johnzon/mapper/access/AccessMode$DecoratedType", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "javax/json/bind/annotation/JsonbTypeDeserializer", "javax/json/bind/annotation/JsonbTypeAdapter", "javax/json/bind/annotation/JsonbTypeAdapter", "javax/json/bind/annotation/JsonbDateFormat", "javax/json/bind/annotation/JsonbNumberFormat", "org/apache/johnzon/mapper/JohnzonConverter"}, 4, new Object[] {"org/apache/johnzon/jsonb/JsonbAccessMode$ReaderConverters", "org/apache/johnzon/jsonb/JsonbAccessMode", "org/apache/johnzon/core/Types", "java/lang/reflect/Type"});
methodVisitor.visitVarInsn(ALOAD, 8);
methodVisitor.visitLabel(label14);
methodVisitor.visitFrame(Opcodes.F_FULL, 12, new Object[] {"org/apache/johnzon/jsonb/JsonbAccessMode$ReaderConverters", "org/apache/johnzon/jsonb/JsonbAccessMode", "org/apache/johnzon/mapper/access/AccessMode$DecoratedType", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "javax/json/bind/annotation/JsonbTypeDeserializer", "javax/json/bind/annotation/JsonbTypeAdapter", "javax/json/bind/annotation/JsonbTypeAdapter", "javax/json/bind/annotation/JsonbDateFormat", "javax/json/bind/annotation/JsonbNumberFormat", "org/apache/johnzon/mapper/JohnzonConverter"}, 5, new Object[] {"org/apache/johnzon/jsonb/JsonbAccessMode$ReaderConverters", "org/apache/johnzon/jsonb/JsonbAccessMode", "org/apache/johnzon/core/Types", "java/lang/reflect/Type", "javax/json/bind/annotation/JsonbTypeAdapter"});
methodVisitor.visitVarInsn(ALOAD, 9);
methodVisitor.visitVarInsn(ALOAD, 10);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/johnzon/jsonb/JsonbAccessMode", "access$1300", "(Lorg/apache/johnzon/jsonb/JsonbAccessMode;Lorg/apache/johnzon/core/Types;Ljava/lang/reflect/Type;Ljavax/json/bind/annotation/JsonbTypeAdapter;Ljavax/json/bind/annotation/JsonbDateFormat;Ljavax/json/bind/annotation/JsonbNumberFormat;)Lorg/apache/johnzon/mapper/Adapter;", false);
methodVisitor.visitLabel(label12);
methodVisitor.visitFrame(Opcodes.F_FULL, 12, new Object[] {"org/apache/johnzon/jsonb/JsonbAccessMode$ReaderConverters", "org/apache/johnzon/jsonb/JsonbAccessMode", "org/apache/johnzon/mapper/access/AccessMode$DecoratedType", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "javax/json/bind/annotation/JsonbTypeDeserializer", "javax/json/bind/annotation/JsonbTypeAdapter", "javax/json/bind/annotation/JsonbTypeAdapter", "javax/json/bind/annotation/JsonbDateFormat", "javax/json/bind/annotation/JsonbNumberFormat", "org/apache/johnzon/mapper/JohnzonConverter"}, 2, new Object[] {"org/apache/johnzon/jsonb/JsonbAccessMode$ReaderConverters", "org/apache/johnzon/mapper/Adapter"});
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/johnzon/jsonb/JsonbAccessMode$ReaderConverters", "converter", "Lorg/apache/johnzon/mapper/Adapter;");
methodVisitor.visitVarInsn(ALOAD, 6);
Label label15 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label15);
methodVisitor.visitVarInsn(ALOAD, 6);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "javax/json/bind/annotation/JsonbTypeDeserializer", "value", "()Ljava/lang/Class;", true);
methodVisitor.visitVarInsn(ASTORE, 12);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/johnzon/jsonb/JsonbAccessMode", "access$1400", "(Lorg/apache/johnzon/jsonb/JsonbAccessMode;Ljava/lang/Class;)Lorg/apache/johnzon/jsonb/spi/JohnzonAdapterFactory$Instance;", false);
methodVisitor.visitVarInsn(ASTORE, 13);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/johnzon/jsonb/JsonbAccessMode", "access$1200", "(Lorg/apache/johnzon/jsonb/JsonbAccessMode;)Lorg/apache/johnzon/core/Types;", false);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitLdcInsn(Type.getType("Ljavax/json/bind/serializer/JsonbDeserializer;"));
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/johnzon/core/Types", "findParameterizedType", "(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/ParameterizedType;", false);
methodVisitor.visitVarInsn(ASTORE, 14);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/johnzon/jsonb/JsonbAccessMode", "access$1200", "(Lorg/apache/johnzon/jsonb/JsonbAccessMode;)Lorg/apache/johnzon/core/Types;", false);
methodVisitor.visitVarInsn(ALOAD, 14);
methodVisitor.visitLdcInsn(Type.getType("Ljavax/json/bind/serializer/JsonbDeserializer;"));
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/johnzon/core/Types", "findParamType", "(Ljava/lang/reflect/ParameterizedType;Ljava/lang/Class;)Ljava/lang/Class;", false);
methodVisitor.visitVarInsn(ASTORE, 15);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/johnzon/jsonb/JsonbAccessMode", "access$1500", "(Lorg/apache/johnzon/jsonb/JsonbAccessMode;)Ljava/util/Collection;", false);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/Collection", "add", "(Ljava/lang/Object;)Z", true);
methodVisitor.visitInsn(POP);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/johnzon/jsonb/JsonbAccessMode", "access$1600", "(Lorg/apache/johnzon/jsonb/JsonbAccessMode;)Ljava/util/function/Supplier;", false);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/function/Supplier", "get", "()Ljava/lang/Object;", true);
methodVisitor.visitTypeInsn(CHECKCAST, "javax/json/JsonBuilderFactory");
methodVisitor.visitVarInsn(ASTORE, 16);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/johnzon/jsonb/JsonbAccessMode", "access$1200", "(Lorg/apache/johnzon/jsonb/JsonbAccessMode;)Lorg/apache/johnzon/core/Types;", false);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitLdcInsn(Type.getType("Ljavax/json/bind/serializer/JsonbDeserializer;"));
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/johnzon/core/Types", "findParameterizedType", "(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/ParameterizedType;", false);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/lang/reflect/ParameterizedType", "getActualTypeArguments", "()[Ljava/lang/reflect/Type;", true);
methodVisitor.visitVarInsn(ASTORE, 17);
methodVisitor.visitVarInsn(ALOAD, 17);
methodVisitor.visitInsn(ARRAYLENGTH);
methodVisitor.visitInsn(ICONST_1);
Label label16 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPNE, label16);
methodVisitor.visitVarInsn(ALOAD, 17);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitJumpInsn(IFNULL, label16);
methodVisitor.visitVarInsn(ALOAD, 17);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(AALOAD);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/johnzon/mapper/access/AccessMode$DecoratedType", "getType", "()Ljava/lang/reflect/Type;", true);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Object", "equals", "(Ljava/lang/Object;)Z", false);
methodVisitor.visitJumpInsn(IFEQ, label16);
methodVisitor.visitInsn(ICONST_1);
Label label17 = new Label();
methodVisitor.visitJumpInsn(GOTO, label17);
methodVisitor.visitLabel(label16);
methodVisitor.visitFrame(Opcodes.F_FULL, 18, new Object[] {"org/apache/johnzon/jsonb/JsonbAccessMode$ReaderConverters", "org/apache/johnzon/jsonb/JsonbAccessMode", "org/apache/johnzon/mapper/access/AccessMode$DecoratedType", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "javax/json/bind/annotation/JsonbTypeDeserializer", "javax/json/bind/annotation/JsonbTypeAdapter", "javax/json/bind/annotation/JsonbTypeAdapter", "javax/json/bind/annotation/JsonbDateFormat", "javax/json/bind/annotation/JsonbNumberFormat", "org/apache/johnzon/mapper/JohnzonConverter", "java/lang/Class", "org/apache/johnzon/jsonb/spi/JohnzonAdapterFactory$Instance", "java/lang/reflect/ParameterizedType", "java/lang/Class", "javax/json/JsonBuilderFactory", "[Ljava/lang/reflect/Type;"}, 0, new Object[] {});
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitLabel(label17);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {Opcodes.INTEGER});
methodVisitor.visitVarInsn(ISTORE, 18);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitTypeInsn(NEW, "org/apache/johnzon/jsonb/JsonbAccessMode$ReaderConverters$1");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ILOAD, 18);
methodVisitor.visitVarInsn(ALOAD, 13);
methodVisitor.visitVarInsn(ALOAD, 15);
methodVisitor.visitVarInsn(ALOAD, 16);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/johnzon/jsonb/JsonbAccessMode$ReaderConverters$1", "<init>", "(Lorg/apache/johnzon/jsonb/JsonbAccessMode$ReaderConverters;Lorg/apache/johnzon/jsonb/JsonbAccessMode;ZLorg/apache/johnzon/jsonb/spi/JohnzonAdapterFactory$Instance;Ljava/lang/Class;Ljavax/json/JsonBuilderFactory;)V", false);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/johnzon/jsonb/JsonbAccessMode$ReaderConverters", "reader", "Lorg/apache/johnzon/mapper/ObjectConverter$Reader;");
Label label18 = new Label();
methodVisitor.visitJumpInsn(GOTO, label18);
methodVisitor.visitLabel(label15);
methodVisitor.visitFrame(Opcodes.F_FULL, 12, new Object[] {"org/apache/johnzon/jsonb/JsonbAccessMode$ReaderConverters", "org/apache/johnzon/jsonb/JsonbAccessMode", "org/apache/johnzon/mapper/access/AccessMode$DecoratedType", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "javax/json/bind/annotation/JsonbTypeDeserializer", "javax/json/bind/annotation/JsonbTypeAdapter", "javax/json/bind/annotation/JsonbTypeAdapter", "javax/json/bind/annotation/JsonbDateFormat", "javax/json/bind/annotation/JsonbNumberFormat", "org/apache/johnzon/mapper/JohnzonConverter"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitJumpInsn(IFNULL, label18);
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 11);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/johnzon/mapper/JohnzonConverter", "value", "()Ljava/lang/Class;", true);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "newInstance", "()Ljava/lang/Object;", false);
methodVisitor.visitTypeInsn(CHECKCAST, "org/apache/johnzon/mapper/MapperConverter");
methodVisitor.visitVarInsn(ASTORE, 12);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitTypeInsn(INSTANCEOF, "org/apache/johnzon/mapper/Converter");
Label label19 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label19);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitTypeInsn(NEW, "org/apache/johnzon/mapper/internal/ConverterAdapter");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitTypeInsn(CHECKCAST, "org/apache/johnzon/mapper/Converter");
methodVisitor.visitMethodInsn(INVOKESPECIAL, "org/apache/johnzon/mapper/internal/ConverterAdapter", "<init>", "(Lorg/apache/johnzon/mapper/Converter;)V", false);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/johnzon/jsonb/JsonbAccessMode$ReaderConverters", "converter", "Lorg/apache/johnzon/mapper/Adapter;");
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label19);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/apache/johnzon/mapper/MapperConverter"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitTypeInsn(INSTANCEOF, "org/apache/johnzon/mapper/ObjectConverter$Reader");
methodVisitor.visitJumpInsn(IFEQ, label1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitTypeInsn(CHECKCAST, "org/apache/johnzon/mapper/ObjectConverter$Reader");
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/johnzon/jsonb/JsonbAccessMode$ReaderConverters", "reader", "Lorg/apache/johnzon/mapper/ObjectConverter$Reader;");
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
methodVisitor.visitJumpInsn(GOTO, label18);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/ReflectiveOperationException"});
methodVisitor.visitVarInsn(ASTORE, 12);
methodVisitor.visitTypeInsn(NEW, "java/lang/IllegalArgumentException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 12);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/IllegalArgumentException", "<init>", "(Ljava/lang/Throwable;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label18);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(9, 19);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_STATIC | ACC_SYNTHETIC, "access$200", "(Lorg/apache/johnzon/jsonb/JsonbAccessMode$ReaderConverters;)Lorg/apache/johnzon/mapper/ObjectConverter$Reader;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/johnzon/jsonb/JsonbAccessMode$ReaderConverters", "reader", "Lorg/apache/johnzon/mapper/ObjectConverter$Reader;");
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(1, 1);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_STATIC | ACC_SYNTHETIC, "access$300", "(Lorg/apache/johnzon/jsonb/JsonbAccessMode$ReaderConverters;)Lorg/apache/johnzon/mapper/Adapter;", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/johnzon/jsonb/JsonbAccessMode$ReaderConverters", "converter", "Lorg/apache/johnzon/mapper/Adapter;");
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(1, 1);
methodVisitor.visitEnd();
}
classWriter.visitEnd();

return classWriter.toByteArray();
}
}
