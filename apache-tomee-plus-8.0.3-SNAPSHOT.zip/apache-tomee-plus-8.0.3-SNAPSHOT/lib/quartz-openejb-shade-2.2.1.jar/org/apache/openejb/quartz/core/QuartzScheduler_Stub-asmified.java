package asm.org.apache.openejb.quartz.core;
import org.objectweb.asm.AnnotationVisitor;
import org.objectweb.asm.Attribute;
import org.objectweb.asm.ClassReader;
import org.objectweb.asm.ClassWriter;
import org.objectweb.asm.ConstantDynamic;
import org.objectweb.asm.FieldVisitor;
import org.objectweb.asm.Handle;
import org.objectweb.asm.Label;
import org.objectweb.asm.MethodVisitor;
import org.objectweb.asm.Opcodes;
import org.objectweb.asm.RecordComponentVisitor;
import org.objectweb.asm.Type;
import org.objectweb.asm.TypePath;
public class QuartzScheduler_StubDump implements Opcodes {

public static byte[] dump () throws Exception {

ClassWriter classWriter = new ClassWriter(0);
FieldVisitor fieldVisitor;
RecordComponentVisitor recordComponentVisitor;
MethodVisitor methodVisitor;
AnnotationVisitor annotationVisitor0;

classWriter.visit(V1_1, ACC_PUBLIC | ACC_FINAL | ACC_SUPER, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", null, "java/rmi/server/RemoteStub", new String[] { "org/apache/openejb/quartz/core/RemotableQuartzScheduler" });

{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_FINAL | ACC_STATIC, "serialVersionUID", "J", null, new Long(2L));
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_STATIC, "$method_addCalendar_0", "Ljava/lang/reflect/Method;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_STATIC, "$method_addJob_1", "Ljava/lang/reflect/Method;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_STATIC, "$method_addJob_2", "Ljava/lang/reflect/Method;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_STATIC, "$method_checkExists_3", "Ljava/lang/reflect/Method;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_STATIC, "$method_checkExists_4", "Ljava/lang/reflect/Method;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_STATIC, "$method_clear_5", "Ljava/lang/reflect/Method;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_STATIC, "$method_deleteCalendar_6", "Ljava/lang/reflect/Method;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_STATIC, "$method_deleteJob_7", "Ljava/lang/reflect/Method;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_STATIC, "$method_deleteJobs_8", "Ljava/lang/reflect/Method;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_STATIC, "$method_getCalendar_9", "Ljava/lang/reflect/Method;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_STATIC, "$method_getCalendarNames_10", "Ljava/lang/reflect/Method;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_STATIC, "$method_getCurrentlyExecutingJobs_11", "Ljava/lang/reflect/Method;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_STATIC, "$method_getJobDetail_12", "Ljava/lang/reflect/Method;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_STATIC, "$method_getJobGroupNames_13", "Ljava/lang/reflect/Method;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_STATIC, "$method_getJobKeys_14", "Ljava/lang/reflect/Method;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_STATIC, "$method_getJobStoreClass_15", "Ljava/lang/reflect/Method;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_STATIC, "$method_getPausedTriggerGroups_16", "Ljava/lang/reflect/Method;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_STATIC, "$method_getSchedulerContext_17", "Ljava/lang/reflect/Method;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_STATIC, "$method_getSchedulerInstanceId_18", "Ljava/lang/reflect/Method;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_STATIC, "$method_getSchedulerName_19", "Ljava/lang/reflect/Method;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_STATIC, "$method_getThreadPoolClass_20", "Ljava/lang/reflect/Method;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_STATIC, "$method_getThreadPoolSize_21", "Ljava/lang/reflect/Method;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_STATIC, "$method_getTrigger_22", "Ljava/lang/reflect/Method;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_STATIC, "$method_getTriggerGroupNames_23", "Ljava/lang/reflect/Method;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_STATIC, "$method_getTriggerKeys_24", "Ljava/lang/reflect/Method;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_STATIC, "$method_getTriggerState_25", "Ljava/lang/reflect/Method;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_STATIC, "$method_getTriggersOfJob_26", "Ljava/lang/reflect/Method;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_STATIC, "$method_getVersion_27", "Ljava/lang/reflect/Method;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_STATIC, "$method_interrupt_28", "Ljava/lang/reflect/Method;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_STATIC, "$method_interrupt_29", "Ljava/lang/reflect/Method;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_STATIC, "$method_isClustered_30", "Ljava/lang/reflect/Method;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_STATIC, "$method_isInStandbyMode_31", "Ljava/lang/reflect/Method;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_STATIC, "$method_isShutdown_32", "Ljava/lang/reflect/Method;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_STATIC, "$method_numJobsExecuted_33", "Ljava/lang/reflect/Method;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_STATIC, "$method_pauseAll_34", "Ljava/lang/reflect/Method;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_STATIC, "$method_pauseJob_35", "Ljava/lang/reflect/Method;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_STATIC, "$method_pauseJobs_36", "Ljava/lang/reflect/Method;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_STATIC, "$method_pauseTrigger_37", "Ljava/lang/reflect/Method;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_STATIC, "$method_pauseTriggers_38", "Ljava/lang/reflect/Method;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_STATIC, "$method_rescheduleJob_39", "Ljava/lang/reflect/Method;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_STATIC, "$method_resumeAll_40", "Ljava/lang/reflect/Method;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_STATIC, "$method_resumeJob_41", "Ljava/lang/reflect/Method;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_STATIC, "$method_resumeJobs_42", "Ljava/lang/reflect/Method;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_STATIC, "$method_resumeTrigger_43", "Ljava/lang/reflect/Method;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_STATIC, "$method_resumeTriggers_44", "Ljava/lang/reflect/Method;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_STATIC, "$method_runningSince_45", "Ljava/lang/reflect/Method;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_STATIC, "$method_scheduleJob_46", "Ljava/lang/reflect/Method;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_STATIC, "$method_scheduleJob_47", "Ljava/lang/reflect/Method;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_STATIC, "$method_scheduleJob_48", "Ljava/lang/reflect/Method;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_STATIC, "$method_scheduleJobs_49", "Ljava/lang/reflect/Method;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_STATIC, "$method_shutdown_50", "Ljava/lang/reflect/Method;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_STATIC, "$method_shutdown_51", "Ljava/lang/reflect/Method;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_STATIC, "$method_standby_52", "Ljava/lang/reflect/Method;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_STATIC, "$method_start_53", "Ljava/lang/reflect/Method;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_STATIC, "$method_startDelayed_54", "Ljava/lang/reflect/Method;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_STATIC, "$method_supportsPersistence_55", "Ljava/lang/reflect/Method;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_STATIC, "$method_triggerJob_56", "Ljava/lang/reflect/Method;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_STATIC, "$method_triggerJob_57", "Ljava/lang/reflect/Method;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_STATIC, "$method_unscheduleJob_58", "Ljava/lang/reflect/Method;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_STATIC, "$method_unscheduleJobs_59", "Ljava/lang/reflect/Method;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_STATIC | ACC_SYNTHETIC, "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_STATIC | ACC_SYNTHETIC, "class$java$lang$String", "Ljava/lang/Class;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_STATIC | ACC_SYNTHETIC, "class$org$quartz$Calendar", "Ljava/lang/Class;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_STATIC | ACC_SYNTHETIC, "class$org$quartz$JobDetail", "Ljava/lang/Class;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_STATIC | ACC_SYNTHETIC, "class$org$quartz$JobKey", "Ljava/lang/Class;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_STATIC | ACC_SYNTHETIC, "class$org$quartz$TriggerKey", "Ljava/lang/Class;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_STATIC | ACC_SYNTHETIC, "class$java$util$List", "Ljava/lang/Class;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_STATIC | ACC_SYNTHETIC, "class$org$quartz$impl$matchers$GroupMatcher", "Ljava/lang/Class;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_STATIC | ACC_SYNTHETIC, "class$org$quartz$Trigger", "Ljava/lang/Class;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_STATIC | ACC_SYNTHETIC, "class$java$util$Set", "Ljava/lang/Class;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_STATIC | ACC_SYNTHETIC, "class$java$util$Map", "Ljava/lang/Class;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_STATIC | ACC_SYNTHETIC, "class$org$quartz$JobDataMap", "Ljava/lang/Class;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_STATIC | ACC_SYNTHETIC, "class$org$quartz$spi$OperableTrigger", "Ljava/lang/Class;", null, null);
fieldVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_STATIC, "<clinit>", "()V", null, null);
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/lang/NoSuchMethodException");
methodVisitor.visitLabel(label0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label3 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label3);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label4 = new Label();
methodVisitor.visitJumpInsn(GOTO, label4);
methodVisitor.visitLabel(label3);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.core.RemotableQuartzScheduler");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
methodVisitor.visitLabel(label4);
methodVisitor.visitLdcInsn("addCalendar");
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Class");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$java$lang$String", "Ljava/lang/Class;");
Label label5 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label5);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$java$lang$String", "Ljava/lang/Class;");
Label label6 = new Label();
methodVisitor.visitJumpInsn(GOTO, label6);
methodVisitor.visitLabel(label5);
methodVisitor.visitLdcInsn("java.lang.String");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$java$lang$String", "Ljava/lang/Class;");
methodVisitor.visitLabel(label6);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$Calendar", "Ljava/lang/Class;");
Label label7 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label7);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$Calendar", "Ljava/lang/Class;");
Label label8 = new Label();
methodVisitor.visitJumpInsn(GOTO, label8);
methodVisitor.visitLabel(label7);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.Calendar");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$Calendar", "Ljava/lang/Class;");
methodVisitor.visitLabel(label8);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/Boolean", "TYPE", "Ljava/lang/Class;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/Boolean", "TYPE", "Ljava/lang/Class;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_addCalendar_0", "Ljava/lang/reflect/Method;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label9 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label9);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label10 = new Label();
methodVisitor.visitJumpInsn(GOTO, label10);
methodVisitor.visitLabel(label9);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.core.RemotableQuartzScheduler");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
methodVisitor.visitLabel(label10);
methodVisitor.visitLdcInsn("addJob");
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Class");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$JobDetail", "Ljava/lang/Class;");
Label label11 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label11);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$JobDetail", "Ljava/lang/Class;");
Label label12 = new Label();
methodVisitor.visitJumpInsn(GOTO, label12);
methodVisitor.visitLabel(label11);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.JobDetail");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$JobDetail", "Ljava/lang/Class;");
methodVisitor.visitLabel(label12);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/Boolean", "TYPE", "Ljava/lang/Class;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_addJob_1", "Ljava/lang/reflect/Method;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label13 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label13);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label14 = new Label();
methodVisitor.visitJumpInsn(GOTO, label14);
methodVisitor.visitLabel(label13);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.core.RemotableQuartzScheduler");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
methodVisitor.visitLabel(label14);
methodVisitor.visitLdcInsn("addJob");
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Class");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$JobDetail", "Ljava/lang/Class;");
Label label15 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label15);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$JobDetail", "Ljava/lang/Class;");
Label label16 = new Label();
methodVisitor.visitJumpInsn(GOTO, label16);
methodVisitor.visitLabel(label15);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.JobDetail");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$JobDetail", "Ljava/lang/Class;");
methodVisitor.visitLabel(label16);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/Boolean", "TYPE", "Ljava/lang/Class;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/Boolean", "TYPE", "Ljava/lang/Class;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_addJob_2", "Ljava/lang/reflect/Method;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label17 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label17);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label18 = new Label();
methodVisitor.visitJumpInsn(GOTO, label18);
methodVisitor.visitLabel(label17);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.core.RemotableQuartzScheduler");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
methodVisitor.visitLabel(label18);
methodVisitor.visitLdcInsn("checkExists");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Class");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$JobKey", "Ljava/lang/Class;");
Label label19 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label19);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$JobKey", "Ljava/lang/Class;");
Label label20 = new Label();
methodVisitor.visitJumpInsn(GOTO, label20);
methodVisitor.visitLabel(label19);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.JobKey");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$JobKey", "Ljava/lang/Class;");
methodVisitor.visitLabel(label20);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_checkExists_3", "Ljava/lang/reflect/Method;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label21 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label21);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label22 = new Label();
methodVisitor.visitJumpInsn(GOTO, label22);
methodVisitor.visitLabel(label21);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.core.RemotableQuartzScheduler");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
methodVisitor.visitLabel(label22);
methodVisitor.visitLdcInsn("checkExists");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Class");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$TriggerKey", "Ljava/lang/Class;");
Label label23 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label23);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$TriggerKey", "Ljava/lang/Class;");
Label label24 = new Label();
methodVisitor.visitJumpInsn(GOTO, label24);
methodVisitor.visitLabel(label23);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.TriggerKey");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$TriggerKey", "Ljava/lang/Class;");
methodVisitor.visitLabel(label24);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_checkExists_4", "Ljava/lang/reflect/Method;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label25 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label25);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label26 = new Label();
methodVisitor.visitJumpInsn(GOTO, label26);
methodVisitor.visitLabel(label25);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.core.RemotableQuartzScheduler");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
methodVisitor.visitLabel(label26);
methodVisitor.visitLdcInsn("clear");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Class");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_clear_5", "Ljava/lang/reflect/Method;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label27 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label27);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label28 = new Label();
methodVisitor.visitJumpInsn(GOTO, label28);
methodVisitor.visitLabel(label27);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.core.RemotableQuartzScheduler");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
methodVisitor.visitLabel(label28);
methodVisitor.visitLdcInsn("deleteCalendar");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Class");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$java$lang$String", "Ljava/lang/Class;");
Label label29 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label29);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$java$lang$String", "Ljava/lang/Class;");
Label label30 = new Label();
methodVisitor.visitJumpInsn(GOTO, label30);
methodVisitor.visitLabel(label29);
methodVisitor.visitLdcInsn("java.lang.String");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$java$lang$String", "Ljava/lang/Class;");
methodVisitor.visitLabel(label30);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_deleteCalendar_6", "Ljava/lang/reflect/Method;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label31 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label31);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label32 = new Label();
methodVisitor.visitJumpInsn(GOTO, label32);
methodVisitor.visitLabel(label31);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.core.RemotableQuartzScheduler");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
methodVisitor.visitLabel(label32);
methodVisitor.visitLdcInsn("deleteJob");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Class");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$JobKey", "Ljava/lang/Class;");
Label label33 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label33);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$JobKey", "Ljava/lang/Class;");
Label label34 = new Label();
methodVisitor.visitJumpInsn(GOTO, label34);
methodVisitor.visitLabel(label33);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.JobKey");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$JobKey", "Ljava/lang/Class;");
methodVisitor.visitLabel(label34);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_deleteJob_7", "Ljava/lang/reflect/Method;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label35 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label35);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label36 = new Label();
methodVisitor.visitJumpInsn(GOTO, label36);
methodVisitor.visitLabel(label35);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.core.RemotableQuartzScheduler");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
methodVisitor.visitLabel(label36);
methodVisitor.visitLdcInsn("deleteJobs");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Class");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$java$util$List", "Ljava/lang/Class;");
Label label37 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label37);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$java$util$List", "Ljava/lang/Class;");
Label label38 = new Label();
methodVisitor.visitJumpInsn(GOTO, label38);
methodVisitor.visitLabel(label37);
methodVisitor.visitLdcInsn("java.util.List");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$java$util$List", "Ljava/lang/Class;");
methodVisitor.visitLabel(label38);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_deleteJobs_8", "Ljava/lang/reflect/Method;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label39 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label39);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label40 = new Label();
methodVisitor.visitJumpInsn(GOTO, label40);
methodVisitor.visitLabel(label39);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.core.RemotableQuartzScheduler");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
methodVisitor.visitLabel(label40);
methodVisitor.visitLdcInsn("getCalendar");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Class");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$java$lang$String", "Ljava/lang/Class;");
Label label41 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label41);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$java$lang$String", "Ljava/lang/Class;");
Label label42 = new Label();
methodVisitor.visitJumpInsn(GOTO, label42);
methodVisitor.visitLabel(label41);
methodVisitor.visitLdcInsn("java.lang.String");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$java$lang$String", "Ljava/lang/Class;");
methodVisitor.visitLabel(label42);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_getCalendar_9", "Ljava/lang/reflect/Method;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label43 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label43);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label44 = new Label();
methodVisitor.visitJumpInsn(GOTO, label44);
methodVisitor.visitLabel(label43);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.core.RemotableQuartzScheduler");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
methodVisitor.visitLabel(label44);
methodVisitor.visitLdcInsn("getCalendarNames");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Class");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_getCalendarNames_10", "Ljava/lang/reflect/Method;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label45 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label45);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label46 = new Label();
methodVisitor.visitJumpInsn(GOTO, label46);
methodVisitor.visitLabel(label45);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.core.RemotableQuartzScheduler");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
methodVisitor.visitLabel(label46);
methodVisitor.visitLdcInsn("getCurrentlyExecutingJobs");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Class");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_getCurrentlyExecutingJobs_11", "Ljava/lang/reflect/Method;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label47 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label47);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label48 = new Label();
methodVisitor.visitJumpInsn(GOTO, label48);
methodVisitor.visitLabel(label47);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.core.RemotableQuartzScheduler");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
methodVisitor.visitLabel(label48);
methodVisitor.visitLdcInsn("getJobDetail");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Class");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$JobKey", "Ljava/lang/Class;");
Label label49 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label49);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$JobKey", "Ljava/lang/Class;");
Label label50 = new Label();
methodVisitor.visitJumpInsn(GOTO, label50);
methodVisitor.visitLabel(label49);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.JobKey");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$JobKey", "Ljava/lang/Class;");
methodVisitor.visitLabel(label50);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_getJobDetail_12", "Ljava/lang/reflect/Method;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label51 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label51);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label52 = new Label();
methodVisitor.visitJumpInsn(GOTO, label52);
methodVisitor.visitLabel(label51);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.core.RemotableQuartzScheduler");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
methodVisitor.visitLabel(label52);
methodVisitor.visitLdcInsn("getJobGroupNames");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Class");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_getJobGroupNames_13", "Ljava/lang/reflect/Method;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label53 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label53);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label54 = new Label();
methodVisitor.visitJumpInsn(GOTO, label54);
methodVisitor.visitLabel(label53);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.core.RemotableQuartzScheduler");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
methodVisitor.visitLabel(label54);
methodVisitor.visitLdcInsn("getJobKeys");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Class");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$impl$matchers$GroupMatcher", "Ljava/lang/Class;");
Label label55 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label55);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$impl$matchers$GroupMatcher", "Ljava/lang/Class;");
Label label56 = new Label();
methodVisitor.visitJumpInsn(GOTO, label56);
methodVisitor.visitLabel(label55);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.impl.matchers.GroupMatcher");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$impl$matchers$GroupMatcher", "Ljava/lang/Class;");
methodVisitor.visitLabel(label56);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_getJobKeys_14", "Ljava/lang/reflect/Method;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label57 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label57);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label58 = new Label();
methodVisitor.visitJumpInsn(GOTO, label58);
methodVisitor.visitLabel(label57);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.core.RemotableQuartzScheduler");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
methodVisitor.visitLabel(label58);
methodVisitor.visitLdcInsn("getJobStoreClass");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Class");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_getJobStoreClass_15", "Ljava/lang/reflect/Method;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label59 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label59);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label60 = new Label();
methodVisitor.visitJumpInsn(GOTO, label60);
methodVisitor.visitLabel(label59);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.core.RemotableQuartzScheduler");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
methodVisitor.visitLabel(label60);
methodVisitor.visitLdcInsn("getPausedTriggerGroups");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Class");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_getPausedTriggerGroups_16", "Ljava/lang/reflect/Method;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label61 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label61);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label62 = new Label();
methodVisitor.visitJumpInsn(GOTO, label62);
methodVisitor.visitLabel(label61);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.core.RemotableQuartzScheduler");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
methodVisitor.visitLabel(label62);
methodVisitor.visitLdcInsn("getSchedulerContext");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Class");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_getSchedulerContext_17", "Ljava/lang/reflect/Method;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label63 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label63);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label64 = new Label();
methodVisitor.visitJumpInsn(GOTO, label64);
methodVisitor.visitLabel(label63);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.core.RemotableQuartzScheduler");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
methodVisitor.visitLabel(label64);
methodVisitor.visitLdcInsn("getSchedulerInstanceId");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Class");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_getSchedulerInstanceId_18", "Ljava/lang/reflect/Method;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label65 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label65);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label66 = new Label();
methodVisitor.visitJumpInsn(GOTO, label66);
methodVisitor.visitLabel(label65);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.core.RemotableQuartzScheduler");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
methodVisitor.visitLabel(label66);
methodVisitor.visitLdcInsn("getSchedulerName");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Class");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_getSchedulerName_19", "Ljava/lang/reflect/Method;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label67 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label67);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label68 = new Label();
methodVisitor.visitJumpInsn(GOTO, label68);
methodVisitor.visitLabel(label67);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.core.RemotableQuartzScheduler");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
methodVisitor.visitLabel(label68);
methodVisitor.visitLdcInsn("getThreadPoolClass");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Class");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_getThreadPoolClass_20", "Ljava/lang/reflect/Method;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label69 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label69);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label70 = new Label();
methodVisitor.visitJumpInsn(GOTO, label70);
methodVisitor.visitLabel(label69);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.core.RemotableQuartzScheduler");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
methodVisitor.visitLabel(label70);
methodVisitor.visitLdcInsn("getThreadPoolSize");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Class");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_getThreadPoolSize_21", "Ljava/lang/reflect/Method;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label71 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label71);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label72 = new Label();
methodVisitor.visitJumpInsn(GOTO, label72);
methodVisitor.visitLabel(label71);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.core.RemotableQuartzScheduler");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
methodVisitor.visitLabel(label72);
methodVisitor.visitLdcInsn("getTrigger");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Class");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$TriggerKey", "Ljava/lang/Class;");
Label label73 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label73);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$TriggerKey", "Ljava/lang/Class;");
Label label74 = new Label();
methodVisitor.visitJumpInsn(GOTO, label74);
methodVisitor.visitLabel(label73);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.TriggerKey");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$TriggerKey", "Ljava/lang/Class;");
methodVisitor.visitLabel(label74);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_getTrigger_22", "Ljava/lang/reflect/Method;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label75 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label75);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label76 = new Label();
methodVisitor.visitJumpInsn(GOTO, label76);
methodVisitor.visitLabel(label75);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.core.RemotableQuartzScheduler");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
methodVisitor.visitLabel(label76);
methodVisitor.visitLdcInsn("getTriggerGroupNames");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Class");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_getTriggerGroupNames_23", "Ljava/lang/reflect/Method;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label77 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label77);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label78 = new Label();
methodVisitor.visitJumpInsn(GOTO, label78);
methodVisitor.visitLabel(label77);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.core.RemotableQuartzScheduler");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
methodVisitor.visitLabel(label78);
methodVisitor.visitLdcInsn("getTriggerKeys");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Class");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$impl$matchers$GroupMatcher", "Ljava/lang/Class;");
Label label79 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label79);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$impl$matchers$GroupMatcher", "Ljava/lang/Class;");
Label label80 = new Label();
methodVisitor.visitJumpInsn(GOTO, label80);
methodVisitor.visitLabel(label79);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.impl.matchers.GroupMatcher");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$impl$matchers$GroupMatcher", "Ljava/lang/Class;");
methodVisitor.visitLabel(label80);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_getTriggerKeys_24", "Ljava/lang/reflect/Method;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label81 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label81);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label82 = new Label();
methodVisitor.visitJumpInsn(GOTO, label82);
methodVisitor.visitLabel(label81);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.core.RemotableQuartzScheduler");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
methodVisitor.visitLabel(label82);
methodVisitor.visitLdcInsn("getTriggerState");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Class");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$TriggerKey", "Ljava/lang/Class;");
Label label83 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label83);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$TriggerKey", "Ljava/lang/Class;");
Label label84 = new Label();
methodVisitor.visitJumpInsn(GOTO, label84);
methodVisitor.visitLabel(label83);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.TriggerKey");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$TriggerKey", "Ljava/lang/Class;");
methodVisitor.visitLabel(label84);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_getTriggerState_25", "Ljava/lang/reflect/Method;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label85 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label85);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label86 = new Label();
methodVisitor.visitJumpInsn(GOTO, label86);
methodVisitor.visitLabel(label85);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.core.RemotableQuartzScheduler");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
methodVisitor.visitLabel(label86);
methodVisitor.visitLdcInsn("getTriggersOfJob");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Class");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$JobKey", "Ljava/lang/Class;");
Label label87 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label87);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$JobKey", "Ljava/lang/Class;");
Label label88 = new Label();
methodVisitor.visitJumpInsn(GOTO, label88);
methodVisitor.visitLabel(label87);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.JobKey");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$JobKey", "Ljava/lang/Class;");
methodVisitor.visitLabel(label88);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_getTriggersOfJob_26", "Ljava/lang/reflect/Method;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label89 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label89);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label90 = new Label();
methodVisitor.visitJumpInsn(GOTO, label90);
methodVisitor.visitLabel(label89);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.core.RemotableQuartzScheduler");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
methodVisitor.visitLabel(label90);
methodVisitor.visitLdcInsn("getVersion");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Class");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_getVersion_27", "Ljava/lang/reflect/Method;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label91 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label91);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label92 = new Label();
methodVisitor.visitJumpInsn(GOTO, label92);
methodVisitor.visitLabel(label91);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.core.RemotableQuartzScheduler");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
methodVisitor.visitLabel(label92);
methodVisitor.visitLdcInsn("interrupt");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Class");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$java$lang$String", "Ljava/lang/Class;");
Label label93 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label93);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$java$lang$String", "Ljava/lang/Class;");
Label label94 = new Label();
methodVisitor.visitJumpInsn(GOTO, label94);
methodVisitor.visitLabel(label93);
methodVisitor.visitLdcInsn("java.lang.String");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$java$lang$String", "Ljava/lang/Class;");
methodVisitor.visitLabel(label94);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_interrupt_28", "Ljava/lang/reflect/Method;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label95 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label95);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label96 = new Label();
methodVisitor.visitJumpInsn(GOTO, label96);
methodVisitor.visitLabel(label95);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.core.RemotableQuartzScheduler");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
methodVisitor.visitLabel(label96);
methodVisitor.visitLdcInsn("interrupt");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Class");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$JobKey", "Ljava/lang/Class;");
Label label97 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label97);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$JobKey", "Ljava/lang/Class;");
Label label98 = new Label();
methodVisitor.visitJumpInsn(GOTO, label98);
methodVisitor.visitLabel(label97);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.JobKey");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$JobKey", "Ljava/lang/Class;");
methodVisitor.visitLabel(label98);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_interrupt_29", "Ljava/lang/reflect/Method;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label99 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label99);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label100 = new Label();
methodVisitor.visitJumpInsn(GOTO, label100);
methodVisitor.visitLabel(label99);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.core.RemotableQuartzScheduler");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
methodVisitor.visitLabel(label100);
methodVisitor.visitLdcInsn("isClustered");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Class");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_isClustered_30", "Ljava/lang/reflect/Method;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label101 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label101);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label102 = new Label();
methodVisitor.visitJumpInsn(GOTO, label102);
methodVisitor.visitLabel(label101);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.core.RemotableQuartzScheduler");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
methodVisitor.visitLabel(label102);
methodVisitor.visitLdcInsn("isInStandbyMode");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Class");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_isInStandbyMode_31", "Ljava/lang/reflect/Method;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label103 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label103);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label104 = new Label();
methodVisitor.visitJumpInsn(GOTO, label104);
methodVisitor.visitLabel(label103);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.core.RemotableQuartzScheduler");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
methodVisitor.visitLabel(label104);
methodVisitor.visitLdcInsn("isShutdown");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Class");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_isShutdown_32", "Ljava/lang/reflect/Method;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label105 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label105);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label106 = new Label();
methodVisitor.visitJumpInsn(GOTO, label106);
methodVisitor.visitLabel(label105);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.core.RemotableQuartzScheduler");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
methodVisitor.visitLabel(label106);
methodVisitor.visitLdcInsn("numJobsExecuted");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Class");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_numJobsExecuted_33", "Ljava/lang/reflect/Method;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label107 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label107);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label108 = new Label();
methodVisitor.visitJumpInsn(GOTO, label108);
methodVisitor.visitLabel(label107);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.core.RemotableQuartzScheduler");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
methodVisitor.visitLabel(label108);
methodVisitor.visitLdcInsn("pauseAll");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Class");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_pauseAll_34", "Ljava/lang/reflect/Method;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label109 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label109);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label110 = new Label();
methodVisitor.visitJumpInsn(GOTO, label110);
methodVisitor.visitLabel(label109);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.core.RemotableQuartzScheduler");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
methodVisitor.visitLabel(label110);
methodVisitor.visitLdcInsn("pauseJob");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Class");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$JobKey", "Ljava/lang/Class;");
Label label111 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label111);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$JobKey", "Ljava/lang/Class;");
Label label112 = new Label();
methodVisitor.visitJumpInsn(GOTO, label112);
methodVisitor.visitLabel(label111);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.JobKey");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$JobKey", "Ljava/lang/Class;");
methodVisitor.visitLabel(label112);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_pauseJob_35", "Ljava/lang/reflect/Method;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label113 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label113);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label114 = new Label();
methodVisitor.visitJumpInsn(GOTO, label114);
methodVisitor.visitLabel(label113);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.core.RemotableQuartzScheduler");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
methodVisitor.visitLabel(label114);
methodVisitor.visitLdcInsn("pauseJobs");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Class");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$impl$matchers$GroupMatcher", "Ljava/lang/Class;");
Label label115 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label115);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$impl$matchers$GroupMatcher", "Ljava/lang/Class;");
Label label116 = new Label();
methodVisitor.visitJumpInsn(GOTO, label116);
methodVisitor.visitLabel(label115);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.impl.matchers.GroupMatcher");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$impl$matchers$GroupMatcher", "Ljava/lang/Class;");
methodVisitor.visitLabel(label116);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_pauseJobs_36", "Ljava/lang/reflect/Method;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label117 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label117);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label118 = new Label();
methodVisitor.visitJumpInsn(GOTO, label118);
methodVisitor.visitLabel(label117);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.core.RemotableQuartzScheduler");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
methodVisitor.visitLabel(label118);
methodVisitor.visitLdcInsn("pauseTrigger");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Class");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$TriggerKey", "Ljava/lang/Class;");
Label label119 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label119);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$TriggerKey", "Ljava/lang/Class;");
Label label120 = new Label();
methodVisitor.visitJumpInsn(GOTO, label120);
methodVisitor.visitLabel(label119);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.TriggerKey");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$TriggerKey", "Ljava/lang/Class;");
methodVisitor.visitLabel(label120);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_pauseTrigger_37", "Ljava/lang/reflect/Method;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label121 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label121);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label122 = new Label();
methodVisitor.visitJumpInsn(GOTO, label122);
methodVisitor.visitLabel(label121);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.core.RemotableQuartzScheduler");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
methodVisitor.visitLabel(label122);
methodVisitor.visitLdcInsn("pauseTriggers");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Class");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$impl$matchers$GroupMatcher", "Ljava/lang/Class;");
Label label123 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label123);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$impl$matchers$GroupMatcher", "Ljava/lang/Class;");
Label label124 = new Label();
methodVisitor.visitJumpInsn(GOTO, label124);
methodVisitor.visitLabel(label123);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.impl.matchers.GroupMatcher");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$impl$matchers$GroupMatcher", "Ljava/lang/Class;");
methodVisitor.visitLabel(label124);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_pauseTriggers_38", "Ljava/lang/reflect/Method;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label125 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label125);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label126 = new Label();
methodVisitor.visitJumpInsn(GOTO, label126);
methodVisitor.visitLabel(label125);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.core.RemotableQuartzScheduler");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
methodVisitor.visitLabel(label126);
methodVisitor.visitLdcInsn("rescheduleJob");
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Class");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$TriggerKey", "Ljava/lang/Class;");
Label label127 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label127);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$TriggerKey", "Ljava/lang/Class;");
Label label128 = new Label();
methodVisitor.visitJumpInsn(GOTO, label128);
methodVisitor.visitLabel(label127);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.TriggerKey");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$TriggerKey", "Ljava/lang/Class;");
methodVisitor.visitLabel(label128);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$Trigger", "Ljava/lang/Class;");
Label label129 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label129);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$Trigger", "Ljava/lang/Class;");
Label label130 = new Label();
methodVisitor.visitJumpInsn(GOTO, label130);
methodVisitor.visitLabel(label129);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.Trigger");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$Trigger", "Ljava/lang/Class;");
methodVisitor.visitLabel(label130);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_rescheduleJob_39", "Ljava/lang/reflect/Method;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label131 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label131);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label132 = new Label();
methodVisitor.visitJumpInsn(GOTO, label132);
methodVisitor.visitLabel(label131);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.core.RemotableQuartzScheduler");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
methodVisitor.visitLabel(label132);
methodVisitor.visitLdcInsn("resumeAll");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Class");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_resumeAll_40", "Ljava/lang/reflect/Method;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label133 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label133);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label134 = new Label();
methodVisitor.visitJumpInsn(GOTO, label134);
methodVisitor.visitLabel(label133);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.core.RemotableQuartzScheduler");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
methodVisitor.visitLabel(label134);
methodVisitor.visitLdcInsn("resumeJob");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Class");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$JobKey", "Ljava/lang/Class;");
Label label135 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label135);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$JobKey", "Ljava/lang/Class;");
Label label136 = new Label();
methodVisitor.visitJumpInsn(GOTO, label136);
methodVisitor.visitLabel(label135);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.JobKey");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$JobKey", "Ljava/lang/Class;");
methodVisitor.visitLabel(label136);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_resumeJob_41", "Ljava/lang/reflect/Method;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label137 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label137);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label138 = new Label();
methodVisitor.visitJumpInsn(GOTO, label138);
methodVisitor.visitLabel(label137);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.core.RemotableQuartzScheduler");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
methodVisitor.visitLabel(label138);
methodVisitor.visitLdcInsn("resumeJobs");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Class");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$impl$matchers$GroupMatcher", "Ljava/lang/Class;");
Label label139 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label139);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$impl$matchers$GroupMatcher", "Ljava/lang/Class;");
Label label140 = new Label();
methodVisitor.visitJumpInsn(GOTO, label140);
methodVisitor.visitLabel(label139);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.impl.matchers.GroupMatcher");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$impl$matchers$GroupMatcher", "Ljava/lang/Class;");
methodVisitor.visitLabel(label140);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_resumeJobs_42", "Ljava/lang/reflect/Method;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label141 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label141);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label142 = new Label();
methodVisitor.visitJumpInsn(GOTO, label142);
methodVisitor.visitLabel(label141);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.core.RemotableQuartzScheduler");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
methodVisitor.visitLabel(label142);
methodVisitor.visitLdcInsn("resumeTrigger");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Class");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$TriggerKey", "Ljava/lang/Class;");
Label label143 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label143);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$TriggerKey", "Ljava/lang/Class;");
Label label144 = new Label();
methodVisitor.visitJumpInsn(GOTO, label144);
methodVisitor.visitLabel(label143);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.TriggerKey");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$TriggerKey", "Ljava/lang/Class;");
methodVisitor.visitLabel(label144);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_resumeTrigger_43", "Ljava/lang/reflect/Method;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label145 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label145);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label146 = new Label();
methodVisitor.visitJumpInsn(GOTO, label146);
methodVisitor.visitLabel(label145);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.core.RemotableQuartzScheduler");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
methodVisitor.visitLabel(label146);
methodVisitor.visitLdcInsn("resumeTriggers");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Class");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$impl$matchers$GroupMatcher", "Ljava/lang/Class;");
Label label147 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label147);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$impl$matchers$GroupMatcher", "Ljava/lang/Class;");
Label label148 = new Label();
methodVisitor.visitJumpInsn(GOTO, label148);
methodVisitor.visitLabel(label147);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.impl.matchers.GroupMatcher");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$impl$matchers$GroupMatcher", "Ljava/lang/Class;");
methodVisitor.visitLabel(label148);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_resumeTriggers_44", "Ljava/lang/reflect/Method;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label149 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label149);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label150 = new Label();
methodVisitor.visitJumpInsn(GOTO, label150);
methodVisitor.visitLabel(label149);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.core.RemotableQuartzScheduler");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
methodVisitor.visitLabel(label150);
methodVisitor.visitLdcInsn("runningSince");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Class");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_runningSince_45", "Ljava/lang/reflect/Method;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label151 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label151);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label152 = new Label();
methodVisitor.visitJumpInsn(GOTO, label152);
methodVisitor.visitLabel(label151);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.core.RemotableQuartzScheduler");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
methodVisitor.visitLabel(label152);
methodVisitor.visitLdcInsn("scheduleJob");
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Class");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$JobDetail", "Ljava/lang/Class;");
Label label153 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label153);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$JobDetail", "Ljava/lang/Class;");
Label label154 = new Label();
methodVisitor.visitJumpInsn(GOTO, label154);
methodVisitor.visitLabel(label153);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.JobDetail");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$JobDetail", "Ljava/lang/Class;");
methodVisitor.visitLabel(label154);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$java$util$Set", "Ljava/lang/Class;");
Label label155 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label155);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$java$util$Set", "Ljava/lang/Class;");
Label label156 = new Label();
methodVisitor.visitJumpInsn(GOTO, label156);
methodVisitor.visitLabel(label155);
methodVisitor.visitLdcInsn("java.util.Set");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$java$util$Set", "Ljava/lang/Class;");
methodVisitor.visitLabel(label156);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/Boolean", "TYPE", "Ljava/lang/Class;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_scheduleJob_46", "Ljava/lang/reflect/Method;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label157 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label157);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label158 = new Label();
methodVisitor.visitJumpInsn(GOTO, label158);
methodVisitor.visitLabel(label157);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.core.RemotableQuartzScheduler");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
methodVisitor.visitLabel(label158);
methodVisitor.visitLdcInsn("scheduleJob");
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Class");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$JobDetail", "Ljava/lang/Class;");
Label label159 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label159);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$JobDetail", "Ljava/lang/Class;");
Label label160 = new Label();
methodVisitor.visitJumpInsn(GOTO, label160);
methodVisitor.visitLabel(label159);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.JobDetail");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$JobDetail", "Ljava/lang/Class;");
methodVisitor.visitLabel(label160);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$Trigger", "Ljava/lang/Class;");
Label label161 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label161);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$Trigger", "Ljava/lang/Class;");
Label label162 = new Label();
methodVisitor.visitJumpInsn(GOTO, label162);
methodVisitor.visitLabel(label161);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.Trigger");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$Trigger", "Ljava/lang/Class;");
methodVisitor.visitLabel(label162);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_scheduleJob_47", "Ljava/lang/reflect/Method;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label163 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label163);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label164 = new Label();
methodVisitor.visitJumpInsn(GOTO, label164);
methodVisitor.visitLabel(label163);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.core.RemotableQuartzScheduler");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
methodVisitor.visitLabel(label164);
methodVisitor.visitLdcInsn("scheduleJob");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Class");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$Trigger", "Ljava/lang/Class;");
Label label165 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label165);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$Trigger", "Ljava/lang/Class;");
Label label166 = new Label();
methodVisitor.visitJumpInsn(GOTO, label166);
methodVisitor.visitLabel(label165);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.Trigger");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$Trigger", "Ljava/lang/Class;");
methodVisitor.visitLabel(label166);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_scheduleJob_48", "Ljava/lang/reflect/Method;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label167 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label167);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label168 = new Label();
methodVisitor.visitJumpInsn(GOTO, label168);
methodVisitor.visitLabel(label167);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.core.RemotableQuartzScheduler");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
methodVisitor.visitLabel(label168);
methodVisitor.visitLdcInsn("scheduleJobs");
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Class");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$java$util$Map", "Ljava/lang/Class;");
Label label169 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label169);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$java$util$Map", "Ljava/lang/Class;");
Label label170 = new Label();
methodVisitor.visitJumpInsn(GOTO, label170);
methodVisitor.visitLabel(label169);
methodVisitor.visitLdcInsn("java.util.Map");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$java$util$Map", "Ljava/lang/Class;");
methodVisitor.visitLabel(label170);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/Boolean", "TYPE", "Ljava/lang/Class;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_scheduleJobs_49", "Ljava/lang/reflect/Method;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label171 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label171);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label172 = new Label();
methodVisitor.visitJumpInsn(GOTO, label172);
methodVisitor.visitLabel(label171);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.core.RemotableQuartzScheduler");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
methodVisitor.visitLabel(label172);
methodVisitor.visitLdcInsn("shutdown");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Class");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_shutdown_50", "Ljava/lang/reflect/Method;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label173 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label173);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label174 = new Label();
methodVisitor.visitJumpInsn(GOTO, label174);
methodVisitor.visitLabel(label173);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.core.RemotableQuartzScheduler");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
methodVisitor.visitLabel(label174);
methodVisitor.visitLdcInsn("shutdown");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Class");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/Boolean", "TYPE", "Ljava/lang/Class;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_shutdown_51", "Ljava/lang/reflect/Method;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label175 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label175);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label176 = new Label();
methodVisitor.visitJumpInsn(GOTO, label176);
methodVisitor.visitLabel(label175);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.core.RemotableQuartzScheduler");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
methodVisitor.visitLabel(label176);
methodVisitor.visitLdcInsn("standby");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Class");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_standby_52", "Ljava/lang/reflect/Method;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label177 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label177);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label178 = new Label();
methodVisitor.visitJumpInsn(GOTO, label178);
methodVisitor.visitLabel(label177);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.core.RemotableQuartzScheduler");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
methodVisitor.visitLabel(label178);
methodVisitor.visitLdcInsn("start");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Class");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_start_53", "Ljava/lang/reflect/Method;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label179 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label179);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label180 = new Label();
methodVisitor.visitJumpInsn(GOTO, label180);
methodVisitor.visitLabel(label179);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.core.RemotableQuartzScheduler");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
methodVisitor.visitLabel(label180);
methodVisitor.visitLdcInsn("startDelayed");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Class");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/Integer", "TYPE", "Ljava/lang/Class;");
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_startDelayed_54", "Ljava/lang/reflect/Method;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label181 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label181);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label182 = new Label();
methodVisitor.visitJumpInsn(GOTO, label182);
methodVisitor.visitLabel(label181);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.core.RemotableQuartzScheduler");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
methodVisitor.visitLabel(label182);
methodVisitor.visitLdcInsn("supportsPersistence");
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Class");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_supportsPersistence_55", "Ljava/lang/reflect/Method;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label183 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label183);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label184 = new Label();
methodVisitor.visitJumpInsn(GOTO, label184);
methodVisitor.visitLabel(label183);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.core.RemotableQuartzScheduler");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
methodVisitor.visitLabel(label184);
methodVisitor.visitLdcInsn("triggerJob");
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Class");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$JobKey", "Ljava/lang/Class;");
Label label185 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label185);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$JobKey", "Ljava/lang/Class;");
Label label186 = new Label();
methodVisitor.visitJumpInsn(GOTO, label186);
methodVisitor.visitLabel(label185);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.JobKey");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$JobKey", "Ljava/lang/Class;");
methodVisitor.visitLabel(label186);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$JobDataMap", "Ljava/lang/Class;");
Label label187 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label187);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$JobDataMap", "Ljava/lang/Class;");
Label label188 = new Label();
methodVisitor.visitJumpInsn(GOTO, label188);
methodVisitor.visitLabel(label187);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.JobDataMap");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$JobDataMap", "Ljava/lang/Class;");
methodVisitor.visitLabel(label188);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_triggerJob_56", "Ljava/lang/reflect/Method;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label189 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label189);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label190 = new Label();
methodVisitor.visitJumpInsn(GOTO, label190);
methodVisitor.visitLabel(label189);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.core.RemotableQuartzScheduler");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
methodVisitor.visitLabel(label190);
methodVisitor.visitLdcInsn("triggerJob");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Class");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$spi$OperableTrigger", "Ljava/lang/Class;");
Label label191 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label191);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$spi$OperableTrigger", "Ljava/lang/Class;");
Label label192 = new Label();
methodVisitor.visitJumpInsn(GOTO, label192);
methodVisitor.visitLabel(label191);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.spi.OperableTrigger");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$spi$OperableTrigger", "Ljava/lang/Class;");
methodVisitor.visitLabel(label192);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_triggerJob_57", "Ljava/lang/reflect/Method;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label193 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label193);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label194 = new Label();
methodVisitor.visitJumpInsn(GOTO, label194);
methodVisitor.visitLabel(label193);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.core.RemotableQuartzScheduler");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
methodVisitor.visitLabel(label194);
methodVisitor.visitLdcInsn("unscheduleJob");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Class");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$TriggerKey", "Ljava/lang/Class;");
Label label195 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label195);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$TriggerKey", "Ljava/lang/Class;");
Label label196 = new Label();
methodVisitor.visitJumpInsn(GOTO, label196);
methodVisitor.visitLabel(label195);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.TriggerKey");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$TriggerKey", "Ljava/lang/Class;");
methodVisitor.visitLabel(label196);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_unscheduleJob_58", "Ljava/lang/reflect/Method;");
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label197 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label197);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
Label label198 = new Label();
methodVisitor.visitJumpInsn(GOTO, label198);
methodVisitor.visitLabel(label197);
methodVisitor.visitLdcInsn("org.apache.openejb.quartz.core.RemotableQuartzScheduler");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$org$quartz$core$RemotableQuartzScheduler", "Ljava/lang/Class;");
methodVisitor.visitLabel(label198);
methodVisitor.visitLdcInsn("unscheduleJobs");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Class");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$java$util$List", "Ljava/lang/Class;");
Label label199 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label199);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$java$util$List", "Ljava/lang/Class;");
Label label200 = new Label();
methodVisitor.visitJumpInsn(GOTO, label200);
methodVisitor.visitLabel(label199);
methodVisitor.visitLdcInsn("java.util.List");
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "class$java$util$List", "Ljava/lang/Class;");
methodVisitor.visitLabel(label200);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_unscheduleJobs_59", "Ljava/lang/reflect/Method;");
methodVisitor.visitLabel(label1);
Label label201 = new Label();
methodVisitor.visitJumpInsn(GOTO, label201);
methodVisitor.visitLabel(label2);
methodVisitor.visitInsn(POP);
methodVisitor.visitTypeInsn(NEW, "java/lang/NoSuchMethodError");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("stub class initialization failed");
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/NoSuchMethodError", "<init>", "(Ljava/lang/String;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label201);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(7, 0);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "<init>", "(Ljava/rmi/server/RemoteRef;)V", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/rmi/server/RemoteStub", "<init>", "(Ljava/rmi/server/RemoteRef;)V", false);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(2, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "addCalendar", "(Ljava/lang/String;Lorg/apache/openejb/quartz/Calendar;ZZ)V", null, new String[] { "java/rmi/RemoteException", "org/apache/openejb/quartz/SchedulerException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/lang/RuntimeException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, "java/rmi/RemoteException");
Label label4 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label4, "org/apache/openejb/quartz/SchedulerException");
Label label5 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label5, "java/lang/Exception");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "java/rmi/server/RemoteObject", "ref", "Ljava/rmi/server/RemoteRef;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_addCalendar_0", "Ljava/lang/reflect/Method;");
methodVisitor.visitInsn(ICONST_4);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Object");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitVarInsn(ILOAD, 3);
Label label6 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label6);
methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/Boolean", "TRUE", "Ljava/lang/Boolean;");
Label label7 = new Label();
methodVisitor.visitJumpInsn(GOTO, label7);
methodVisitor.visitLabel(label6);
methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/Boolean", "FALSE", "Ljava/lang/Boolean;");
methodVisitor.visitLabel(label7);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitVarInsn(ILOAD, 4);
Label label8 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label8);
methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/Boolean", "TRUE", "Ljava/lang/Boolean;");
Label label9 = new Label();
methodVisitor.visitJumpInsn(GOTO, label9);
methodVisitor.visitLabel(label8);
methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/Boolean", "FALSE", "Ljava/lang/Boolean;");
methodVisitor.visitLabel(label9);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLdcInsn(new Long(8855052307177792680L));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/rmi/server/RemoteRef", "invoke", "(Ljava/rmi/Remote;Ljava/lang/reflect/Method;[Ljava/lang/Object;J)Ljava/lang/Object;", true);
methodVisitor.visitInsn(POP);
methodVisitor.visitLabel(label1);
Label label10 = new Label();
methodVisitor.visitJumpInsn(GOTO, label10);
methodVisitor.visitLabel(label2);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label4);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label5);
methodVisitor.visitVarInsn(ASTORE, 5);
methodVisitor.visitTypeInsn(NEW, "java/rmi/UnexpectedException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("undeclared checked exception");
methodVisitor.visitVarInsn(ALOAD, 5);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/rmi/UnexpectedException", "<init>", "(Ljava/lang/String;Ljava/lang/Exception;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label10);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(7, 6);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "addJob", "(Lorg/apache/openejb/quartz/JobDetail;Z)V", null, new String[] { "java/rmi/RemoteException", "org/apache/openejb/quartz/SchedulerException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/lang/RuntimeException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, "java/rmi/RemoteException");
Label label4 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label4, "org/apache/openejb/quartz/SchedulerException");
Label label5 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label5, "java/lang/Exception");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "java/rmi/server/RemoteObject", "ref", "Ljava/rmi/server/RemoteRef;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_addJob_1", "Ljava/lang/reflect/Method;");
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Object");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ILOAD, 2);
Label label6 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label6);
methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/Boolean", "TRUE", "Ljava/lang/Boolean;");
Label label7 = new Label();
methodVisitor.visitJumpInsn(GOTO, label7);
methodVisitor.visitLabel(label6);
methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/Boolean", "FALSE", "Ljava/lang/Boolean;");
methodVisitor.visitLabel(label7);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLdcInsn(new Long(-7729650160006632870L));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/rmi/server/RemoteRef", "invoke", "(Ljava/rmi/Remote;Ljava/lang/reflect/Method;[Ljava/lang/Object;J)Ljava/lang/Object;", true);
methodVisitor.visitInsn(POP);
methodVisitor.visitLabel(label1);
Label label8 = new Label();
methodVisitor.visitJumpInsn(GOTO, label8);
methodVisitor.visitLabel(label2);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label4);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label5);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitTypeInsn(NEW, "java/rmi/UnexpectedException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("undeclared checked exception");
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/rmi/UnexpectedException", "<init>", "(Ljava/lang/String;Ljava/lang/Exception;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label8);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(7, 4);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "addJob", "(Lorg/apache/openejb/quartz/JobDetail;ZZ)V", null, new String[] { "java/rmi/RemoteException", "org/apache/openejb/quartz/SchedulerException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/lang/RuntimeException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, "java/rmi/RemoteException");
Label label4 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label4, "org/apache/openejb/quartz/SchedulerException");
Label label5 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label5, "java/lang/Exception");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "java/rmi/server/RemoteObject", "ref", "Ljava/rmi/server/RemoteRef;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_addJob_2", "Ljava/lang/reflect/Method;");
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Object");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ILOAD, 2);
Label label6 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label6);
methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/Boolean", "TRUE", "Ljava/lang/Boolean;");
Label label7 = new Label();
methodVisitor.visitJumpInsn(GOTO, label7);
methodVisitor.visitLabel(label6);
methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/Boolean", "FALSE", "Ljava/lang/Boolean;");
methodVisitor.visitLabel(label7);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitVarInsn(ILOAD, 3);
Label label8 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label8);
methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/Boolean", "TRUE", "Ljava/lang/Boolean;");
Label label9 = new Label();
methodVisitor.visitJumpInsn(GOTO, label9);
methodVisitor.visitLabel(label8);
methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/Boolean", "FALSE", "Ljava/lang/Boolean;");
methodVisitor.visitLabel(label9);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLdcInsn(new Long(1129496936115180762L));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/rmi/server/RemoteRef", "invoke", "(Ljava/rmi/Remote;Ljava/lang/reflect/Method;[Ljava/lang/Object;J)Ljava/lang/Object;", true);
methodVisitor.visitInsn(POP);
methodVisitor.visitLabel(label1);
Label label10 = new Label();
methodVisitor.visitJumpInsn(GOTO, label10);
methodVisitor.visitLabel(label2);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label4);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label5);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitTypeInsn(NEW, "java/rmi/UnexpectedException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("undeclared checked exception");
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/rmi/UnexpectedException", "<init>", "(Ljava/lang/String;Ljava/lang/Exception;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label10);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(7, 5);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "checkExists", "(Lorg/apache/openejb/quartz/JobKey;)Z", null, new String[] { "java/rmi/RemoteException", "org/apache/openejb/quartz/SchedulerException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label1, "java/lang/RuntimeException");
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/rmi/RemoteException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, "org/apache/openejb/quartz/SchedulerException");
Label label4 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label4, "java/lang/Exception");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "java/rmi/server/RemoteObject", "ref", "Ljava/rmi/server/RemoteRef;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_checkExists_3", "Ljava/lang/reflect/Method;");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Object");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLdcInsn(new Long(-5409554300431077992L));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/rmi/server/RemoteRef", "invoke", "(Ljava/rmi/Remote;Ljava/lang/reflect/Method;[Ljava/lang/Object;J)Ljava/lang/Object;", true);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/Boolean");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Boolean", "booleanValue", "()Z", false);
methodVisitor.visitInsn(IRETURN);
methodVisitor.visitLabel(label1);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label2);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label4);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitTypeInsn(NEW, "java/rmi/UnexpectedException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("undeclared checked exception");
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/rmi/UnexpectedException", "<init>", "(Ljava/lang/String;Ljava/lang/Exception;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitMaxs(7, 3);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "checkExists", "(Lorg/apache/openejb/quartz/TriggerKey;)Z", null, new String[] { "java/rmi/RemoteException", "org/apache/openejb/quartz/SchedulerException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label1, "java/lang/RuntimeException");
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/rmi/RemoteException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, "org/apache/openejb/quartz/SchedulerException");
Label label4 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label4, "java/lang/Exception");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "java/rmi/server/RemoteObject", "ref", "Ljava/rmi/server/RemoteRef;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_checkExists_4", "Ljava/lang/reflect/Method;");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Object");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLdcInsn(new Long(57742068790347073L));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/rmi/server/RemoteRef", "invoke", "(Ljava/rmi/Remote;Ljava/lang/reflect/Method;[Ljava/lang/Object;J)Ljava/lang/Object;", true);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/Boolean");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Boolean", "booleanValue", "()Z", false);
methodVisitor.visitInsn(IRETURN);
methodVisitor.visitLabel(label1);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label2);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label4);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitTypeInsn(NEW, "java/rmi/UnexpectedException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("undeclared checked exception");
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/rmi/UnexpectedException", "<init>", "(Ljava/lang/String;Ljava/lang/Exception;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitMaxs(7, 3);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_STATIC | ACC_SYNTHETIC, "class$", "(Ljava/lang/String;)Ljava/lang/Class;", null, null);
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label1, "java/lang/ClassNotFoundException");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/Class", "forName", "(Ljava/lang/String;)Ljava/lang/Class;", false);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label1);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitTypeInsn(NEW, "java/lang/NoClassDefFoundError");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Throwable", "getMessage", "()Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/NoClassDefFoundError", "<init>", "(Ljava/lang/String;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitMaxs(3, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "clear", "()V", null, new String[] { "java/rmi/RemoteException", "org/apache/openejb/quartz/SchedulerException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/lang/RuntimeException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, "java/rmi/RemoteException");
Label label4 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label4, "org/apache/openejb/quartz/SchedulerException");
Label label5 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label5, "java/lang/Exception");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "java/rmi/server/RemoteObject", "ref", "Ljava/rmi/server/RemoteRef;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_clear_5", "Ljava/lang/reflect/Method;");
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitLdcInsn(new Long(-7475254351993695499L));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/rmi/server/RemoteRef", "invoke", "(Ljava/rmi/Remote;Ljava/lang/reflect/Method;[Ljava/lang/Object;J)Ljava/lang/Object;", true);
methodVisitor.visitInsn(POP);
methodVisitor.visitLabel(label1);
Label label6 = new Label();
methodVisitor.visitJumpInsn(GOTO, label6);
methodVisitor.visitLabel(label2);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label4);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label5);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitTypeInsn(NEW, "java/rmi/UnexpectedException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("undeclared checked exception");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/rmi/UnexpectedException", "<init>", "(Ljava/lang/String;Ljava/lang/Exception;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label6);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(6, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "deleteCalendar", "(Ljava/lang/String;)Z", null, new String[] { "java/rmi/RemoteException", "org/apache/openejb/quartz/SchedulerException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label1, "java/lang/RuntimeException");
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/rmi/RemoteException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, "org/apache/openejb/quartz/SchedulerException");
Label label4 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label4, "java/lang/Exception");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "java/rmi/server/RemoteObject", "ref", "Ljava/rmi/server/RemoteRef;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_deleteCalendar_6", "Ljava/lang/reflect/Method;");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Object");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLdcInsn(new Long(4621799193941576495L));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/rmi/server/RemoteRef", "invoke", "(Ljava/rmi/Remote;Ljava/lang/reflect/Method;[Ljava/lang/Object;J)Ljava/lang/Object;", true);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/Boolean");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Boolean", "booleanValue", "()Z", false);
methodVisitor.visitInsn(IRETURN);
methodVisitor.visitLabel(label1);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label2);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label4);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitTypeInsn(NEW, "java/rmi/UnexpectedException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("undeclared checked exception");
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/rmi/UnexpectedException", "<init>", "(Ljava/lang/String;Ljava/lang/Exception;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitMaxs(7, 3);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "deleteJob", "(Lorg/apache/openejb/quartz/JobKey;)Z", null, new String[] { "java/rmi/RemoteException", "org/apache/openejb/quartz/SchedulerException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label1, "java/lang/RuntimeException");
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/rmi/RemoteException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, "org/apache/openejb/quartz/SchedulerException");
Label label4 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label4, "java/lang/Exception");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "java/rmi/server/RemoteObject", "ref", "Ljava/rmi/server/RemoteRef;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_deleteJob_7", "Ljava/lang/reflect/Method;");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Object");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLdcInsn(new Long(-3057293324488607018L));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/rmi/server/RemoteRef", "invoke", "(Ljava/rmi/Remote;Ljava/lang/reflect/Method;[Ljava/lang/Object;J)Ljava/lang/Object;", true);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/Boolean");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Boolean", "booleanValue", "()Z", false);
methodVisitor.visitInsn(IRETURN);
methodVisitor.visitLabel(label1);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label2);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label4);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitTypeInsn(NEW, "java/rmi/UnexpectedException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("undeclared checked exception");
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/rmi/UnexpectedException", "<init>", "(Ljava/lang/String;Ljava/lang/Exception;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitMaxs(7, 3);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "deleteJobs", "(Ljava/util/List;)Z", null, new String[] { "java/rmi/RemoteException", "org/apache/openejb/quartz/SchedulerException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label1, "java/lang/RuntimeException");
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/rmi/RemoteException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, "org/apache/openejb/quartz/SchedulerException");
Label label4 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label4, "java/lang/Exception");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "java/rmi/server/RemoteObject", "ref", "Ljava/rmi/server/RemoteRef;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_deleteJobs_8", "Ljava/lang/reflect/Method;");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Object");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLdcInsn(new Long(7613446947728959209L));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/rmi/server/RemoteRef", "invoke", "(Ljava/rmi/Remote;Ljava/lang/reflect/Method;[Ljava/lang/Object;J)Ljava/lang/Object;", true);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/Boolean");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Boolean", "booleanValue", "()Z", false);
methodVisitor.visitInsn(IRETURN);
methodVisitor.visitLabel(label1);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label2);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label4);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitTypeInsn(NEW, "java/rmi/UnexpectedException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("undeclared checked exception");
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/rmi/UnexpectedException", "<init>", "(Ljava/lang/String;Ljava/lang/Exception;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitMaxs(7, 3);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "getCalendar", "(Ljava/lang/String;)Lorg/apache/openejb/quartz/Calendar;", null, new String[] { "java/rmi/RemoteException", "org/apache/openejb/quartz/SchedulerException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label1, "java/lang/RuntimeException");
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/rmi/RemoteException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, "org/apache/openejb/quartz/SchedulerException");
Label label4 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label4, "java/lang/Exception");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "java/rmi/server/RemoteObject", "ref", "Ljava/rmi/server/RemoteRef;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_getCalendar_9", "Ljava/lang/reflect/Method;");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Object");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLdcInsn(new Long(7476199188467217146L));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/rmi/server/RemoteRef", "invoke", "(Ljava/rmi/Remote;Ljava/lang/reflect/Method;[Ljava/lang/Object;J)Ljava/lang/Object;", true);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitTypeInsn(CHECKCAST, "org/apache/openejb/quartz/Calendar");
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label1);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label2);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label4);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitTypeInsn(NEW, "java/rmi/UnexpectedException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("undeclared checked exception");
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/rmi/UnexpectedException", "<init>", "(Ljava/lang/String;Ljava/lang/Exception;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitMaxs(7, 3);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "getCalendarNames", "()Ljava/util/List;", null, new String[] { "java/rmi/RemoteException", "org/apache/openejb/quartz/SchedulerException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label1, "java/lang/RuntimeException");
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/rmi/RemoteException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, "org/apache/openejb/quartz/SchedulerException");
Label label4 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label4, "java/lang/Exception");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "java/rmi/server/RemoteObject", "ref", "Ljava/rmi/server/RemoteRef;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_getCalendarNames_10", "Ljava/lang/reflect/Method;");
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitLdcInsn(new Long(-4042711865985645589L));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/rmi/server/RemoteRef", "invoke", "(Ljava/rmi/Remote;Ljava/lang/reflect/Method;[Ljava/lang/Object;J)Ljava/lang/Object;", true);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitTypeInsn(CHECKCAST, "java/util/List");
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label1);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label2);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label4);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitTypeInsn(NEW, "java/rmi/UnexpectedException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("undeclared checked exception");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/rmi/UnexpectedException", "<init>", "(Ljava/lang/String;Ljava/lang/Exception;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitMaxs(6, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "getCurrentlyExecutingJobs", "()Ljava/util/List;", null, new String[] { "java/rmi/RemoteException", "org/apache/openejb/quartz/SchedulerException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label1, "java/lang/RuntimeException");
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/rmi/RemoteException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, "org/apache/openejb/quartz/SchedulerException");
Label label4 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label4, "java/lang/Exception");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "java/rmi/server/RemoteObject", "ref", "Ljava/rmi/server/RemoteRef;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_getCurrentlyExecutingJobs_11", "Ljava/lang/reflect/Method;");
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitLdcInsn(new Long(5767551841304860517L));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/rmi/server/RemoteRef", "invoke", "(Ljava/rmi/Remote;Ljava/lang/reflect/Method;[Ljava/lang/Object;J)Ljava/lang/Object;", true);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitTypeInsn(CHECKCAST, "java/util/List");
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label1);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label2);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label4);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitTypeInsn(NEW, "java/rmi/UnexpectedException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("undeclared checked exception");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/rmi/UnexpectedException", "<init>", "(Ljava/lang/String;Ljava/lang/Exception;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitMaxs(6, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "getJobDetail", "(Lorg/apache/openejb/quartz/JobKey;)Lorg/apache/openejb/quartz/JobDetail;", null, new String[] { "java/rmi/RemoteException", "org/apache/openejb/quartz/SchedulerException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label1, "java/lang/RuntimeException");
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/rmi/RemoteException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, "org/apache/openejb/quartz/SchedulerException");
Label label4 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label4, "java/lang/Exception");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "java/rmi/server/RemoteObject", "ref", "Ljava/rmi/server/RemoteRef;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_getJobDetail_12", "Ljava/lang/reflect/Method;");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Object");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLdcInsn(new Long(-5890147489272798972L));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/rmi/server/RemoteRef", "invoke", "(Ljava/rmi/Remote;Ljava/lang/reflect/Method;[Ljava/lang/Object;J)Ljava/lang/Object;", true);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitTypeInsn(CHECKCAST, "org/apache/openejb/quartz/JobDetail");
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label1);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label2);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label4);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitTypeInsn(NEW, "java/rmi/UnexpectedException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("undeclared checked exception");
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/rmi/UnexpectedException", "<init>", "(Ljava/lang/String;Ljava/lang/Exception;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitMaxs(7, 3);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "getJobGroupNames", "()Ljava/util/List;", null, new String[] { "java/rmi/RemoteException", "org/apache/openejb/quartz/SchedulerException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label1, "java/lang/RuntimeException");
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/rmi/RemoteException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, "org/apache/openejb/quartz/SchedulerException");
Label label4 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label4, "java/lang/Exception");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "java/rmi/server/RemoteObject", "ref", "Ljava/rmi/server/RemoteRef;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_getJobGroupNames_13", "Ljava/lang/reflect/Method;");
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitLdcInsn(new Long(-8455486033245212483L));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/rmi/server/RemoteRef", "invoke", "(Ljava/rmi/Remote;Ljava/lang/reflect/Method;[Ljava/lang/Object;J)Ljava/lang/Object;", true);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitTypeInsn(CHECKCAST, "java/util/List");
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label1);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label2);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label4);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitTypeInsn(NEW, "java/rmi/UnexpectedException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("undeclared checked exception");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/rmi/UnexpectedException", "<init>", "(Ljava/lang/String;Ljava/lang/Exception;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitMaxs(6, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "getJobKeys", "(Lorg/apache/openejb/quartz/impl/matchers/GroupMatcher;)Ljava/util/Set;", null, new String[] { "java/rmi/RemoteException", "org/apache/openejb/quartz/SchedulerException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label1, "java/lang/RuntimeException");
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/rmi/RemoteException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, "org/apache/openejb/quartz/SchedulerException");
Label label4 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label4, "java/lang/Exception");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "java/rmi/server/RemoteObject", "ref", "Ljava/rmi/server/RemoteRef;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_getJobKeys_14", "Ljava/lang/reflect/Method;");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Object");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLdcInsn(new Long(5516129892023529995L));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/rmi/server/RemoteRef", "invoke", "(Ljava/rmi/Remote;Ljava/lang/reflect/Method;[Ljava/lang/Object;J)Ljava/lang/Object;", true);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitTypeInsn(CHECKCAST, "java/util/Set");
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label1);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label2);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label4);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitTypeInsn(NEW, "java/rmi/UnexpectedException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("undeclared checked exception");
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/rmi/UnexpectedException", "<init>", "(Ljava/lang/String;Ljava/lang/Exception;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitMaxs(7, 3);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "getJobStoreClass", "()Ljava/lang/Class;", null, new String[] { "java/rmi/RemoteException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label1, "java/lang/RuntimeException");
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/rmi/RemoteException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, "java/lang/Exception");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "java/rmi/server/RemoteObject", "ref", "Ljava/rmi/server/RemoteRef;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_getJobStoreClass_15", "Ljava/lang/reflect/Method;");
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitLdcInsn(new Long(6705397913929502666L));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/rmi/server/RemoteRef", "invoke", "(Ljava/rmi/Remote;Ljava/lang/reflect/Method;[Ljava/lang/Object;J)Ljava/lang/Object;", true);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/Class");
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label1);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label2);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitTypeInsn(NEW, "java/rmi/UnexpectedException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("undeclared checked exception");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/rmi/UnexpectedException", "<init>", "(Ljava/lang/String;Ljava/lang/Exception;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitMaxs(6, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "getPausedTriggerGroups", "()Ljava/util/Set;", null, new String[] { "java/rmi/RemoteException", "org/apache/openejb/quartz/SchedulerException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label1, "java/lang/RuntimeException");
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/rmi/RemoteException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, "org/apache/openejb/quartz/SchedulerException");
Label label4 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label4, "java/lang/Exception");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "java/rmi/server/RemoteObject", "ref", "Ljava/rmi/server/RemoteRef;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_getPausedTriggerGroups_16", "Ljava/lang/reflect/Method;");
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitLdcInsn(new Long(-3055688590637594456L));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/rmi/server/RemoteRef", "invoke", "(Ljava/rmi/Remote;Ljava/lang/reflect/Method;[Ljava/lang/Object;J)Ljava/lang/Object;", true);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitTypeInsn(CHECKCAST, "java/util/Set");
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label1);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label2);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label4);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitTypeInsn(NEW, "java/rmi/UnexpectedException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("undeclared checked exception");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/rmi/UnexpectedException", "<init>", "(Ljava/lang/String;Ljava/lang/Exception;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitMaxs(6, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "getSchedulerContext", "()Lorg/apache/openejb/quartz/SchedulerContext;", null, new String[] { "java/rmi/RemoteException", "org/apache/openejb/quartz/SchedulerException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label1, "java/lang/RuntimeException");
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/rmi/RemoteException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, "org/apache/openejb/quartz/SchedulerException");
Label label4 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label4, "java/lang/Exception");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "java/rmi/server/RemoteObject", "ref", "Ljava/rmi/server/RemoteRef;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_getSchedulerContext_17", "Ljava/lang/reflect/Method;");
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitLdcInsn(new Long(2814359591403475563L));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/rmi/server/RemoteRef", "invoke", "(Ljava/rmi/Remote;Ljava/lang/reflect/Method;[Ljava/lang/Object;J)Ljava/lang/Object;", true);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitTypeInsn(CHECKCAST, "org/apache/openejb/quartz/SchedulerContext");
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label1);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label2);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label4);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitTypeInsn(NEW, "java/rmi/UnexpectedException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("undeclared checked exception");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/rmi/UnexpectedException", "<init>", "(Ljava/lang/String;Ljava/lang/Exception;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitMaxs(6, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "getSchedulerInstanceId", "()Ljava/lang/String;", null, new String[] { "java/rmi/RemoteException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label1, "java/lang/RuntimeException");
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/rmi/RemoteException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, "java/lang/Exception");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "java/rmi/server/RemoteObject", "ref", "Ljava/rmi/server/RemoteRef;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_getSchedulerInstanceId_18", "Ljava/lang/reflect/Method;");
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitLdcInsn(new Long(-2454925768252868567L));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/rmi/server/RemoteRef", "invoke", "(Ljava/rmi/Remote;Ljava/lang/reflect/Method;[Ljava/lang/Object;J)Ljava/lang/Object;", true);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/String");
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label1);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label2);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitTypeInsn(NEW, "java/rmi/UnexpectedException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("undeclared checked exception");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/rmi/UnexpectedException", "<init>", "(Ljava/lang/String;Ljava/lang/Exception;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitMaxs(6, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "getSchedulerName", "()Ljava/lang/String;", null, new String[] { "java/rmi/RemoteException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label1, "java/lang/RuntimeException");
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/rmi/RemoteException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, "java/lang/Exception");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "java/rmi/server/RemoteObject", "ref", "Ljava/rmi/server/RemoteRef;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_getSchedulerName_19", "Ljava/lang/reflect/Method;");
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitLdcInsn(new Long(1038196595245667445L));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/rmi/server/RemoteRef", "invoke", "(Ljava/rmi/Remote;Ljava/lang/reflect/Method;[Ljava/lang/Object;J)Ljava/lang/Object;", true);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/String");
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label1);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label2);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitTypeInsn(NEW, "java/rmi/UnexpectedException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("undeclared checked exception");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/rmi/UnexpectedException", "<init>", "(Ljava/lang/String;Ljava/lang/Exception;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitMaxs(6, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "getThreadPoolClass", "()Ljava/lang/Class;", null, new String[] { "java/rmi/RemoteException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label1, "java/lang/RuntimeException");
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/rmi/RemoteException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, "java/lang/Exception");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "java/rmi/server/RemoteObject", "ref", "Ljava/rmi/server/RemoteRef;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_getThreadPoolClass_20", "Ljava/lang/reflect/Method;");
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitLdcInsn(new Long(-706336661940287388L));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/rmi/server/RemoteRef", "invoke", "(Ljava/rmi/Remote;Ljava/lang/reflect/Method;[Ljava/lang/Object;J)Ljava/lang/Object;", true);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/Class");
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label1);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label2);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitTypeInsn(NEW, "java/rmi/UnexpectedException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("undeclared checked exception");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/rmi/UnexpectedException", "<init>", "(Ljava/lang/String;Ljava/lang/Exception;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitMaxs(6, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "getThreadPoolSize", "()I", null, new String[] { "java/rmi/RemoteException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label1, "java/lang/RuntimeException");
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/rmi/RemoteException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, "java/lang/Exception");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "java/rmi/server/RemoteObject", "ref", "Ljava/rmi/server/RemoteRef;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_getThreadPoolSize_21", "Ljava/lang/reflect/Method;");
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitLdcInsn(new Long(6528392066641712137L));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/rmi/server/RemoteRef", "invoke", "(Ljava/rmi/Remote;Ljava/lang/reflect/Method;[Ljava/lang/Object;J)Ljava/lang/Object;", true);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/Integer");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Integer", "intValue", "()I", false);
methodVisitor.visitInsn(IRETURN);
methodVisitor.visitLabel(label1);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label2);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitTypeInsn(NEW, "java/rmi/UnexpectedException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("undeclared checked exception");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/rmi/UnexpectedException", "<init>", "(Ljava/lang/String;Ljava/lang/Exception;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitMaxs(6, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "getTrigger", "(Lorg/apache/openejb/quartz/TriggerKey;)Lorg/apache/openejb/quartz/Trigger;", null, new String[] { "java/rmi/RemoteException", "org/apache/openejb/quartz/SchedulerException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label1, "java/lang/RuntimeException");
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/rmi/RemoteException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, "org/apache/openejb/quartz/SchedulerException");
Label label4 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label4, "java/lang/Exception");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "java/rmi/server/RemoteObject", "ref", "Ljava/rmi/server/RemoteRef;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_getTrigger_22", "Ljava/lang/reflect/Method;");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Object");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLdcInsn(new Long(-8135458059745415503L));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/rmi/server/RemoteRef", "invoke", "(Ljava/rmi/Remote;Ljava/lang/reflect/Method;[Ljava/lang/Object;J)Ljava/lang/Object;", true);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitTypeInsn(CHECKCAST, "org/apache/openejb/quartz/Trigger");
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label1);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label2);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label4);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitTypeInsn(NEW, "java/rmi/UnexpectedException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("undeclared checked exception");
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/rmi/UnexpectedException", "<init>", "(Ljava/lang/String;Ljava/lang/Exception;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitMaxs(7, 3);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "getTriggerGroupNames", "()Ljava/util/List;", null, new String[] { "java/rmi/RemoteException", "org/apache/openejb/quartz/SchedulerException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label1, "java/lang/RuntimeException");
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/rmi/RemoteException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, "org/apache/openejb/quartz/SchedulerException");
Label label4 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label4, "java/lang/Exception");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "java/rmi/server/RemoteObject", "ref", "Ljava/rmi/server/RemoteRef;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_getTriggerGroupNames_23", "Ljava/lang/reflect/Method;");
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitLdcInsn(new Long(-1425625447055098000L));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/rmi/server/RemoteRef", "invoke", "(Ljava/rmi/Remote;Ljava/lang/reflect/Method;[Ljava/lang/Object;J)Ljava/lang/Object;", true);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitTypeInsn(CHECKCAST, "java/util/List");
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label1);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label2);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label4);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitTypeInsn(NEW, "java/rmi/UnexpectedException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("undeclared checked exception");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/rmi/UnexpectedException", "<init>", "(Ljava/lang/String;Ljava/lang/Exception;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitMaxs(6, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "getTriggerKeys", "(Lorg/apache/openejb/quartz/impl/matchers/GroupMatcher;)Ljava/util/Set;", null, new String[] { "java/rmi/RemoteException", "org/apache/openejb/quartz/SchedulerException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label1, "java/lang/RuntimeException");
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/rmi/RemoteException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, "org/apache/openejb/quartz/SchedulerException");
Label label4 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label4, "java/lang/Exception");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "java/rmi/server/RemoteObject", "ref", "Ljava/rmi/server/RemoteRef;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_getTriggerKeys_24", "Ljava/lang/reflect/Method;");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Object");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLdcInsn(new Long(-833881061725726505L));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/rmi/server/RemoteRef", "invoke", "(Ljava/rmi/Remote;Ljava/lang/reflect/Method;[Ljava/lang/Object;J)Ljava/lang/Object;", true);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitTypeInsn(CHECKCAST, "java/util/Set");
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label1);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label2);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label4);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitTypeInsn(NEW, "java/rmi/UnexpectedException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("undeclared checked exception");
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/rmi/UnexpectedException", "<init>", "(Ljava/lang/String;Ljava/lang/Exception;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitMaxs(7, 3);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "getTriggerState", "(Lorg/apache/openejb/quartz/TriggerKey;)Lorg/apache/openejb/quartz/Trigger$TriggerState;", null, new String[] { "java/rmi/RemoteException", "org/apache/openejb/quartz/SchedulerException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label1, "java/lang/RuntimeException");
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/rmi/RemoteException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, "org/apache/openejb/quartz/SchedulerException");
Label label4 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label4, "java/lang/Exception");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "java/rmi/server/RemoteObject", "ref", "Ljava/rmi/server/RemoteRef;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_getTriggerState_25", "Ljava/lang/reflect/Method;");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Object");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLdcInsn(new Long(-5299675517853200699L));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/rmi/server/RemoteRef", "invoke", "(Ljava/rmi/Remote;Ljava/lang/reflect/Method;[Ljava/lang/Object;J)Ljava/lang/Object;", true);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitTypeInsn(CHECKCAST, "org/apache/openejb/quartz/Trigger$TriggerState");
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label1);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label2);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label4);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitTypeInsn(NEW, "java/rmi/UnexpectedException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("undeclared checked exception");
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/rmi/UnexpectedException", "<init>", "(Ljava/lang/String;Ljava/lang/Exception;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitMaxs(7, 3);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "getTriggersOfJob", "(Lorg/apache/openejb/quartz/JobKey;)Ljava/util/List;", null, new String[] { "java/rmi/RemoteException", "org/apache/openejb/quartz/SchedulerException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label1, "java/lang/RuntimeException");
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/rmi/RemoteException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, "org/apache/openejb/quartz/SchedulerException");
Label label4 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label4, "java/lang/Exception");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "java/rmi/server/RemoteObject", "ref", "Ljava/rmi/server/RemoteRef;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_getTriggersOfJob_26", "Ljava/lang/reflect/Method;");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Object");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLdcInsn(new Long(4987568461050139134L));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/rmi/server/RemoteRef", "invoke", "(Ljava/rmi/Remote;Ljava/lang/reflect/Method;[Ljava/lang/Object;J)Ljava/lang/Object;", true);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitTypeInsn(CHECKCAST, "java/util/List");
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label1);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label2);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label4);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitTypeInsn(NEW, "java/rmi/UnexpectedException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("undeclared checked exception");
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/rmi/UnexpectedException", "<init>", "(Ljava/lang/String;Ljava/lang/Exception;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitMaxs(7, 3);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "getVersion", "()Ljava/lang/String;", null, new String[] { "java/rmi/RemoteException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label1, "java/lang/RuntimeException");
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/rmi/RemoteException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, "java/lang/Exception");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "java/rmi/server/RemoteObject", "ref", "Ljava/rmi/server/RemoteRef;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_getVersion_27", "Ljava/lang/reflect/Method;");
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitLdcInsn(new Long(-8081107751519807347L));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/rmi/server/RemoteRef", "invoke", "(Ljava/rmi/Remote;Ljava/lang/reflect/Method;[Ljava/lang/Object;J)Ljava/lang/Object;", true);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/String");
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label1);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label2);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitTypeInsn(NEW, "java/rmi/UnexpectedException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("undeclared checked exception");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/rmi/UnexpectedException", "<init>", "(Ljava/lang/String;Ljava/lang/Exception;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitMaxs(6, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "interrupt", "(Ljava/lang/String;)Z", null, new String[] { "java/rmi/RemoteException", "org/apache/openejb/quartz/UnableToInterruptJobException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label1, "java/lang/RuntimeException");
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/rmi/RemoteException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, "org/apache/openejb/quartz/UnableToInterruptJobException");
Label label4 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label4, "java/lang/Exception");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "java/rmi/server/RemoteObject", "ref", "Ljava/rmi/server/RemoteRef;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_interrupt_28", "Ljava/lang/reflect/Method;");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Object");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLdcInsn(new Long(256262298724115780L));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/rmi/server/RemoteRef", "invoke", "(Ljava/rmi/Remote;Ljava/lang/reflect/Method;[Ljava/lang/Object;J)Ljava/lang/Object;", true);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/Boolean");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Boolean", "booleanValue", "()Z", false);
methodVisitor.visitInsn(IRETURN);
methodVisitor.visitLabel(label1);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label2);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label4);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitTypeInsn(NEW, "java/rmi/UnexpectedException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("undeclared checked exception");
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/rmi/UnexpectedException", "<init>", "(Ljava/lang/String;Ljava/lang/Exception;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitMaxs(7, 3);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "interrupt", "(Lorg/apache/openejb/quartz/JobKey;)Z", null, new String[] { "java/rmi/RemoteException", "org/apache/openejb/quartz/UnableToInterruptJobException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label1, "java/lang/RuntimeException");
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/rmi/RemoteException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, "org/apache/openejb/quartz/UnableToInterruptJobException");
Label label4 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label4, "java/lang/Exception");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "java/rmi/server/RemoteObject", "ref", "Ljava/rmi/server/RemoteRef;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_interrupt_29", "Ljava/lang/reflect/Method;");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Object");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLdcInsn(new Long(-4185636327079289011L));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/rmi/server/RemoteRef", "invoke", "(Ljava/rmi/Remote;Ljava/lang/reflect/Method;[Ljava/lang/Object;J)Ljava/lang/Object;", true);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/Boolean");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Boolean", "booleanValue", "()Z", false);
methodVisitor.visitInsn(IRETURN);
methodVisitor.visitLabel(label1);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label2);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label4);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitTypeInsn(NEW, "java/rmi/UnexpectedException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("undeclared checked exception");
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/rmi/UnexpectedException", "<init>", "(Ljava/lang/String;Ljava/lang/Exception;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitMaxs(7, 3);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "isClustered", "()Z", null, new String[] { "java/rmi/RemoteException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label1, "java/lang/RuntimeException");
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/rmi/RemoteException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, "java/lang/Exception");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "java/rmi/server/RemoteObject", "ref", "Ljava/rmi/server/RemoteRef;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_isClustered_30", "Ljava/lang/reflect/Method;");
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitLdcInsn(new Long(8772462407279794129L));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/rmi/server/RemoteRef", "invoke", "(Ljava/rmi/Remote;Ljava/lang/reflect/Method;[Ljava/lang/Object;J)Ljava/lang/Object;", true);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/Boolean");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Boolean", "booleanValue", "()Z", false);
methodVisitor.visitInsn(IRETURN);
methodVisitor.visitLabel(label1);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label2);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitTypeInsn(NEW, "java/rmi/UnexpectedException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("undeclared checked exception");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/rmi/UnexpectedException", "<init>", "(Ljava/lang/String;Ljava/lang/Exception;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitMaxs(6, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "isInStandbyMode", "()Z", null, new String[] { "java/rmi/RemoteException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label1, "java/lang/RuntimeException");
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/rmi/RemoteException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, "java/lang/Exception");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "java/rmi/server/RemoteObject", "ref", "Ljava/rmi/server/RemoteRef;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_isInStandbyMode_31", "Ljava/lang/reflect/Method;");
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitLdcInsn(new Long(809977841435240287L));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/rmi/server/RemoteRef", "invoke", "(Ljava/rmi/Remote;Ljava/lang/reflect/Method;[Ljava/lang/Object;J)Ljava/lang/Object;", true);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/Boolean");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Boolean", "booleanValue", "()Z", false);
methodVisitor.visitInsn(IRETURN);
methodVisitor.visitLabel(label1);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label2);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitTypeInsn(NEW, "java/rmi/UnexpectedException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("undeclared checked exception");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/rmi/UnexpectedException", "<init>", "(Ljava/lang/String;Ljava/lang/Exception;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitMaxs(6, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "isShutdown", "()Z", null, new String[] { "java/rmi/RemoteException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label1, "java/lang/RuntimeException");
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/rmi/RemoteException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, "java/lang/Exception");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "java/rmi/server/RemoteObject", "ref", "Ljava/rmi/server/RemoteRef;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_isShutdown_32", "Ljava/lang/reflect/Method;");
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitLdcInsn(new Long(6424449119484905518L));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/rmi/server/RemoteRef", "invoke", "(Ljava/rmi/Remote;Ljava/lang/reflect/Method;[Ljava/lang/Object;J)Ljava/lang/Object;", true);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/Boolean");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Boolean", "booleanValue", "()Z", false);
methodVisitor.visitInsn(IRETURN);
methodVisitor.visitLabel(label1);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label2);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitTypeInsn(NEW, "java/rmi/UnexpectedException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("undeclared checked exception");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/rmi/UnexpectedException", "<init>", "(Ljava/lang/String;Ljava/lang/Exception;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitMaxs(6, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "numJobsExecuted", "()I", null, new String[] { "java/rmi/RemoteException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label1, "java/lang/RuntimeException");
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/rmi/RemoteException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, "java/lang/Exception");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "java/rmi/server/RemoteObject", "ref", "Ljava/rmi/server/RemoteRef;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_numJobsExecuted_33", "Ljava/lang/reflect/Method;");
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitLdcInsn(new Long(3699847707830503805L));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/rmi/server/RemoteRef", "invoke", "(Ljava/rmi/Remote;Ljava/lang/reflect/Method;[Ljava/lang/Object;J)Ljava/lang/Object;", true);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/Integer");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Integer", "intValue", "()I", false);
methodVisitor.visitInsn(IRETURN);
methodVisitor.visitLabel(label1);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label2);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitTypeInsn(NEW, "java/rmi/UnexpectedException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("undeclared checked exception");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/rmi/UnexpectedException", "<init>", "(Ljava/lang/String;Ljava/lang/Exception;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitMaxs(6, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "pauseAll", "()V", null, new String[] { "java/rmi/RemoteException", "org/apache/openejb/quartz/SchedulerException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/lang/RuntimeException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, "java/rmi/RemoteException");
Label label4 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label4, "org/apache/openejb/quartz/SchedulerException");
Label label5 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label5, "java/lang/Exception");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "java/rmi/server/RemoteObject", "ref", "Ljava/rmi/server/RemoteRef;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_pauseAll_34", "Ljava/lang/reflect/Method;");
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitLdcInsn(new Long(5457255371237476599L));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/rmi/server/RemoteRef", "invoke", "(Ljava/rmi/Remote;Ljava/lang/reflect/Method;[Ljava/lang/Object;J)Ljava/lang/Object;", true);
methodVisitor.visitInsn(POP);
methodVisitor.visitLabel(label1);
Label label6 = new Label();
methodVisitor.visitJumpInsn(GOTO, label6);
methodVisitor.visitLabel(label2);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label4);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label5);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitTypeInsn(NEW, "java/rmi/UnexpectedException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("undeclared checked exception");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/rmi/UnexpectedException", "<init>", "(Ljava/lang/String;Ljava/lang/Exception;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label6);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(6, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "pauseJob", "(Lorg/apache/openejb/quartz/JobKey;)V", null, new String[] { "java/rmi/RemoteException", "org/apache/openejb/quartz/SchedulerException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/lang/RuntimeException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, "java/rmi/RemoteException");
Label label4 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label4, "org/apache/openejb/quartz/SchedulerException");
Label label5 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label5, "java/lang/Exception");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "java/rmi/server/RemoteObject", "ref", "Ljava/rmi/server/RemoteRef;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_pauseJob_35", "Ljava/lang/reflect/Method;");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Object");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLdcInsn(new Long(8209397623379863913L));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/rmi/server/RemoteRef", "invoke", "(Ljava/rmi/Remote;Ljava/lang/reflect/Method;[Ljava/lang/Object;J)Ljava/lang/Object;", true);
methodVisitor.visitInsn(POP);
methodVisitor.visitLabel(label1);
Label label6 = new Label();
methodVisitor.visitJumpInsn(GOTO, label6);
methodVisitor.visitLabel(label2);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label4);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label5);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitTypeInsn(NEW, "java/rmi/UnexpectedException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("undeclared checked exception");
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/rmi/UnexpectedException", "<init>", "(Ljava/lang/String;Ljava/lang/Exception;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label6);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(7, 3);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "pauseJobs", "(Lorg/apache/openejb/quartz/impl/matchers/GroupMatcher;)V", null, new String[] { "java/rmi/RemoteException", "org/apache/openejb/quartz/SchedulerException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/lang/RuntimeException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, "java/rmi/RemoteException");
Label label4 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label4, "org/apache/openejb/quartz/SchedulerException");
Label label5 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label5, "java/lang/Exception");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "java/rmi/server/RemoteObject", "ref", "Ljava/rmi/server/RemoteRef;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_pauseJobs_36", "Ljava/lang/reflect/Method;");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Object");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLdcInsn(new Long(8348393716035813534L));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/rmi/server/RemoteRef", "invoke", "(Ljava/rmi/Remote;Ljava/lang/reflect/Method;[Ljava/lang/Object;J)Ljava/lang/Object;", true);
methodVisitor.visitInsn(POP);
methodVisitor.visitLabel(label1);
Label label6 = new Label();
methodVisitor.visitJumpInsn(GOTO, label6);
methodVisitor.visitLabel(label2);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label4);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label5);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitTypeInsn(NEW, "java/rmi/UnexpectedException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("undeclared checked exception");
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/rmi/UnexpectedException", "<init>", "(Ljava/lang/String;Ljava/lang/Exception;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label6);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(7, 3);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "pauseTrigger", "(Lorg/apache/openejb/quartz/TriggerKey;)V", null, new String[] { "java/rmi/RemoteException", "org/apache/openejb/quartz/SchedulerException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/lang/RuntimeException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, "java/rmi/RemoteException");
Label label4 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label4, "org/apache/openejb/quartz/SchedulerException");
Label label5 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label5, "java/lang/Exception");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "java/rmi/server/RemoteObject", "ref", "Ljava/rmi/server/RemoteRef;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_pauseTrigger_37", "Ljava/lang/reflect/Method;");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Object");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLdcInsn(new Long(-1556555911706012384L));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/rmi/server/RemoteRef", "invoke", "(Ljava/rmi/Remote;Ljava/lang/reflect/Method;[Ljava/lang/Object;J)Ljava/lang/Object;", true);
methodVisitor.visitInsn(POP);
methodVisitor.visitLabel(label1);
Label label6 = new Label();
methodVisitor.visitJumpInsn(GOTO, label6);
methodVisitor.visitLabel(label2);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label4);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label5);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitTypeInsn(NEW, "java/rmi/UnexpectedException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("undeclared checked exception");
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/rmi/UnexpectedException", "<init>", "(Ljava/lang/String;Ljava/lang/Exception;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label6);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(7, 3);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "pauseTriggers", "(Lorg/apache/openejb/quartz/impl/matchers/GroupMatcher;)V", null, new String[] { "java/rmi/RemoteException", "org/apache/openejb/quartz/SchedulerException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/lang/RuntimeException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, "java/rmi/RemoteException");
Label label4 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label4, "org/apache/openejb/quartz/SchedulerException");
Label label5 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label5, "java/lang/Exception");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "java/rmi/server/RemoteObject", "ref", "Ljava/rmi/server/RemoteRef;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_pauseTriggers_38", "Ljava/lang/reflect/Method;");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Object");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLdcInsn(new Long(-7673129639132463315L));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/rmi/server/RemoteRef", "invoke", "(Ljava/rmi/Remote;Ljava/lang/reflect/Method;[Ljava/lang/Object;J)Ljava/lang/Object;", true);
methodVisitor.visitInsn(POP);
methodVisitor.visitLabel(label1);
Label label6 = new Label();
methodVisitor.visitJumpInsn(GOTO, label6);
methodVisitor.visitLabel(label2);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label4);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label5);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitTypeInsn(NEW, "java/rmi/UnexpectedException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("undeclared checked exception");
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/rmi/UnexpectedException", "<init>", "(Ljava/lang/String;Ljava/lang/Exception;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label6);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(7, 3);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "rescheduleJob", "(Lorg/apache/openejb/quartz/TriggerKey;Lorg/apache/openejb/quartz/Trigger;)Ljava/util/Date;", null, new String[] { "java/rmi/RemoteException", "org/apache/openejb/quartz/SchedulerException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label1, "java/lang/RuntimeException");
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/rmi/RemoteException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, "org/apache/openejb/quartz/SchedulerException");
Label label4 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label4, "java/lang/Exception");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "java/rmi/server/RemoteObject", "ref", "Ljava/rmi/server/RemoteRef;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_rescheduleJob_39", "Ljava/lang/reflect/Method;");
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Object");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLdcInsn(new Long(-6542935860087805349L));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/rmi/server/RemoteRef", "invoke", "(Ljava/rmi/Remote;Ljava/lang/reflect/Method;[Ljava/lang/Object;J)Ljava/lang/Object;", true);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitTypeInsn(CHECKCAST, "java/util/Date");
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label1);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label2);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label4);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitTypeInsn(NEW, "java/rmi/UnexpectedException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("undeclared checked exception");
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/rmi/UnexpectedException", "<init>", "(Ljava/lang/String;Ljava/lang/Exception;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitMaxs(7, 4);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "resumeAll", "()V", null, new String[] { "java/rmi/RemoteException", "org/apache/openejb/quartz/SchedulerException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/lang/RuntimeException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, "java/rmi/RemoteException");
Label label4 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label4, "org/apache/openejb/quartz/SchedulerException");
Label label5 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label5, "java/lang/Exception");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "java/rmi/server/RemoteObject", "ref", "Ljava/rmi/server/RemoteRef;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_resumeAll_40", "Ljava/lang/reflect/Method;");
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitLdcInsn(new Long(6544465639644633234L));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/rmi/server/RemoteRef", "invoke", "(Ljava/rmi/Remote;Ljava/lang/reflect/Method;[Ljava/lang/Object;J)Ljava/lang/Object;", true);
methodVisitor.visitInsn(POP);
methodVisitor.visitLabel(label1);
Label label6 = new Label();
methodVisitor.visitJumpInsn(GOTO, label6);
methodVisitor.visitLabel(label2);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label4);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label5);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitTypeInsn(NEW, "java/rmi/UnexpectedException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("undeclared checked exception");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/rmi/UnexpectedException", "<init>", "(Ljava/lang/String;Ljava/lang/Exception;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label6);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(6, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "resumeJob", "(Lorg/apache/openejb/quartz/JobKey;)V", null, new String[] { "java/rmi/RemoteException", "org/apache/openejb/quartz/SchedulerException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/lang/RuntimeException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, "java/rmi/RemoteException");
Label label4 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label4, "org/apache/openejb/quartz/SchedulerException");
Label label5 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label5, "java/lang/Exception");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "java/rmi/server/RemoteObject", "ref", "Ljava/rmi/server/RemoteRef;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_resumeJob_41", "Ljava/lang/reflect/Method;");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Object");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLdcInsn(new Long(85405606979760311L));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/rmi/server/RemoteRef", "invoke", "(Ljava/rmi/Remote;Ljava/lang/reflect/Method;[Ljava/lang/Object;J)Ljava/lang/Object;", true);
methodVisitor.visitInsn(POP);
methodVisitor.visitLabel(label1);
Label label6 = new Label();
methodVisitor.visitJumpInsn(GOTO, label6);
methodVisitor.visitLabel(label2);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label4);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label5);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitTypeInsn(NEW, "java/rmi/UnexpectedException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("undeclared checked exception");
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/rmi/UnexpectedException", "<init>", "(Ljava/lang/String;Ljava/lang/Exception;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label6);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(7, 3);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "resumeJobs", "(Lorg/apache/openejb/quartz/impl/matchers/GroupMatcher;)V", null, new String[] { "java/rmi/RemoteException", "org/apache/openejb/quartz/SchedulerException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/lang/RuntimeException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, "java/rmi/RemoteException");
Label label4 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label4, "org/apache/openejb/quartz/SchedulerException");
Label label5 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label5, "java/lang/Exception");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "java/rmi/server/RemoteObject", "ref", "Ljava/rmi/server/RemoteRef;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_resumeJobs_42", "Ljava/lang/reflect/Method;");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Object");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLdcInsn(new Long(7080691189565323939L));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/rmi/server/RemoteRef", "invoke", "(Ljava/rmi/Remote;Ljava/lang/reflect/Method;[Ljava/lang/Object;J)Ljava/lang/Object;", true);
methodVisitor.visitInsn(POP);
methodVisitor.visitLabel(label1);
Label label6 = new Label();
methodVisitor.visitJumpInsn(GOTO, label6);
methodVisitor.visitLabel(label2);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label4);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label5);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitTypeInsn(NEW, "java/rmi/UnexpectedException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("undeclared checked exception");
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/rmi/UnexpectedException", "<init>", "(Ljava/lang/String;Ljava/lang/Exception;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label6);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(7, 3);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "resumeTrigger", "(Lorg/apache/openejb/quartz/TriggerKey;)V", null, new String[] { "java/rmi/RemoteException", "org/apache/openejb/quartz/SchedulerException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/lang/RuntimeException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, "java/rmi/RemoteException");
Label label4 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label4, "org/apache/openejb/quartz/SchedulerException");
Label label5 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label5, "java/lang/Exception");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "java/rmi/server/RemoteObject", "ref", "Ljava/rmi/server/RemoteRef;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_resumeTrigger_43", "Ljava/lang/reflect/Method;");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Object");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLdcInsn(new Long(1103652291697918174L));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/rmi/server/RemoteRef", "invoke", "(Ljava/rmi/Remote;Ljava/lang/reflect/Method;[Ljava/lang/Object;J)Ljava/lang/Object;", true);
methodVisitor.visitInsn(POP);
methodVisitor.visitLabel(label1);
Label label6 = new Label();
methodVisitor.visitJumpInsn(GOTO, label6);
methodVisitor.visitLabel(label2);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label4);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label5);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitTypeInsn(NEW, "java/rmi/UnexpectedException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("undeclared checked exception");
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/rmi/UnexpectedException", "<init>", "(Ljava/lang/String;Ljava/lang/Exception;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label6);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(7, 3);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "resumeTriggers", "(Lorg/apache/openejb/quartz/impl/matchers/GroupMatcher;)V", null, new String[] { "java/rmi/RemoteException", "org/apache/openejb/quartz/SchedulerException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/lang/RuntimeException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, "java/rmi/RemoteException");
Label label4 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label4, "org/apache/openejb/quartz/SchedulerException");
Label label5 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label5, "java/lang/Exception");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "java/rmi/server/RemoteObject", "ref", "Ljava/rmi/server/RemoteRef;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_resumeTriggers_44", "Ljava/lang/reflect/Method;");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Object");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLdcInsn(new Long(316892067472367515L));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/rmi/server/RemoteRef", "invoke", "(Ljava/rmi/Remote;Ljava/lang/reflect/Method;[Ljava/lang/Object;J)Ljava/lang/Object;", true);
methodVisitor.visitInsn(POP);
methodVisitor.visitLabel(label1);
Label label6 = new Label();
methodVisitor.visitJumpInsn(GOTO, label6);
methodVisitor.visitLabel(label2);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label4);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label5);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitTypeInsn(NEW, "java/rmi/UnexpectedException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("undeclared checked exception");
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/rmi/UnexpectedException", "<init>", "(Ljava/lang/String;Ljava/lang/Exception;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label6);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(7, 3);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "runningSince", "()Ljava/util/Date;", null, new String[] { "java/rmi/RemoteException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label1, "java/lang/RuntimeException");
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/rmi/RemoteException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, "java/lang/Exception");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "java/rmi/server/RemoteObject", "ref", "Ljava/rmi/server/RemoteRef;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_runningSince_45", "Ljava/lang/reflect/Method;");
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitLdcInsn(new Long(-1739625058868381113L));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/rmi/server/RemoteRef", "invoke", "(Ljava/rmi/Remote;Ljava/lang/reflect/Method;[Ljava/lang/Object;J)Ljava/lang/Object;", true);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitTypeInsn(CHECKCAST, "java/util/Date");
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label1);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label2);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitTypeInsn(NEW, "java/rmi/UnexpectedException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("undeclared checked exception");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/rmi/UnexpectedException", "<init>", "(Ljava/lang/String;Ljava/lang/Exception;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitMaxs(6, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "scheduleJob", "(Lorg/apache/openejb/quartz/JobDetail;Ljava/util/Set;Z)V", null, new String[] { "java/rmi/RemoteException", "org/apache/openejb/quartz/SchedulerException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/lang/RuntimeException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, "java/rmi/RemoteException");
Label label4 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label4, "org/apache/openejb/quartz/SchedulerException");
Label label5 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label5, "java/lang/Exception");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "java/rmi/server/RemoteObject", "ref", "Ljava/rmi/server/RemoteRef;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_scheduleJob_46", "Ljava/lang/reflect/Method;");
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Object");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitVarInsn(ILOAD, 3);
Label label6 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label6);
methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/Boolean", "TRUE", "Ljava/lang/Boolean;");
Label label7 = new Label();
methodVisitor.visitJumpInsn(GOTO, label7);
methodVisitor.visitLabel(label6);
methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/Boolean", "FALSE", "Ljava/lang/Boolean;");
methodVisitor.visitLabel(label7);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLdcInsn(new Long(-2860300690822357486L));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/rmi/server/RemoteRef", "invoke", "(Ljava/rmi/Remote;Ljava/lang/reflect/Method;[Ljava/lang/Object;J)Ljava/lang/Object;", true);
methodVisitor.visitInsn(POP);
methodVisitor.visitLabel(label1);
Label label8 = new Label();
methodVisitor.visitJumpInsn(GOTO, label8);
methodVisitor.visitLabel(label2);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label4);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label5);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitTypeInsn(NEW, "java/rmi/UnexpectedException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("undeclared checked exception");
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/rmi/UnexpectedException", "<init>", "(Ljava/lang/String;Ljava/lang/Exception;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label8);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(7, 5);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "scheduleJob", "(Lorg/apache/openejb/quartz/JobDetail;Lorg/apache/openejb/quartz/Trigger;)Ljava/util/Date;", null, new String[] { "java/rmi/RemoteException", "org/apache/openejb/quartz/SchedulerException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label1, "java/lang/RuntimeException");
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/rmi/RemoteException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, "org/apache/openejb/quartz/SchedulerException");
Label label4 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label4, "java/lang/Exception");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "java/rmi/server/RemoteObject", "ref", "Ljava/rmi/server/RemoteRef;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_scheduleJob_47", "Ljava/lang/reflect/Method;");
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Object");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLdcInsn(new Long(4944457543332629245L));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/rmi/server/RemoteRef", "invoke", "(Ljava/rmi/Remote;Ljava/lang/reflect/Method;[Ljava/lang/Object;J)Ljava/lang/Object;", true);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitTypeInsn(CHECKCAST, "java/util/Date");
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label1);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label2);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label4);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitTypeInsn(NEW, "java/rmi/UnexpectedException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("undeclared checked exception");
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/rmi/UnexpectedException", "<init>", "(Ljava/lang/String;Ljava/lang/Exception;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitMaxs(7, 4);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "scheduleJob", "(Lorg/apache/openejb/quartz/Trigger;)Ljava/util/Date;", null, new String[] { "java/rmi/RemoteException", "org/apache/openejb/quartz/SchedulerException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label1, "java/lang/RuntimeException");
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/rmi/RemoteException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, "org/apache/openejb/quartz/SchedulerException");
Label label4 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label4, "java/lang/Exception");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "java/rmi/server/RemoteObject", "ref", "Ljava/rmi/server/RemoteRef;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_scheduleJob_48", "Ljava/lang/reflect/Method;");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Object");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLdcInsn(new Long(-6865148385642356285L));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/rmi/server/RemoteRef", "invoke", "(Ljava/rmi/Remote;Ljava/lang/reflect/Method;[Ljava/lang/Object;J)Ljava/lang/Object;", true);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitTypeInsn(CHECKCAST, "java/util/Date");
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitLabel(label1);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label2);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label4);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitTypeInsn(NEW, "java/rmi/UnexpectedException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("undeclared checked exception");
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/rmi/UnexpectedException", "<init>", "(Ljava/lang/String;Ljava/lang/Exception;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitMaxs(7, 3);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "scheduleJobs", "(Ljava/util/Map;Z)V", null, new String[] { "java/rmi/RemoteException", "org/apache/openejb/quartz/SchedulerException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/lang/RuntimeException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, "java/rmi/RemoteException");
Label label4 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label4, "org/apache/openejb/quartz/SchedulerException");
Label label5 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label5, "java/lang/Exception");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "java/rmi/server/RemoteObject", "ref", "Ljava/rmi/server/RemoteRef;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_scheduleJobs_49", "Ljava/lang/reflect/Method;");
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Object");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ILOAD, 2);
Label label6 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label6);
methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/Boolean", "TRUE", "Ljava/lang/Boolean;");
Label label7 = new Label();
methodVisitor.visitJumpInsn(GOTO, label7);
methodVisitor.visitLabel(label6);
methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/Boolean", "FALSE", "Ljava/lang/Boolean;");
methodVisitor.visitLabel(label7);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLdcInsn(new Long(2404438458719160003L));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/rmi/server/RemoteRef", "invoke", "(Ljava/rmi/Remote;Ljava/lang/reflect/Method;[Ljava/lang/Object;J)Ljava/lang/Object;", true);
methodVisitor.visitInsn(POP);
methodVisitor.visitLabel(label1);
Label label8 = new Label();
methodVisitor.visitJumpInsn(GOTO, label8);
methodVisitor.visitLabel(label2);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label4);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label5);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitTypeInsn(NEW, "java/rmi/UnexpectedException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("undeclared checked exception");
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/rmi/UnexpectedException", "<init>", "(Ljava/lang/String;Ljava/lang/Exception;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label8);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(7, 4);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "shutdown", "()V", null, new String[] { "java/rmi/RemoteException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/lang/RuntimeException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, "java/rmi/RemoteException");
Label label4 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label4, "java/lang/Exception");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "java/rmi/server/RemoteObject", "ref", "Ljava/rmi/server/RemoteRef;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_shutdown_50", "Ljava/lang/reflect/Method;");
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitLdcInsn(new Long(-7207851917985848402L));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/rmi/server/RemoteRef", "invoke", "(Ljava/rmi/Remote;Ljava/lang/reflect/Method;[Ljava/lang/Object;J)Ljava/lang/Object;", true);
methodVisitor.visitInsn(POP);
methodVisitor.visitLabel(label1);
Label label5 = new Label();
methodVisitor.visitJumpInsn(GOTO, label5);
methodVisitor.visitLabel(label2);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label4);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitTypeInsn(NEW, "java/rmi/UnexpectedException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("undeclared checked exception");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/rmi/UnexpectedException", "<init>", "(Ljava/lang/String;Ljava/lang/Exception;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label5);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(6, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "shutdown", "(Z)V", null, new String[] { "java/rmi/RemoteException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/lang/RuntimeException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, "java/rmi/RemoteException");
Label label4 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label4, "java/lang/Exception");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "java/rmi/server/RemoteObject", "ref", "Ljava/rmi/server/RemoteRef;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_shutdown_51", "Ljava/lang/reflect/Method;");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Object");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ILOAD, 1);
Label label5 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label5);
methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/Boolean", "TRUE", "Ljava/lang/Boolean;");
Label label6 = new Label();
methodVisitor.visitJumpInsn(GOTO, label6);
methodVisitor.visitLabel(label5);
methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/Boolean", "FALSE", "Ljava/lang/Boolean;");
methodVisitor.visitLabel(label6);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLdcInsn(new Long(-7158426071079062438L));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/rmi/server/RemoteRef", "invoke", "(Ljava/rmi/Remote;Ljava/lang/reflect/Method;[Ljava/lang/Object;J)Ljava/lang/Object;", true);
methodVisitor.visitInsn(POP);
methodVisitor.visitLabel(label1);
Label label7 = new Label();
methodVisitor.visitJumpInsn(GOTO, label7);
methodVisitor.visitLabel(label2);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label4);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitTypeInsn(NEW, "java/rmi/UnexpectedException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("undeclared checked exception");
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/rmi/UnexpectedException", "<init>", "(Ljava/lang/String;Ljava/lang/Exception;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label7);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(7, 3);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "standby", "()V", null, new String[] { "java/rmi/RemoteException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/lang/RuntimeException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, "java/rmi/RemoteException");
Label label4 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label4, "java/lang/Exception");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "java/rmi/server/RemoteObject", "ref", "Ljava/rmi/server/RemoteRef;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_standby_52", "Ljava/lang/reflect/Method;");
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitLdcInsn(new Long(7161048918451732526L));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/rmi/server/RemoteRef", "invoke", "(Ljava/rmi/Remote;Ljava/lang/reflect/Method;[Ljava/lang/Object;J)Ljava/lang/Object;", true);
methodVisitor.visitInsn(POP);
methodVisitor.visitLabel(label1);
Label label5 = new Label();
methodVisitor.visitJumpInsn(GOTO, label5);
methodVisitor.visitLabel(label2);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label4);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitTypeInsn(NEW, "java/rmi/UnexpectedException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("undeclared checked exception");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/rmi/UnexpectedException", "<init>", "(Ljava/lang/String;Ljava/lang/Exception;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label5);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(6, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "start", "()V", null, new String[] { "java/rmi/RemoteException", "org/apache/openejb/quartz/SchedulerException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/lang/RuntimeException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, "java/rmi/RemoteException");
Label label4 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label4, "org/apache/openejb/quartz/SchedulerException");
Label label5 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label5, "java/lang/Exception");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "java/rmi/server/RemoteObject", "ref", "Ljava/rmi/server/RemoteRef;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_start_53", "Ljava/lang/reflect/Method;");
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitLdcInsn(new Long(-8025343665958530775L));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/rmi/server/RemoteRef", "invoke", "(Ljava/rmi/Remote;Ljava/lang/reflect/Method;[Ljava/lang/Object;J)Ljava/lang/Object;", true);
methodVisitor.visitInsn(POP);
methodVisitor.visitLabel(label1);
Label label6 = new Label();
methodVisitor.visitJumpInsn(GOTO, label6);
methodVisitor.visitLabel(label2);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label4);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label5);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitTypeInsn(NEW, "java/rmi/UnexpectedException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("undeclared checked exception");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/rmi/UnexpectedException", "<init>", "(Ljava/lang/String;Ljava/lang/Exception;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label6);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(6, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "startDelayed", "(I)V", null, new String[] { "java/rmi/RemoteException", "org/apache/openejb/quartz/SchedulerException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/lang/RuntimeException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, "java/rmi/RemoteException");
Label label4 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label4, "org/apache/openejb/quartz/SchedulerException");
Label label5 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label5, "java/lang/Exception");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "java/rmi/server/RemoteObject", "ref", "Ljava/rmi/server/RemoteRef;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_startDelayed_54", "Ljava/lang/reflect/Method;");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Object");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitTypeInsn(NEW, "java/lang/Integer");
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ILOAD, 1);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/Integer", "<init>", "(I)V", false);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLdcInsn(new Long(-1476976461109028800L));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/rmi/server/RemoteRef", "invoke", "(Ljava/rmi/Remote;Ljava/lang/reflect/Method;[Ljava/lang/Object;J)Ljava/lang/Object;", true);
methodVisitor.visitInsn(POP);
methodVisitor.visitLabel(label1);
Label label6 = new Label();
methodVisitor.visitJumpInsn(GOTO, label6);
methodVisitor.visitLabel(label2);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label4);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label5);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitTypeInsn(NEW, "java/rmi/UnexpectedException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("undeclared checked exception");
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/rmi/UnexpectedException", "<init>", "(Ljava/lang/String;Ljava/lang/Exception;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label6);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(9, 3);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "supportsPersistence", "()Z", null, new String[] { "java/rmi/RemoteException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label1, "java/lang/RuntimeException");
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/rmi/RemoteException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, "java/lang/Exception");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "java/rmi/server/RemoteObject", "ref", "Ljava/rmi/server/RemoteRef;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_supportsPersistence_55", "Ljava/lang/reflect/Method;");
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitLdcInsn(new Long(-5767630451452602400L));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/rmi/server/RemoteRef", "invoke", "(Ljava/rmi/Remote;Ljava/lang/reflect/Method;[Ljava/lang/Object;J)Ljava/lang/Object;", true);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/Boolean");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Boolean", "booleanValue", "()Z", false);
methodVisitor.visitInsn(IRETURN);
methodVisitor.visitLabel(label1);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label2);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitTypeInsn(NEW, "java/rmi/UnexpectedException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("undeclared checked exception");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/rmi/UnexpectedException", "<init>", "(Ljava/lang/String;Ljava/lang/Exception;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitMaxs(6, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "triggerJob", "(Lorg/apache/openejb/quartz/JobKey;Lorg/apache/openejb/quartz/JobDataMap;)V", null, new String[] { "java/rmi/RemoteException", "org/apache/openejb/quartz/SchedulerException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/lang/RuntimeException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, "java/rmi/RemoteException");
Label label4 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label4, "org/apache/openejb/quartz/SchedulerException");
Label label5 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label5, "java/lang/Exception");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "java/rmi/server/RemoteObject", "ref", "Ljava/rmi/server/RemoteRef;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_triggerJob_56", "Ljava/lang/reflect/Method;");
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Object");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLdcInsn(new Long(-1585175841511357332L));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/rmi/server/RemoteRef", "invoke", "(Ljava/rmi/Remote;Ljava/lang/reflect/Method;[Ljava/lang/Object;J)Ljava/lang/Object;", true);
methodVisitor.visitInsn(POP);
methodVisitor.visitLabel(label1);
Label label6 = new Label();
methodVisitor.visitJumpInsn(GOTO, label6);
methodVisitor.visitLabel(label2);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label4);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label5);
methodVisitor.visitVarInsn(ASTORE, 3);
methodVisitor.visitTypeInsn(NEW, "java/rmi/UnexpectedException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("undeclared checked exception");
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/rmi/UnexpectedException", "<init>", "(Ljava/lang/String;Ljava/lang/Exception;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label6);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(7, 4);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "triggerJob", "(Lorg/apache/openejb/quartz/spi/OperableTrigger;)V", null, new String[] { "java/rmi/RemoteException", "org/apache/openejb/quartz/SchedulerException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/lang/RuntimeException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, "java/rmi/RemoteException");
Label label4 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label4, "org/apache/openejb/quartz/SchedulerException");
Label label5 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label5, "java/lang/Exception");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "java/rmi/server/RemoteObject", "ref", "Ljava/rmi/server/RemoteRef;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_triggerJob_57", "Ljava/lang/reflect/Method;");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Object");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLdcInsn(new Long(5598451830209081494L));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/rmi/server/RemoteRef", "invoke", "(Ljava/rmi/Remote;Ljava/lang/reflect/Method;[Ljava/lang/Object;J)Ljava/lang/Object;", true);
methodVisitor.visitInsn(POP);
methodVisitor.visitLabel(label1);
Label label6 = new Label();
methodVisitor.visitJumpInsn(GOTO, label6);
methodVisitor.visitLabel(label2);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label4);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label5);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitTypeInsn(NEW, "java/rmi/UnexpectedException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("undeclared checked exception");
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/rmi/UnexpectedException", "<init>", "(Ljava/lang/String;Ljava/lang/Exception;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label6);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(7, 3);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "unscheduleJob", "(Lorg/apache/openejb/quartz/TriggerKey;)Z", null, new String[] { "java/rmi/RemoteException", "org/apache/openejb/quartz/SchedulerException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label1, "java/lang/RuntimeException");
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/rmi/RemoteException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, "org/apache/openejb/quartz/SchedulerException");
Label label4 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label4, "java/lang/Exception");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "java/rmi/server/RemoteObject", "ref", "Ljava/rmi/server/RemoteRef;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_unscheduleJob_58", "Ljava/lang/reflect/Method;");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Object");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLdcInsn(new Long(-4592142908438852383L));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/rmi/server/RemoteRef", "invoke", "(Ljava/rmi/Remote;Ljava/lang/reflect/Method;[Ljava/lang/Object;J)Ljava/lang/Object;", true);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/Boolean");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Boolean", "booleanValue", "()Z", false);
methodVisitor.visitInsn(IRETURN);
methodVisitor.visitLabel(label1);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label2);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label4);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitTypeInsn(NEW, "java/rmi/UnexpectedException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("undeclared checked exception");
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/rmi/UnexpectedException", "<init>", "(Ljava/lang/String;Ljava/lang/Exception;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitMaxs(7, 3);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "unscheduleJobs", "(Ljava/util/List;)Z", null, new String[] { "java/rmi/RemoteException", "org/apache/openejb/quartz/SchedulerException" });
methodVisitor.visitCode();
Label label0 = new Label();
Label label1 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label1, "java/lang/RuntimeException");
Label label2 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/rmi/RemoteException");
Label label3 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label3, "org/apache/openejb/quartz/SchedulerException");
Label label4 = new Label();
methodVisitor.visitTryCatchBlock(label0, label1, label4, "java/lang/Exception");
methodVisitor.visitLabel(label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "java/rmi/server/RemoteObject", "ref", "Ljava/rmi/server/RemoteRef;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/openejb/quartz/core/QuartzScheduler_Stub", "$method_unscheduleJobs_59", "Ljava/lang/reflect/Method;");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Object");
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(AASTORE);
methodVisitor.visitLdcInsn(new Long(1385849655203364760L));
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/rmi/server/RemoteRef", "invoke", "(Ljava/rmi/Remote;Ljava/lang/reflect/Method;[Ljava/lang/Object;J)Ljava/lang/Object;", true);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/Boolean");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Boolean", "booleanValue", "()Z", false);
methodVisitor.visitInsn(IRETURN);
methodVisitor.visitLabel(label1);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label2);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label3);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitLabel(label4);
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitTypeInsn(NEW, "java/rmi/UnexpectedException");
methodVisitor.visitInsn(DUP);
methodVisitor.visitLdcInsn("undeclared checked exception");
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/rmi/UnexpectedException", "<init>", "(Ljava/lang/String;Ljava/lang/Exception;)V", false);
methodVisitor.visitInsn(ATHROW);
methodVisitor.visitMaxs(7, 3);
methodVisitor.visitEnd();
}
classWriter.visitEnd();

return classWriter.toByteArray();
}
}
