package asm.org.apache.commons.jcs.utils.struct;
import org.objectweb.asm.AnnotationVisitor;
import org.objectweb.asm.Attribute;
import org.objectweb.asm.ClassReader;
import org.objectweb.asm.ClassWriter;
import org.objectweb.asm.ConstantDynamic;
import org.objectweb.asm.FieldVisitor;
import org.objectweb.asm.Handle;
import org.objectweb.asm.Label;
import org.objectweb.asm.MethodVisitor;
import org.objectweb.asm.Opcodes;
import org.objectweb.asm.RecordComponentVisitor;
import org.objectweb.asm.Type;
import org.objectweb.asm.TypePath;
public class DoubleLinkedListDump implements Opcodes {

public static byte[] dump () throws Exception {

ClassWriter classWriter = new ClassWriter(0);
FieldVisitor fieldVisitor;
RecordComponentVisitor recordComponentVisitor;
MethodVisitor methodVisitor;
AnnotationVisitor annotationVisitor0;

classWriter.visit(V1_6, ACC_PUBLIC | ACC_SUPER, "org/apache/commons/jcs/utils/struct/DoubleLinkedList", "<T:Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;>Ljava/lang/Object;", "java/lang/Object", null);

{
fieldVisitor = classWriter.visitField(ACC_PRIVATE, "size", "I", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE | ACC_FINAL | ACC_STATIC, "log", "Lorg/apache/commons/logging/Log;", null, null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE, "first", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;", "TT;", null);
fieldVisitor.visitEnd();
}
{
fieldVisitor = classWriter.visitField(ACC_PRIVATE, "last", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;", "TT;", null);
fieldVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "<init>", "()V", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/Object", "<init>", "()V", false);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedList", "size", "I");
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(2, 1);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC | ACC_SYNCHRONIZED, "addLast", "(Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;)V", "(TT;)V", null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedList", "first", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedList", "first", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
Label label1 = new Label();
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedList", "last", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedListNode", "next", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedList", "last", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedListNode", "prev", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedList", "last", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedList", "size", "I");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IADD);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedList", "size", "I");
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(3, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC | ACC_SYNCHRONIZED, "addFirst", "(Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;)V", "(TT;)V", null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedList", "last", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedList", "last", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
Label label1 = new Label();
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedList", "first", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedListNode", "prev", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedList", "first", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedListNode", "next", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedList", "first", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedList", "size", "I");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IADD);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedList", "size", "I");
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(3, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC | ACC_SYNCHRONIZED, "getLast", "()Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;", "()TT;", null);
methodVisitor.visitCode();
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/commons/jcs/utils/struct/DoubleLinkedList", "log", "Lorg/apache/commons/logging/Log;");
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/commons/logging/Log", "isDebugEnabled", "()Z", true);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/commons/jcs/utils/struct/DoubleLinkedList", "log", "Lorg/apache/commons/logging/Log;");
methodVisitor.visitLdcInsn("returning last node");
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/commons/logging/Log", "debug", "(Ljava/lang/Object;)V", true);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedList", "last", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(2, 1);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC | ACC_SYNCHRONIZED, "getFirst", "()Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;", "()TT;", null);
methodVisitor.visitCode();
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/commons/jcs/utils/struct/DoubleLinkedList", "log", "Lorg/apache/commons/logging/Log;");
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/commons/logging/Log", "isDebugEnabled", "()Z", true);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/commons/jcs/utils/struct/DoubleLinkedList", "log", "Lorg/apache/commons/logging/Log;");
methodVisitor.visitLdcInsn("returning first node");
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/commons/logging/Log", "debug", "(Ljava/lang/Object;)V", true);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedList", "first", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(2, 1);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC | ACC_SYNCHRONIZED, "makeFirst", "(Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;)V", "(TT;)V", null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedListNode", "prev", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label0);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedListNode", "prev", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedListNode", "next", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedListNode", "next", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedListNode", "next", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
Label label1 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedListNode", "prev", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedList", "last", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedList", "last", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedListNode", "next", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
Label label2 = new Label();
methodVisitor.visitJumpInsn(GOTO, label2);
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedListNode", "next", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedListNode", "prev", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedListNode", "prev", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedList", "first", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedListNode", "prev", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedList", "first", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedListNode", "next", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedListNode", "prev", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedList", "first", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(2, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC | ACC_SYNCHRONIZED, "makeLast", "(Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;)V", "(TT;)V", null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedListNode", "next", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label0);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedListNode", "prev", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
Label label1 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedListNode", "prev", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedListNode", "next", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedListNode", "next", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
Label label2 = new Label();
methodVisitor.visitJumpInsn(GOTO, label2);
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedList", "last", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedList", "first", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedList", "last", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
Label label3 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedList", "last", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedListNode", "next", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedList", "last", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedListNode", "prev", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedListNode", "next", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedList", "last", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(2, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC | ACC_SYNCHRONIZED, "removeAll", "()V", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedList", "first", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitVarInsn(ASTORE, 1);
Label label0 = new Label();
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/apache/commons/jcs/utils/struct/DoubleLinkedListNode"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
Label label1 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedListNode", "prev", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
Label label2 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label2);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedListNode", "prev", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedListNode", "next", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitVarInsn(ASTORE, 2);
methodVisitor.visitVarInsn(ALOAD, 2);
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitJumpInsn(GOTO, label0);
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(DUP_X1);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedList", "last", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedList", "first", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedList", "size", "I");
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(4, 3);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC | ACC_SYNCHRONIZED, "remove", "(Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;)Z", "(TT;)Z", null);
methodVisitor.visitCode();
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/commons/jcs/utils/struct/DoubleLinkedList", "log", "Lorg/apache/commons/logging/Log;");
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/commons/logging/Log", "isDebugEnabled", "()Z", true);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/commons/jcs/utils/struct/DoubleLinkedList", "log", "Lorg/apache/commons/logging/Log;");
methodVisitor.visitLdcInsn("removing node");
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/commons/logging/Log", "debug", "(Ljava/lang/Object;)V", true);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedListNode", "next", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
Label label1 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedListNode", "prev", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
Label label2 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label2);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedList", "first", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
Label label3 = new Label();
methodVisitor.visitJumpInsn(IF_ACMPNE, label3);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedList", "last", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitJumpInsn(IF_ACMPNE, label3);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(DUP_X1);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedList", "last", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedList", "first", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitJumpInsn(GOTO, label3);
methodVisitor.visitLabel(label2);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedListNode", "prev", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedList", "last", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedList", "last", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedListNode", "next", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedListNode", "prev", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitJumpInsn(GOTO, label3);
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedListNode", "prev", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
Label label4 = new Label();
methodVisitor.visitJumpInsn(IFNONNULL, label4);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedListNode", "next", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedList", "first", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedList", "first", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedListNode", "prev", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedListNode", "next", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitJumpInsn(GOTO, label3);
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedListNode", "prev", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedListNode", "next", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedListNode", "next", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedListNode", "next", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedListNode", "prev", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedListNode", "prev", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ACONST_NULL);
methodVisitor.visitInsn(DUP_X1);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedListNode", "next", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedListNode", "prev", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitInsn(DUP);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedList", "size", "I");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ISUB);
methodVisitor.visitFieldInsn(PUTFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedList", "size", "I");
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IRETURN);
methodVisitor.visitMaxs(4, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC | ACC_SYNCHRONIZED, "removeLast", "()Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;", "()TT;", null);
methodVisitor.visitCode();
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/commons/jcs/utils/struct/DoubleLinkedList", "log", "Lorg/apache/commons/logging/Log;");
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/commons/logging/Log", "isDebugEnabled", "()Z", true);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/commons/jcs/utils/struct/DoubleLinkedList", "log", "Lorg/apache/commons/logging/Log;");
methodVisitor.visitLdcInsn("removing last node");
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/commons/logging/Log", "debug", "(Ljava/lang/Object;)V", true);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedList", "last", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedList", "last", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
Label label1 = new Label();
methodVisitor.visitJumpInsn(IFNULL, label1);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedList", "last", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/commons/jcs/utils/struct/DoubleLinkedList", "remove", "(Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;)Z", false);
methodVisitor.visitInsn(POP);
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/apache/commons/jcs/utils/struct/DoubleLinkedListNode"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitInsn(ARETURN);
methodVisitor.visitMaxs(2, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC | ACC_SYNCHRONIZED, "size", "()I", null, null);
methodVisitor.visitCode();
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedList", "size", "I");
methodVisitor.visitInsn(IRETURN);
methodVisitor.visitMaxs(1, 1);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC | ACC_SYNCHRONIZED, "debugDumpEntries", "()V", null, null);
methodVisitor.visitCode();
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/commons/jcs/utils/struct/DoubleLinkedList", "log", "Lorg/apache/commons/logging/Log;");
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/commons/logging/Log", "isDebugEnabled", "()Z", true);
Label label0 = new Label();
methodVisitor.visitJumpInsn(IFEQ, label0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/commons/jcs/utils/struct/DoubleLinkedList", "log", "Lorg/apache/commons/logging/Log;");
methodVisitor.visitLdcInsn("dumping Entries");
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/commons/logging/Log", "debug", "(Ljava/lang/Object;)V", true);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedList", "first", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitVarInsn(ASTORE, 1);
Label label1 = new Label();
methodVisitor.visitLabel(label1);
methodVisitor.visitFrame(Opcodes.F_APPEND,1, new Object[] {"org/apache/commons/jcs/utils/struct/DoubleLinkedListNode"}, 0, null);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitJumpInsn(IFNULL, label0);
methodVisitor.visitFieldInsn(GETSTATIC, "org/apache/commons/jcs/utils/struct/DoubleLinkedList", "log", "Lorg/apache/commons/logging/Log;");
methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
methodVisitor.visitInsn(DUP);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
methodVisitor.visitLdcInsn("dump Entries> payload= '");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "org/apache/commons/jcs/utils/struct/DoubleLinkedListNode", "getPayload", "()Ljava/lang/Object;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/Object;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitLdcInsn("'");
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
methodVisitor.visitMethodInsn(INVOKEINTERFACE, "org/apache/commons/logging/Log", "debug", "(Ljava/lang/Object;)V", true);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(GETFIELD, "org/apache/commons/jcs/utils/struct/DoubleLinkedListNode", "next", "Lorg/apache/commons/jcs/utils/struct/DoubleLinkedListNode;");
methodVisitor.visitVarInsn(ASTORE, 1);
methodVisitor.visitJumpInsn(GOTO, label1);
methodVisitor.visitLabel(label0);
methodVisitor.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(3, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_STATIC, "<clinit>", "()V", null, null);
methodVisitor.visitCode();
methodVisitor.visitLdcInsn(Type.getType("Lorg/apache/commons/jcs/utils/struct/DoubleLinkedList;"));
methodVisitor.visitMethodInsn(INVOKESTATIC, "org/apache/commons/logging/LogFactory", "getLog", "(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;", false);
methodVisitor.visitFieldInsn(PUTSTATIC, "org/apache/commons/jcs/utils/struct/DoubleLinkedList", "log", "Lorg/apache/commons/logging/Log;");
methodVisitor.visitInsn(RETURN);
methodVisitor.visitMaxs(1, 0);
methodVisitor.visitEnd();
}
classWriter.visitEnd();

return classWriter.toByteArray();
}
}
